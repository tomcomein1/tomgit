/*****************************************************
**函数描述     : 通知存款登记簿查询
**函数用途     : 
**输入         ：
**输出         :
**创建日期     ：2014/03/28
**最后修改日期 ：
**Create by    : wangxiaorui
*****************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include <time.h>

#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pbappdb.h"
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"

#include "pbdb.h"
#include "fml32.h"
#include "atmi.h"
#include "pbsrv.h"
#include "macrodef.h"

int Acc_notice_qry()
{				
	char err_msg[256+1];
	char tran_seqno[ 10+1 ];
	char cardno[32+1];
	char acc_out[32+1];/*转出账号*/
	char accseq[4+1]; /*子账户序号*/
	char bgnDt[10+1]; /*起始日期*/
	char endDt[10+1];/*结束日期*/
	char str_trandate[10+1];
	char str_trandate2[10+1];
	char noticeStat[2+1];/*通知状态*/
	char noticeDealStat[2+1]; /*通知处理状态*/
	char noticeNb[32+1]; /*通知书编号*/
	char noticeDt[10+1]; /*通知日期*/
	char drawDt[10+1 ]; /*支取日期*/
	char noticeAmt[16+1 ]; /*通知金额*/
	char noticeTyp[2+1]; /*通知方式*/
	/*Added by MSJ for SC6000Z项目   */
	struct head corehead_pkgout;
	char recv_filename[64+1];
	char DataFile[128+1];				/*文件名*/
	char tmp_str[20+1];
	char buff[1024];
	FILE *fp;
	char *cp = NULL;
	
	char Num[8];
	double amt=0;
	char noticeseq[32+1];
	long num=0;
	long num1=0;
	long i=0;

        struct head head;
        FBFR32 * sendbuf;
        FBFR32 * recvbuf;
        long sendlen = 0;
        long reclen = 0;
        long hoststat = 0;
        long errcode = 0;
        
        memset( err_msg,		0x00,	sizeof( err_msg ) );
        memset( tran_seqno,		0x00,	sizeof( tran_seqno ) );
        memset( &head,			0x00,	sizeof( struct head ) );
        memset( cardno,			0x00,	sizeof( cardno ) );
        memset( acc_out,		0x00,	sizeof( acc_out ) );
        memset( accseq,			0x00,	sizeof( accseq ) );
        memset( bgnDt,			0x00,	sizeof( bgnDt ) );
        memset( endDt,			0x00,	sizeof( endDt ) );
        memset( str_trandate,		0x00,	sizeof( str_trandate ) );
        memset( str_trandate2,		0x00,	sizeof( str_trandate2 ) );
        memset( noticeStat,		0x00,	sizeof( noticeStat ) );
	memset( noticeDealStat,		0x00,	sizeof( noticeDealStat ) );
	memset( noticeNb,		0x00,	sizeof( noticeNb ) );
	memset( noticeDt,		0x00,	sizeof( noticeDt ) );
	memset( drawDt,			0x00,	sizeof( drawDt ) );
	memset( noticeAmt,		0x00,	sizeof( noticeAmt ) );
	memset( noticeTyp,		0x00,	sizeof( noticeTyp ) );
	memset( Num,			0x00,	sizeof( Num ) );
	memset( &corehead_pkgout, 0, sizeof( struct head));
	memset( recv_filename, 0x00,	sizeof( recv_filename ) );
	memset( DataFile, 0x00,	sizeof( DataFile ) );
	memset( tmp_str, 0x00,	sizeof( tmp_str ) );
	memset( buff, 0x00,	sizeof( buff ) );
	memset( noticeseq,		0x00,	sizeof( noticeseq ) );
        
        /*1、取农信银上送数据*/
        GetPoolDataByName( "BUSIIB", "noticeAcct", 0, 0, cardno, 0 );
        rtrim( cardno );
        GetPoolDataByName( "BUSIIB", "subAcct", 0, 0, acc_out, 0 );
        rtrim( acc_out );
        GetPoolDataByName( "BUSIIB", "billNb", 0, 0, accseq, 0 );
        rtrim( accseq );
        GetPoolDataByName( "BUSIIB", "bgnDt", 0, 0, bgnDt, 0 );
        rtrim( bgnDt );
        GetPoolDataByName( "BUSIIB", "endDt", 0, 0, endDt, 0 );
        rtrim( endDt );
        GetPoolDataByName( "BUSIIB", "noticeStat", 0, 0, noticeStat, 0 );
        rtrim( noticeStat );
        GetPoolDataByName( "BUSIIB", "noticeDealStat", 0, 0, noticeDealStat, 0 );
        rtrim( noticeDealStat);
        
	WriteLog(APP_LVL, "cardno %s!", cardno );
	WriteLog(APP_LVL, "acc_out %s!", acc_out);
        WriteLog(APP_LVL, "accseq %s!", accseq );
        WriteLog(APP_LVL, "bgnDt %s!", bgnDt );
        WriteLog(APP_LVL, "endDt %s!", endDt );
        WriteLog(APP_LVL, "noticeStat[%s]", noticeStat );
        WriteLog(APP_LVL, "noticeDealStat[%s]", noticeDealStat );
        	
	/*2、调用核心查询接口*/
	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, tran_seqno, 0);
	/**************** 分配内存 *****************/
        sendbuf = (FBFR32 *)tpalloc("FML32", NULL, PBFDATA_LEN);
        if(sendbuf == NULL)
        {
                WriteLog(ERR_LVL, "分配核心使用输入缓冲池错");
            	errcode = 99999;
                strcpy(err_msg, "系统错!!!");
                PutPoolDataByName("ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD", "_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        recvbuf = (FBFR32 *)tpalloc("FML32", NULL, PBFDATA_LEN);
        if( recvbuf == NULL)
        {
                WriteLog(ERR_LVL, "分配核心使用输出缓冲池错");
                tpfree((char *)sendbuf);
            	errcode = 99999;
                strcpy(err_msg, "系统错!!!");
                PutPoolDataByName("ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD", "_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        WriteLog(APP_LVL, "Sub_acc %s!", acc_out+4);
        /*上送核心数据*/
        strcpy(head.organ_no, "9996");    /* 机构号 */
        strcpy(head._tlr_no, "888886");   /* 柜员 */
        strcpy(head._tx_op_stat, "N");    /* 交易状态 */
        strcpy(head.chnl_no, "W");        /* 渠道类型 */
        strcpy(head._tx_code, "5734");    /* 交易码 */
        strcpy(head._seq_no, tran_seqno);
        Fchg32(sendbuf, getcorefmlid("organ_no", HEAD, REQ, "0000"), 0, head.organ_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tlr_no", HEAD, REQ, "0000"), 0, head._tlr_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tx_op_stat", HEAD, REQ, "0000"), 0, head._tx_op_stat, 0);
        Fchg32(sendbuf, 167772201L, 0, head.chnl_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tx_code", HEAD, REQ, "0000"), 0, head._tx_code, 0);
        Fchg32(sendbuf, getcorefmlid("_seq_no", HEAD, REQ, "0000"), 0, head._seq_no, 0);
        /*通知存款账号*/
        Fchg32(sendbuf,167772278L, 0, cardno, 0);
        /*子账户序号,新核心用*/
        Fchg32(sendbuf, 167773825L, 0, acc_out+4, 0);
        /*起始日期*/
        Fchg32(sendbuf, 167772989L, 0, bgnDt, 0);
        /*结束日期*/
        Fchg32(sendbuf, 167772990L, 0, endDt, 0);
        /*通知状态*/
        Fchg32(sendbuf, 167773296L, 0, noticeStat, 0);
        /*通知处理状态*/
        Fchg32(sendbuf, 167773271L, 0, noticeDealStat, 0);
        /** Modifed by MSJ - 20140517 
        PrtFmlDetail(sendbuf);**/
        PrtFmlDetailLvl( APP_LVL, sendbuf );

        WriteLog(ERR_LVL, "tpcall PB_MNGSVC Begin..........");
        sendlen = Fused32(sendbuf);
        Finit32(recvbuf,Fsizeof32(recvbuf));
        if(tpcall("PB_MNGSVC", (char*)sendbuf, sendlen,(char**)&recvbuf, &reclen, 0))
        {
                WriteLog(ERR_LVL, "TPCALL调用核心出错！");
            	tpfree((char *)sendbuf);
                tpfree((char *)recvbuf);
                errcode = 99999;
                strcpy(err_msg, "核心系统错!!!");
                PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        corehead_pkgout._host_stat = -1;
        GetCoreHead( recvbuf, &corehead_pkgout);
        hoststat = corehead_pkgout._host_stat;
        WriteLog( APP_LVL, "hoststat[%d]", hoststat );
        if(hoststat != 0)
        {
                if(1000 == hoststat)
                {
                        WriteLog(ERR_LVL, "核心通讯超时");
                        tpfree((char *)sendbuf);
                        tpfree((char *)recvbuf);
                        errcode = 99999;
                        strcpy(err_msg, "核心通讯超时");
                        PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                        PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                        return -1;
                }
                else
                {
        		Fget32(recvbuf, getcorefmlid("_error_code", HEAD, ANS, "0000"), 0, err_msg, 0);
                        WriteLog(ERR_LVL,"核心出错!host_stat[%ld]",hoststat);
                        tpfree((char *)sendbuf);
                        tpfree((char *)recvbuf);
                        errcode = 99999;
                        PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                        PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                        return -1;
                }

        }
        /* Added by MSJ for SC6000Z项目 20140522 - Start */
        PrtFmlDetailLvl( APP_LVL, recvbuf );
        WriteLog(APP_LVL, "tpcall PB_MNGSVC End..........");
        

	WriteLog ( APP_LVL, " 明细文件名recv_filename[%s]", corehead_pkgout.recv_filename);
	if(TransFileRecv( "FTPFILE", corehead_pkgout.recv_filename, head.organ_no, 0 ) != PB_OK )
	{
		sprintf( err_msg, "下载结果文件失败");
		WriteLog( ERR_LVL, "FAIL! 下载结果文件[%s]失败!\n", recv_filename );
		errcode =-1;
		PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
		PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
		tpfree( (char *)sendbuf );
		tpfree( (char *)recvbuf );
		return( -1);
	}
	sprintf(DataFile, "%s/print/%.2s/%.4s/%s",
		getenv("HOME"), head.organ_no, head.organ_no, corehead_pkgout.recv_filename);

	WriteLog ( APP_LVL, " 明细文件名datafile[%s]", DataFile);
	if((fp = fopen(DataFile, "r")) == NULL)
	{
		sprintf( err_msg, "打开文件错");
		WriteLog( ERR_LVL, "打开文件错!\n");
		errcode =-1;
		PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
		PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
		tpfree( (char *)sendbuf );
		tpfree( (char *)recvbuf );
		return( -1);
	}
	/**
	while(!feof(fp))
	{
		memset(buff, 0, sizeof(buff));

		cp = fgets(buff, sizeof(buff), fp);
		if ( cp == NULL)
		{
			continue;
		}
		
		WriteLog( APP_LVL, "[%s]", buff);
	}**/
	/*取得查询记录数*/
	Fget32( recvbuf, 33554584L, 0, (char*)&num , 0);
		/* Added by MSJ for SC6000Z项目 20140522 - End */

	/*取得查询记录数*/

	sprintf( Num, "%ld", num );
	WriteLog ( APP_LVL, " 查询记录数[%s][%d]", Num, num);
	PutPoolDataByName("BUSIIB", "v", 0, 0, Num, 0 );
	while(!feof(fp))
	{
		memset(buff, 0, sizeof(buff));

		cp = fgets(buff, sizeof(buff), fp);
		if ( cp == NULL)
		{
			continue;
		}
		
		WriteLog( APP_LVL, "[%s]", buff);
		
		memset( noticeDt,	0x00,	sizeof( noticeDt ) );
		memset( drawDt,		0x00,	sizeof( drawDt ) );
		memset( noticeStat,	0x00,	sizeof( noticeStat ) );
		memset( noticeTyp,	0x00,	sizeof( noticeTyp ) );
		memset( str_trandate,	0x00,	sizeof( str_trandate ) );
		memset( str_trandate2,	0x00,	sizeof( str_trandate2 ) );
		memset( noticeseq, 0x00,	sizeof( noticeseq ) );
		memset( noticeAmt, 0x00,	sizeof( noticeAmt ) );
		amt=0;
		
		SzGetField(1,buff,SZPOS,noticeseq);
		SzGetField(2,buff,SZPOS,noticeDt);
		SzGetField(3,buff,SZPOS,drawDt);
		SzGetField(4,buff,SZPOS,noticeAmt);
		SzGetField(5,buff,SZPOS,noticeStat);
		SzGetField(6,buff,SZPOS,noticeTyp);
		/**SzGetField(7,buff,SZPOS,noticeseq);**/
       	 
        	WriteLog(APP_LVL, "noticeDt %s!", noticeDt );
        	trim(noticeDt);
		strncpy( str_trandate, noticeDt, 4 );
		strncat( str_trandate, noticeDt+5, 2 );
		strncat( str_trandate, noticeDt+8, 2 );
        	WriteLog(APP_LVL, "noticeDt %s!", str_trandate );

		if( strcmp( str_trandate, bgnDt )>=0 && strcmp( str_trandate, endDt )<=0 )
		{ 
        		amt = atof(noticeAmt);
        		memset( noticeAmt, 0x00, sizeof(noticeAmt) );
        		sprintf(  noticeAmt, "%.0f.00", amt );
        		trim(noticeseq);
        		trim(noticeStat);
        		trim(noticeTyp);
        		trim(drawDt);
			sprintf(  noticeNb, "%04s", noticeseq );
			strncpy( str_trandate2, drawDt, 4 );
			strncat( str_trandate2, drawDt+5, 2 );
			strncat( str_trandate2, drawDt+8, 2 );
        		PutPoolDataByName("BUSIIB","noticeNb", i, 0, noticeNb, 0);
        		PutPoolDataByName("BUSIIB","noticeDt", i, 0, str_trandate, 0);
        		PutPoolDataByName("BUSIIB","drawDt", i, 0, str_trandate2, 0);
        		PutPoolDataByName("BUSIIB","noticeAmt", i, 0, noticeAmt, 0);
        		PutPoolDataByName("BUSIIB","noticeStat", i, 0, noticeStat, 0);
        		PutPoolDataByName("BUSIIB","noticeTyp", i, 0, noticeTyp, 0);
			num1++;
			i++;
		}
		else 
		{
			continue;	
		}
	}
	
	if( num1==0 )
	{
		WriteLog ( ERR_LVL, " 查询无记录" );
		sprintf( err_msg, "查询无记录" );
		errcode = 99999;
		PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
		PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
		tpfree((char *)sendbuf);
		tpfree((char *)recvbuf);
		return -1;
	}
	/*取得查询记录数*/
	sprintf( Num, "%ld", num );
	WriteLog ( APP_LVL, " 查询记录数[%s][%d]", Num, num);
	PutPoolDataByName("BUSIIB", "v", 0, 0, Num, 0 );	
	
	if( num1!=num )
	{
		WriteLog ( ERR_LVL, "查询记录数不一致 num1[%d] num[%d]", num1,num );
		sprintf( err_msg, "查询记录数不一致" );
		errcode = 99999;
		PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
		PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
		tpfree((char *)sendbuf);
		tpfree((char *)recvbuf);
		return -1;
	}
	
	tpfree((char *)sendbuf);
	tpfree((char *)recvbuf);
	return ( 0 );
}
