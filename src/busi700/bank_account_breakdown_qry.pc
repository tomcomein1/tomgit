/*PB3.0系统自动生成demo源码文件*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h" 
#include "pbstructdef.h" 
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"

EXEC SQL BEGIN DECLARE SECTION;
struct PKG_CBS0000480 {
	char	acct[32+1];
	char	currencyTyp[6+1];
	char	bgnDt[8+1];
	char	endDt[8+1];
	char	turnPageBgnPos[32+1];
	char	turnPageShowQnt[32+1];
	char	backup1[128+1];
};

struct PKG_CBS0000481 {
	int		turnPageTotalQnt;
	char	hostSeqNb[10+1];
	char	tranDate[8+1];
	char	cntptAcct[32+1];
	char	flag[1+1];
	double	tranAmt;
	double	Bal;
	char	Backup2[128+1];
	char	Backup3[128+1];
};
EXEC SQL END DECLARE SECTION;

int
BankAccountBreakdownQry( )
{
	int i;
	int ret;
	long    app_err_no = 0;
    char    err_code[6+1];
    char    err_msg[256+1];
	char    ChkFlag[20+1];
    char    CdmAccStat[60+1];
    char    SdmAccStat[60+1];
    char    FixAccStat[60+1];
    char    LoanAccStat[60+1];
    char    CardAccStat[60+1];
    char    stat[100+1];
    struct PKG_CBS0000480 PKGCBS480;
    struct PKG_CBS0000481 PKGCBS481;

    memset( err_code, 0x00, sizeof(err_code) );
    memset( err_msg,  0x00, sizeof(err_msg)  );
	memset( ChkFlag,  0x00, sizeof(ChkFlag)  );
    memset( CdmAccStat, 0x00, sizeof(CdmAccStat) );
    memset( SdmAccStat, 0x00, sizeof(SdmAccStat) );
    memset( FixAccStat, 0x00, sizeof(FixAccStat) );
    memset( LoanAccStat, 0x00, sizeof(LoanAccStat) );
    memset( CardAccStat, 0x00, sizeof(CardAccStat) );
    memset( stat, 0x00, sizeof(stat) );
    memset( &PKGCBS480, 0x00, sizeof(struct PKG_CBS0000480) );
    memset( &PKGCBS481, 0x00, sizeof(struct PKG_CBS0000481) );

    GetPoolDataByName( "BUSIIB", "acct", 0, 0, PKGCBS480.acct, 0 );
    if( strlen(PKGCBS480.acct) == 0 ) {
        WriteLog( ERR_LVL, "ERR: acct不允许为空值!" );
		app_err_no = 20003;
        strcpy( err_code, "340002" );
        strcpy( err_msg, "失败" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
		PutPoolDataByName( "ABSHEAD", "app_err_no",  0, 0, &app_err_no,  0 );
        return( -1 );
    }

    GetPoolDataByName( "BUSIIB", "currencyTyp", 0, 0, PKGCBS480.currencyTyp, 0 );
    if( strlen(PKGCBS480.currencyTyp) == 0 ) {
        WriteLog( ERR_LVL, "ERR: currencyTyp不允许为空值!" );
        strcpy( err_code, "340002" );
        strcpy( err_msg, "失败" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
        return( -1 );
    }

    if( (ret = NetParaConv("currencyTyp")) < 0 ) {
        WriteLog( ERR_LVL, "ERR: currencyTyp转换错误!" );
        app_err_no = 99999;
        strcpy( err_code, "999999" );
        strcpy( err_msg, "取币种编码出错" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, &app_err_no,  0 );
        return( -1 );
    }
    memset( PKGCBS480.currencyTyp, 0x00, sizeof(PKGCBS480.currencyTyp) );
    GetPoolDataByName( "PAGTBUF", "currtype", 0, 0, PKGCBS480.currencyTyp, 0 );
    PutPoolDataByName( "BUSIIB", "currencyTyp", 0, 0, PKGCBS480.currencyTyp, 0 );

    GetPoolDataByName( "BUSIIB", "bgnDt", 0, 0, PKGCBS480.bgnDt, 0 );
    if( strlen(PKGCBS480.bgnDt) == 0 ) {
        WriteLog( ERR_LVL, "ERR: bgnDt不允许为空值!" );
		app_err_no = 99999;
        strcpy( err_code, "340002" );
        strcpy( err_msg, "失败" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
		PutPoolDataByName( "ABSHEAD", "app_err_no",  0, 0, &app_err_no,  0 );
        return( -1 );
    }

    GetPoolDataByName( "BUSIIB", "endDt", 0, 0, PKGCBS480.endDt, 0 );
    if( strlen(PKGCBS480.endDt) == 0 ) {
        WriteLog( ERR_LVL, "ERR: endDt不允许为空值!" );
		app_err_no = 99999;
        strcpy( err_code, "340002" );
        strcpy( err_msg, "失败" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
		PutPoolDataByName( "ABSHEAD", "app_err_no",  0, 0, &app_err_no,  0 );
        return( -1 );
    }

    GetPoolDataByName( "BUSIIB", "turnPageBgnPos", 0, 0, PKGCBS480.turnPageBgnPos, 0 );
    if( atoi(PKGCBS480.turnPageBgnPos) == 0 ) {
		memset( PKGCBS480.turnPageBgnPos, 0x00, sizeof(PKGCBS480.turnPageBgnPos) );
		sprintf( PKGCBS480.turnPageBgnPos, "%d", 1 );
    }

    GetPoolDataByName( "BUSIIB", "turnPageShowQnt", 0, 0, PKGCBS480.turnPageShowQnt, 0 );
	if( atoi(PKGCBS480.turnPageShowQnt) == 0 || atoi(PKGCBS480.turnPageShowQnt) > 10 ) {
		memset( PKGCBS480.turnPageShowQnt, 0x00, sizeof(PKGCBS480.turnPageShowQnt) );
		sprintf( PKGCBS480.turnPageShowQnt, "%d", 10 );
	}

    GetPoolDataByName( "BUSIIB", "backup1", 0, 0, PKGCBS480.backup1, 0 );

	/*
	PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "0", 0 );
	*/
	PutPoolDataByName( "BUSIIB", "turnPageBgnPos", 0, 0, PKGCBS480.turnPageBgnPos, 0 );
	PutPoolDataByName( "BUSIIB", "turnPageShowQnt", 0, 0, PKGCBS480.turnPageShowQnt, 0 );

    ChkFlag[0] = '0';
    ChkFlag[1] = '0';
    ChkFlag[2] = '0';
    PutPoolDataByName( "BUSIIB", "qryCls", 0, 0, "1", 0 );
    PutPoolDataByName( "BUSIIB", "loanCreditFlg", 0, 0, ChkFlag, 0 );

    ret = CommClient( "CoQryCSvr" );
    if( ret != 0 )
    {
        WriteLog( ERR_LVL, "ERR: 通用客户查询及账号查询检查服务失败!" );
        app_err_no = 99999;
        GetPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
        strcpy( err_code, "310015" );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, &app_err_no,  0 );
        return( -1 );
    }

    GetPoolDataByName( "PAGTBUF", "data1", 0, 0, CdmAccStat, 0 );
    GetPoolDataByName( "PAGTBUF", "data2", 0, 0, SdmAccStat, 0 );
    GetPoolDataByName( "PAGTBUF", "data3", 0, 0, FixAccStat, 0 );
    GetPoolDataByName( "PAGTBUF", "data4", 0, 0, CardAccStat, 0 );
    GetPoolDataByName( "PAGTBUF", "data5", 0, 0, LoanAccStat, 0 );
    rtrim( CdmAccStat );
    rtrim( SdmAccStat );
    rtrim( FixAccStat );
    rtrim( CardAccStat );
    rtrim( LoanAccStat );

    WriteLog( ERR_LVL, "#############[%s][%s][%s][%s][%s]",\
        CdmAccStat, SdmAccStat, FixAccStat, LoanAccStat, CardAccStat );

    if( strlen(CdmAccStat) > 0 ) {

        if( CdmAccStat[0] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "销户");
        } else if( CdmAccStat[1] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "冻结");
        } else if( CdmAccStat[2] != '0' ) {
            app_err_no = 20004;
            strcpy( stat, "挂失");
        } else {
            strcpy( stat, "正常");
        }
    }

    if( strlen(SdmAccStat) > 0 ) {

        if( SdmAccStat[0] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "销户");
        } else if( SdmAccStat[1] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "冻结");
        } else if( SdmAccStat[2] != '0' ) {
            app_err_no = 20004;
            strcpy( stat, "挂失");
        } else {
            strcpy( stat, "正常");
        }
    }

    if( strlen(FixAccStat) > 0 ) {

        if( FixAccStat[0] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "销户");
        } else if( FixAccStat[1] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "冻结");
        } else if( FixAccStat[2] != '0' ) {
            app_err_no = 20004;
            strcpy( stat, "挂失");
        } else {
            strcpy( stat, "正常");
        }
    }

    if( strlen(LoanAccStat) > 0 ) {
		if( LoanAccStat[0] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "销户");
        } else {
            strcpy( stat, "正常");
		}
	}

    if( strlen(CardAccStat) > 0 ) {

        if( CardAccStat[0] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "销户");
        } else if( CardAccStat[1] != '0' ) {
            app_err_no = 99999;
            strcpy( stat, "冻结");
        } else if( CardAccStat[2] != '0' ) {
            app_err_no = 20004;
            strcpy( stat, "挂失");
        } else {
            strcpy( stat, "正常");
        }
    }

    if( app_err_no == 20004 ) {
        WriteLog( ERR_LVL, "ERR: 转出账户状态校验错误[%s]!", stat );
        sprintf( err_code, "3%ld", app_err_no );
        sprintf( err_msg, "转出卡或账号%s", stat );
        PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_code, 0 );
        PutPoolDataByName( "BUSIIB", "thsdesc",  0, 0, err_msg,  0 );
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, &app_err_no,  0 );
        return( -1 );
    }

	return( 0 );
}

int
BankAcctBreakQry_DataProc()
{
    int     i = 0;
	long	app_err_no = 0;
    char    totalQnt[10+1];
    char    acct[32+1];
	char	flag[1+1];
    char    err_code[6+1];
    char    err_msg[256+1];

    memset( totalQnt, 0x00, sizeof(totalQnt) );
    memset( acct, 0x00, sizeof(acct) );

    GetPoolDataByName( "BUSIIB", "acct", 0, 0, acct, 0 );
    GetPoolDataByName( "BUSIIB", "totalQnt", 0, 0, totalQnt, 0 );
    PutPoolDataByName( "RCBIB", "v", 0, 0, totalQnt, 0 );
    PutPoolDataByName( "RCBIB", "turnPageTotalQnt", 0, 0, totalQnt, 0 );

    for( i = 0; i < atoi(totalQnt); i++ ) {
		memset( flag, 0x00, sizeof(flag) );
		/*
        PutPoolDataByName( "BUSIIB", "acct", 0, i, acct, 0 );
		*/
		GetPoolDataByName( "BUSIIB", "flag", 0, i, flag, 0 );
		if( flag[0] == '1' ) {
			flag[0] = 'D';
			PutPoolDataByName( "BUSIIB", "flag", i, 0, flag, 0 );
		} else if( flag[0] == '2' ) {
			flag[0] = 'C';
			PutPoolDataByName( "BUSIIB", "flag", i, 0, flag, 0 );
		}
	}

	PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "0", 0 );

    return 0;
}
