/*****************************************************
**函数描述     : 支付宝卡通签约管理 
**函数用途     : 签约解约原子交易 
**输入         ：
**输出         : 
**创建日期     ：2011/05/09
**最后修改日期 ：
**Create by    : Archer
*****************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"

EXEC SQL  include "PAGT.h";
#define ERROUT(msg) WriteLog(ERR_LVL,msg );\
	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, msg,0);
/*add by xxj 20150320 for 统一支付信息同步 BEGIN*/
int UPBSNCSSelect(char *buff,char *rcvbuff,int flag,char *ttseqno);
long UpbsGetResult( char *xmlbuf, char *sign, char *result );
int SyncSigninfo( struct s_pagt_signinfo *signInfo );
/*add by xxj 20150320 for 统一支付信息同步 END */


int
Data_Card_User_sign()
{
	EXEC SQL BEGIN DECLARE SECTION;
	struct s_pagt_signinfo sign_info;
	struct s_pagt_signinfo_jnl sign_info_jnl;
	char  chnl[2+1]; 
	EXEC SQL END DECLARE SECTION;

	int  ret = 0;
	long 	core_err;
	char 	err_msg[40+1];
	long	hoststat;
	long host_stat=0;
	char 	RetCode[8+1];
	char 	buffer[40+1];					/* 传入报文 */
	char    stat[1+1];
	char    ff[1+1];
	char    type[1+1];
	char    day_d_max[20+1];
    char sign_d_max[20+1];
	long  app_err_no=-1;

	memset( buffer,0,sizeof(buffer) );
	memset( stat,0,sizeof(stat) );
	memset( ff,0,sizeof(ff) );
	memset ( err_msg, 0, sizeof ( err_msg ) );
	memset( &sign_info, 0x00, sizeof( struct s_pagt_signinfo ));
	memset( &sign_info_jnl, 0x00, sizeof( struct s_pagt_signinfo_jnl ));
    memset( day_d_max, 0, sizeof(day_d_max) );
    memset( sign_d_max, 0, sizeof(sign_d_max) );
    memset( chnl, 0, sizeof(chnl) );
    memset( type, 0, sizeof(type) );
    memset( RetCode, 0, sizeof(RetCode) );


	/* 从变量池取值 */
	GetPoolDataByName("CARDCURIB","certType",0,0,sign_info.cert_type,0);
	GetPoolDataByName("CARDCURIB","certNo",0,0,sign_info.cert_no,0);
	GetPoolDataByName("CARDCURIB","webNo",0,0,sign_info.prsn_no,0);
	GetPoolDataByName("CARDCURIB","cardNo",0,0,sign_info.acc,0);
	GetPoolDataByName("CARDCURIB","cardNo",0,0,sign_info.signacc,0);
	GetPoolDataByName("CARDCURIB","name",0,0,sign_info.name,0);
	GetPoolDataByName("CARDCURIB","cell",0,0,sign_info.signinfo1,0);
	GetPoolDataByName("CARDCURIB","email",0,0,sign_info.signinfo2,0);
	GetPoolDataByName("CARDCURIB","channel",0,0,sign_info.signinfo4,0);
	GetPoolDataByName("CARDCURIB","channel",0,0,sign_info.signinfo5,0);
	GetPoolDataByName("CARDCURIB","singleMax",0,0,sign_info.signinfo6,0);
	GetPoolDataByName("CARDCURIB","dayMax",0,0,sign_info.signinfo7,0);
	GetPoolDataByName("CARDCURIB","state",0,0,stat,0);

	Trim( sign_info.cert_type );
	Trim( sign_info.batchno );
	Trim( sign_info.cert_no );
	Trim( sign_info.prsn_no );
	Trim( sign_info.acc );
	Trim( sign_info.signacc );
	Trim( sign_info.name );
	Trim( sign_info.signinfo1 );
	Trim( sign_info.signinfo2 );
	Trim( sign_info.signinfo3 );
	Trim( sign_info.signinfo4 );
	Trim( sign_info.signinfo5 );
	Trim( sign_info.signinfo6 );
	Trim( sign_info.signinfo7 );
	Trim( sign_info.signflag );

	/* 给流水表结构体赋值 */
	GetPoolDataByName("CARDCURIB","certType",0,0,sign_info_jnl.cert_type,0);
	GetPoolDataByName("CARDCURIB","certNo",0,0,sign_info_jnl.cert_no,0);
	GetPoolDataByName("CARDCURIB","webNo",0,0,sign_info_jnl.prsn_no,0);
	GetPoolDataByName("CARDCURIB","cardNo",0,0,sign_info_jnl.acc,0);
	GetPoolDataByName("CARDCURIB","cardNo",0,0,sign_info_jnl.signacc,0);
	GetPoolDataByName("CARDCURIB","name",0,0,sign_info_jnl.name,0);
	GetPoolDataByName("CARDCURIB","cell",0,0,sign_info_jnl.signinfo1,0);
	GetPoolDataByName("CARDCURIB","email",0,0,sign_info_jnl.signinfo2,0);
	GetPoolDataByName("CARDCURIB","channel",0,0,sign_info_jnl.signinfo4,0);
	GetPoolDataByName("CARDCURIB","channel",0,0,sign_info_jnl.signinfo5,0);
	GetPoolDataByName("CARDCURIB","singleMax",0,0,sign_info_jnl.signinfo6,0);
	GetPoolDataByName("CARDCURIB","dayMax",0,0,sign_info_jnl.signinfo7,0);
	
	Trim( sign_info_jnl.cert_type );
	Trim( sign_info_jnl.batchno );
	Trim( sign_info_jnl.cert_no );
	Trim( sign_info_jnl.prsn_no );
	Trim( sign_info_jnl.acc );
	Trim( sign_info_jnl.signacc );
	Trim( sign_info_jnl.name );
	Trim( sign_info_jnl.signinfo1 );
	Trim( sign_info_jnl.signinfo2 );
	Trim( sign_info_jnl.signinfo3 );
	Trim( sign_info_jnl.signinfo4 );
	Trim( sign_info_jnl.signinfo5 );
	Trim( sign_info_jnl.signinfo6 );
	Trim( sign_info_jnl.signinfo7 );
	Trim( sign_info_jnl.signflag );

    if(strcmp(sign_info_jnl.signinfo4,"96")==0)
    {
        strcpy( err_msg, "渠道非法");
        WriteLog( ERR_LVL, "渠道非法");
        core_err = 99999;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0);
        return( -1);
    }

	/* 客户信息验证 */
	core_err = 0;
	if( strlen(sign_info.cert_type) == 0 )	
	{
		WriteLog(ERR_LVL,"证件类型不能为空!\n");
		core_err = 35001;
    	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	if( sign_info.cert_type[0] != '1' )
	{
		WriteLog(ERR_LVL,"证件类型必须为身份证!\n");
		core_err = 35001;
       	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	strcpy(type,"0");
	if( strlen(sign_info.cert_no) == 0 )	
	{
		WriteLog(ERR_LVL,"证件号码不能为空!\n");
		core_err = 35001;
       	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	if( strlen(sign_info.name) == 0 )	
	{
		WriteLog(ERR_LVL,"客户姓名不能为空!\n");
		core_err = 35001;
       	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	if( strlen(sign_info.prsn_no) == 0 )	
	{
		WriteLog(ERR_LVL,"卡通签约协议号不能为空!\n");
		core_err = 35001;
       	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	if( strlen(sign_info.acc) == 0 )	
	{
		WriteLog(ERR_LVL,"卡号不能为空!\n");
		core_err = 35001;
       	strcpy( err_msg, "用户信息不正确" );
       	PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       	PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	if( stat[0] == '0' )
	{
		if( strlen(sign_info.signinfo1) == 0 )	
		{
			WriteLog(ERR_LVL,"移动电话不能为空!\n");
			core_err = 35001;
       		strcpy( err_msg, "用户信息不正确" );
       		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}
		if( strlen(sign_info.signinfo2) == 0 )	
		{
			WriteLog(ERR_LVL,"支付宝账户不能为空!\n");
			core_err = 35001;
       		strcpy( err_msg, "用户信息不正确" );
       		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}
		if( strlen(sign_info.signinfo6) == 0 )	
		{
			WriteLog(ERR_LVL,"单笔限额不能为空!\n");
			core_err = 35001;
       		strcpy( err_msg, "用户信息不正确" );
       		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}
		if( strlen(sign_info.signinfo7) == 0 )	
		{
			WriteLog(ERR_LVL,"单日限额不能为空!\n");
			core_err = 35001;
       		strcpy( err_msg, "用户信息不正确" );
       		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
       		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}
	}	
    ret = ct_GetParaContent( "NCS", "dayamt_limt", day_d_max);
    if ( ret <0)
    {
         strcpy( err_msg, "取当日限额失败");
         WriteLog( ERR_LVL, "取当日限额失败");
         core_err = 99999;
         PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
         PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0);
         return( -1);
    }
    ret = ct_GetParaContent( "NCS", "signamt_limt", sign_d_max);
    if ( ret <0)
    {
        strcpy( err_msg, "取单笔限额失败");
        WriteLog( ERR_LVL, "取单笔限额失败");
        core_err = 99999;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0);
        return( -1);
     }
    if(atof(sign_info.signinfo7)>atof(day_d_max))
    {
        strcpy( err_msg, "当日限额超限");
        WriteLog( ERR_LVL, "当日限额超限");
        core_err = 99999;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0);
        return( -1);
    }
    if(atof(sign_info.signinfo6)>atof(sign_d_max))
    {
        strcpy( err_msg, "单笔限额超限");
        WriteLog( ERR_LVL, "单笔限额超限");
        core_err = 99999;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0);
        return( -1);
    }

	/* 调核心5712交易 进行用户信息检查 */
     /***modify by luozha 20131015 置cardflag[20]=0,cardflag[21]=0 begin***/
     if( stat[0] == '0' )  /*签约*/
	sprintf( buffer,"1110011110010111010000011111000000000000" );
     if( stat[0] == '1' )  /*撤约*/
          /*15位身份证在核心升级为18位身份证*/
	sprintf( buffer,"1110011110010111010000011111010000000000" );
    /***modify by luozha 20131015 end***/
    PutPoolDataByName("ABSHEAD", "_tx_code", 0, 0,"5712" , 0);
    PutPoolDataByName("ABSHEAD", "_tlr_no", 0, 0, "888889", 0);
    PutPoolDataByName("ABSHEAD", "organ_no", 0, 0,  "9996", 0);
    PutPoolDataByName( "ABSHEAD", "_tx_op_stat", 0, 0, "N" , 0 );
    PutPoolDataByName( "ABSHEAD", "chnl_no", 0, 0, "6", 0);
	PutPoolDataByName( "ABSHEAD", "_host_stat", 0, 0, &host_stat, 0);

    PutPoolDataByName ( "CBS", "TxFlag", 0, 0, sign_info.acc, 0);  /*卡号*/
    PutPoolDataByName ( "CBS", "OutAccName", 0, 0, buffer, 0);
    PutPoolDataByName ( "CBS", "PaperId", 0, 0, type, 0);
    PutPoolDataByName ( "CBS", "PaperNo", 0, 0, sign_info.cert_no, 0);
    PutPoolDataByName ( "CBS", "Phone", 0, 0, sign_info.signinfo1, 0);
    PutPoolDataByName ( "CBS", "CustName", 0, 0, sign_info.name, 0);

    WriteLog(DEBUG_LVL0, "=============FML打包===============");
    ret = Data_PackFml("110|5712|0");
    if ( ret )
    {
         WriteLog(ERR_LVL,"ERROR: FML打包错: %d\n", ret);
		 ERROUT("FML打包错" );
		 core_err = 99999;
		 PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
		 PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
 		 return ( -1);
    }
    WriteLog(DEBUG_LVL0, "=============与核心通讯===============");
    ret = Comm_AcCallFmlAndUnpack("110|PBSVC|5712|1");
    if( ret )
    {
        WriteLog(ERR_LVL,"ERROR: FML解包错: %d\n", ret);
		ERROUT("FML解包错" );
		core_err = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
        return -1;
    }
	GetPoolDataByName( "ABSHEAD", "_host_stat", 0, 0, &hoststat, 0 );
	if ( hoststat != 0 )
	{
		GetPoolDataByName("ABSHEAD", "app_err_no", 0, 0, &app_err_no, 0);
		sprintf(RetCode, "%ld", app_err_no);
        rtrim(RetCode);
		if ( hoststat == -1 )
		{
			WriteLog( DEBUG_LVL0, "通讯超时:[%s]", err_msg );
			ERROUT("通讯超时" );
			core_err = 99999;
		    PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
        	return -1;
		}
		else
		{
    		if ( strcmp(RetCode,"-630")==0)
    		{
        		WriteLog ( ERR_LVL, "证件号码不一致[%s]", sign_info.cert_no);
				core_err = 35024;
        		strcpy( err_msg, "与登记证件号码不匹配" );
        		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				return ( -1);
    		}
    		if ( strcmp(RetCode,"-631")==0)
   			{
        		WriteLog ( ERR_LVL, "客户姓名不一致[%s]", sign_info.name);
				core_err = 35022;
        		strcpy( err_msg, "户名与银行卡号不匹配" );
        		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				return ( -1);
    		}
    		if (strcmp(RetCode,"-632")==0)
    		{
        		WriteLog ( ERR_LVL, "手机号码不一致[%s]", sign_info.signinfo1);
				core_err = 35001;
        		strcpy( err_msg, "手机号码不符" );
        		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				return ( -1);
    		}
    		if (strcmp(RetCode,"-633" )==0)
    		{
        		WriteLog ( ERR_LVL, "单位卡不能进行签约[%s]", sign_info.acc);
				core_err = 35023;
        		strcpy( err_msg, "不支持的银行卡号" );
        		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				return ( -1);
    		}
			else
			{
                 GetPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg,0 );
			    ERROUT(err_msg );
			    core_err = 35002;
	            PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0); 
			   return ( -1 );
			}
		}
	}
	/* 取系统日期、项目编号 */
	ret = PayGetPbDate( sign_info.signdate );
	if( ret < 0 )
	{
		WriteLog(ERR_LVL,"取PB日期失败!\n");
		ERROUT("取会计时间失败" );
		core_err = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}

	dtcurrent( &sign_info.signtime );
	dtcurrent( &sign_info.modtime );
	sign_info_jnl.signtime=sign_info.signtime;
	sign_info_jnl.modtime=sign_info.modtime;

	EXEC SQL SELECT content INTO :sign_info.batchno
		FROM t_pay_sys_para
		WHERE inst_no = 'NCS'
		AND data_code = 'Batchno';
	if( SQLCODE != 0)
	{
		WriteLog(ERR_LVL,"取项目编号失败![%d]",SQLCODE);
		ERROUT("数据库错" );
		core_err = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	/* 取交易流水号 */
	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, sign_info_jnl.seqno, 0);
	strcpy( sign_info_jnl.signdate,sign_info.signdate );
	strcpy( sign_info_jnl.trandate,sign_info.signdate );
	strcpy( sign_info_jnl.batchno,sign_info.batchno );

	/* 取交易流水号 */
	/*ret = get_TTseqno( sign_info_jnl.seqno );
	if(ret < 0)
    {
        WriteLog( ERR_LVL,"调用函数get_TTseqno错" );
        return( -1 );
    }*/
	/* 判断签约解约标志，更新数据 */	
	if( stat[0] == '0')		/**签约**/	
	{ 
		sign_info_jnl.signflag[0] = '1';
		/* 插签约流水表 */
		EXEC SQL INSERT INTO t_pagt_signinfo_jnl VALUES ( :sign_info_jnl );
		if( sqlca.sqlcode )
		{
			WriteLog ( ERR_LVL, "插入签约流水表失败![%d]",sqlca.sqlcode );
			ERROUT("插签约流水数据库错" );
			core_err = 99999;
		    PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}	
		/* 更新签约信息表 */
		EXEC SQL SELECT signflag,signinfo4[1,2] INTO :sign_info.signflag,:chnl
		FROM t_pagt_signinfo
		WHERE batchno = :sign_info.batchno
		AND prsn_no = :sign_info.prsn_no;
		if( sqlca.sqlcode )
		{
			if( sqlca.sqlcode==SQLNOTFOUND )
			{
			 WriteLog( ERR_LVL,"客户签约信息表无对应记录![%d]",sqlca.sqlcode);
			 ff[0]='1';
			 sign_info.signflag[0] = '1';
			 /*add by xxj 20150320 for统一支付信息同步 BEGIN*/
			ret = SyncSigninfo(&sign_info);
			if( ret < 0 )
			{
				WriteLog( ERR_LVL,"统一支付信息同步错");
				core_err = 99999;
				strcpy( err_msg, "处理失败");
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				return( -1 );
			}
			 /*add by xxj 20150320 for统一支付信息同步 END */
			 EXEC SQL INSERT INTO t_pagt_signinfo VALUES (:sign_info);
			    if ( sqlca.sqlcode )
				{
				  WriteLog( ERR_LVL,"插入签约信息表失败[%d]",sqlca.sqlcode);
				  ERROUT("插签约流水数据库错" );
				  core_err = 99999;
				  PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
				  PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
				  return (-1);
				 }
			 }
		     else
			 {
			 WriteLog ( ERR_LVL, "查询客户签约信息表失败![%d]",sqlca.sqlcode );
			 ERROUT("查询客户签约信息失败" );
			 core_err = 99999;
			 PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
			 PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			 return( -1 );	
			 }	
		 }
		if(ff[0]!='1')
		{
		  if (sign_info.signflag[0] == '1')
		  {
			if (strcmp(chnl,"96")==0)
			{
            WriteLog(ERR_LVL,"快捷签约了,再签也允许");
			sign_info.signflag[0]='1';
			/*add by xxj 20150320 for统一支付信息同步 BEGIN*/
                        if( SyncSigninfo(&sign_info) != 0 )
                        {
                                WriteLog( ERR_LVL,"统一支付信息同步错");
				core_err = 99999;
				strcpy( err_msg, "处理失败");
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
                                return( -1 );
                        }
                         /*add by xxj 20150320 for统一支付信息同步 END */
		 	EXEC SQL UPDATE t_pagt_signinfo 
					 SET * = (:sign_info)
		           	 WHERE batchno = :sign_info.batchno
		           	 AND prsn_no = :sign_info.prsn_no;
					if ( sqlca.sqlcode)
			   		{ 
			     	WriteLog( ERR_LVL,"更新签约信息表失败[%d]",sqlca.sqlcode);
			     	core_err = 99999;
        	        strcpy( err_msg, "更新签约信息表失败" );
        	        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        	        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			     	PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			     	return ( -1);
			    	}
            }
			else
			{
			WriteLog ( ERR_LVL, "该卡已签约卡通业务[%s]", sign_info.acc);
			core_err = 35003;
			strcpy( err_msg, "该卡已签约卡通业务" );
            PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
            PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return ( -1);
			}
		  }
		  else 
		  {
			sign_info.signflag[0]='1';
			/*add by xxj 20150320 for统一支付信息同步 BEGIN*/
                        if( SyncSigninfo(&sign_info) != 0 )
                        {
                                WriteLog( ERR_LVL,"统一支付信息同步错");
				core_err = 99999;
				strcpy( err_msg, "处理失败");
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
				PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
                                return( -1 );
                        }
                         /*add by xxj 20150320 for统一支付信息同步 END */
		 	EXEC SQL UPDATE t_pagt_signinfo 
					 SET * = (:sign_info)
		           	 WHERE batchno = :sign_info.batchno
		           	 AND prsn_no = :sign_info.prsn_no;
					if ( sqlca.sqlcode)
			   		{ 
			     	WriteLog( ERR_LVL,"更新签约信息表失败[%d]",sqlca.sqlcode);
			     	core_err = 99999;
        	        strcpy( err_msg, "更新签约信息表失败" );
        	        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        	        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			     	PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			     	return ( -1);
			    	}
		  }
	    }
	}
	else if( stat[0] == '1')		/**解约**/
	{ 
		sign_info_jnl.signflag[0] = '0';
		/* 插签约流水表 */
		EXEC SQL INSERT INTO t_pagt_signinfo_jnl VALUES ( :sign_info_jnl );
		if( sqlca.sqlcode )
		{
			WriteLog ( ERR_LVL, "插入签约流水表失败![%d]",sqlca.sqlcode );
			ERROUT("插签约流水数据库错" );
			core_err = 99999;
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			return( -1 );	
		}	
		/* 更新签约信息表 */
		EXEC SQL SELECT signflag INTO :sign_info.signflag
		FROM t_pagt_signinfo
		WHERE batchno = :sign_info.batchno
		AND prsn_no = :sign_info.prsn_no;
		if( sqlca.sqlcode )
			{
				if( sqlca.sqlcode==SQLNOTFOUND )
					{
						WriteLog( ERR_LVL,"客户签约信息表无对应记录![%d]",sqlca.sqlcode);
						ERROUT("客户签约信息无记录" );
						core_err = 99999;
						PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
						PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
						return (-1);
					}
				else
					{
						WriteLog ( ERR_LVL, "查询客户签约信息表失败![%d]",sqlca.sqlcode );
						ERROUT("查询签约信息失败" );
						core_err = 99999;
					    PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&core_err, 0);
						PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
						return( -1 );	
					}	
			}
			if ( sign_info.signflag[0] == '0' )
				{
					WriteLog ( ERR_LVL, "该卡已解约卡通业务[%s]", sign_info.acc);
					core_err = 35004;
					strcpy( err_msg, "该卡已解约卡通业务" );
        	        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        	        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
					PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
					return ( -1);
				}
				else 
					{
					/*add by xxj 20150320 for统一支付信息同步 BEGIN*/
					if( SyncSigninfo(&sign_info) != 0 )
					{
						WriteLog( ERR_LVL,"统一支付信息同步错");
						core_err = 99999;
						strcpy( err_msg, "处理失败");
						PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
						PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
						PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
						return( -1 );
					}
					/*add by xxj 20150320 for统一支付信息同步 END */

		   			EXEC SQL UPDATE t_pagt_signinfo 
			    		SET signflag[1,1]='0',modtime = :sign_info.modtime
		            			WHERE batchno = :sign_info.batchno
		            			AND prsn_no = :sign_info.prsn_no;
						if ( sqlca.sqlcode)
			   			{ 
			     			WriteLog( ERR_LVL,"更新签约信息表失败[%d]",sqlca.sqlcode);
			     			core_err = 99999;
        	                strcpy( err_msg, "更新签约信息表失败" );
        	                PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&core_err, 0 );
        	                PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			     			PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
			     			return ( -1);
			    		}
					 }
	 }
	 PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "0", 0 );
	 return(0);
 }

/*****************************************************
**函数描述     : 统一支付签约同步
**函数用途     : 统一支付支付宝签约信息同步
**输入         ：
**输出         :
**创建日期     ：2015/03/20
**最后修改日期 ：
**Create by    : XXJ
*****************************************************/
int SyncSigninfo( struct s_pagt_signinfo *signInfo )
{
	char ncsbuff[20480+1];
	char ncsrcvbuff[20480+1];
	char seqno[10+1];
	char err_code[10+1];
	char signstat[1+1];

	int ret = 0;

	memset( ncsbuff, 0 ,sizeof( ncsbuff));
	memset( ncsrcvbuff, 0 ,sizeof( ncsrcvbuff));
	memset( seqno, 0 ,sizeof( seqno));
	memset( err_code, 0 ,sizeof( err_code));
	memset( signstat, 0 ,sizeof( signstat));

	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, seqno, 0 );
	WriteLog( ERR_LVL, "signflag ====[%s]",signInfo->signflag[0] );
	if(signInfo->signflag[0] == '0')/*解约*/
	{
		signstat[0] = '1';  /*失效*/
	}
	else if(signInfo->signflag[0] == '1') /*签约``*/
	{
		signstat[0] = '0'; /*生效*/
	}

	sprintf(ncsbuff, "<Pltf_Biz_Typ>D200</Pltf_Biz_Typ><Pltf_Biz_Kind>09001</Pltf_Biz_Kind><Agmt_Sign_Stat>1</Agmt_Sign_Stat><Agmt_Efft_Stat>%c</Agmt_Efft_Stat><Auth_Pay_Agmt_Num>%s</Auth_Pay_Agmt_Num><Cust_ID>0</Cust_ID><Payr_Acct_Num>%s</Payr_Acct_Num><Payr_Nm>%s</Payr_Nm><Payr_Acct_Typ></Payr_Acct_Typ><Payr_Open_Acct_Bank_Nm></Payr_Open_Acct_Bank_Nm><Payr_Open_Acct_Bank_Id>402651020006</Payr_Open_Acct_Bank_Id><Payr_Tel_Num>%s</Payr_Tel_Num><Cert_Typ>%s</Cert_Typ><Cert_Num>%s</Cert_Num><Card_Valid_Dt></Card_Valid_Dt><CVV2_Num></CVV2_Num><Recvr_Acct_Num>0</Recvr_Acct_Num><Recvr_Nm>0</Recvr_Nm><Recvr_Open_Acct_Bank_Nm>400331000002</Recvr_Open_Acct_Bank_Nm><Recvr_Open_Acct_Bank_Id>400331000002</Recvr_Open_Acct_Bank_Id><Cust_Serv_Num></Cust_Serv_Num><Per_Biz_Amt_Ceil>%s</Per_Biz_Amt_Ceil><Day_Accm_Biz_Cnt_Ceil></Day_Accm_Biz_Cnt_Ceil><Day_Accm_Amt_Ceil>%s</Day_Accm_Amt_Ceil><Mth_Accm_Biz_Cnt_Ceil></Mth_Accm_Biz_Cnt_Ceil><Mth_Accm_Amt_Ceil></Mth_Accm_Amt_Ceil><Agmt_Efft_Dt>%s</Agmt_Efft_Dt><Agmt_Invld_Dt></Agmt_Invld_Dt>",signstat[0],signInfo->prsn_no,signInfo->acc,signInfo->name,signInfo->signinfo1,signInfo->cert_type,signInfo->cert_no,signInfo->signinfo6,signInfo->signinfo7,signInfo->signdate);

	WriteLog( ERR_LVL, "SEND_BUFF IS ====[%s]",ncsbuff );
	UPBSNCSSelect( ncsbuff,ncsrcvbuff ,4,seqno);
	ret = UpbsGetResult( ncsrcvbuff, "dealcode", err_code );
	if( ret < 0 )
	{
		WriteLog( ERR_LVL, "报文解析dealcode错误!" );
		return( -1 );
	}
	if( strncmp( err_code, "000000", 6 ) != 0 )
	{
		WriteLog( ERR_LVL, "交易失败");
		return( -1 );
	}
	WriteLog( ERR_LVL, "err_code===[%s]",err_code);
	WriteLog( ERR_LVL, "xxxxjjjjj成功");
	return( 0 );
}
