/*****************************************************
**函数描述     : 支付限额修改 
**函数用途     : 修改单日限额以及单笔限额 
**输入         ：
**输出         : 
**创建日期     ：2011/05/17
**最后修改日期 ：
**Create by    : Archer
*****************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"

EXEC SQL  include "PAGT.h";

int ct_GetParaContent();
int Data_MaxPay_Modify();
/*
 *    Trans       :	 
 *    Function    :  Data_MaxPay_Modify
 *    Premise     :  修改限额
 *    Input       : 
 *    Output      :  无
 *    Return      :   0 -- 成功
 *                   -1 -- 失败
 *    ------------------------------------
 *    Name        Action         Date            Content
 *   
 */
int
Data_MaxPay_Modify()
{
	EXEC SQL BEGIN DECLARE SECTION;
	struct s_pagt_signinfo sign_info;
	char  batchno[10+1];
	char  channel[2+1];
    char  singmax[20+1];
    char  daymax[20+1];
	char  card_no[19+1];
	EXEC SQL END DECLARE SECTION;

	int  ret=0;
	char day_d_max[20+1];
	char sign_d_max[20+1];
    long ret_code=0;
    char ret_msg[40+1];

	memset( &sign_info, 0x00, sizeof( struct s_pagt_signinfo ));
	memset( batchno, 0, sizeof(batchno) );
	memset( channel, 0, sizeof(channel) );
	memset( singmax, 0, sizeof(singmax) );
	memset( daymax, 0, sizeof(daymax) );
	memset( card_no, 0, sizeof(card_no) );
	memset( day_d_max, 0, sizeof(day_d_max) );
	memset( sign_d_max, 0, sizeof(sign_d_max) );
    memset( ret_msg, 0, sizeof(ret_msg) );
	
		/* 从变量池取值 */
	GetPoolDataByName("CARDCURIB","webNo",0,0,card_no,0);
	GetPoolDataByName("CARDCURIB","singleMax",0,0,singmax,0);
	GetPoolDataByName("CARDCURIB","dayMax",0,0,daymax,0);
	GetPoolDataByName("CARDCURIB","channel",0,0,channel,0);
	Trim( card_no );
	Trim( singmax );
	Trim( daymax);
	Trim( channel );

    ret = ct_GetParaContent( "NCS", "dayamt_limt", day_d_max);
	if ( ret <0)
	{
		 strcpy( ret_msg, "取当日限额失败");
	     WriteLog( ERR_LVL, ret_msg);
		 ret_code = 99999;
		 PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
		 PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		 return( -1);
	}
   ret = ct_GetParaContent( "NCS", "signamt_limt", sign_d_max);
	if ( ret <0)
	{
		strcpy( ret_msg, "取单笔限额失败");
		WriteLog( ERR_LVL, ret_msg);
		ret_code = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		return( -1);
	}
	
	if(atof(daymax)>atof(day_d_max))
	{
	    strcpy( ret_msg, "当日限额超限");
		WriteLog( ERR_LVL, ret_msg);
		ret_code = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		return( -1);
	}
	if(atof(singmax)>atof(sign_d_max))
	{
	    strcpy( ret_msg, "单笔限额超限");
		WriteLog( ERR_LVL, ret_msg);
		ret_code = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		return( -1);
	}
	
	ret = PayGetPbDate( sign_info.moddate );
	if( ret < 0 )
	{
		WriteLog(ERR_LVL,"取PB日期失败!\n");
		strcpy(ret_msg,"取会计时间错");
		ret_code = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}
	dtcurrent( &sign_info.modtime );

	EXEC SQL SELECT content INTO :batchno
             FROM t_pay_sys_para
             WHERE inst_no = 'NCS'
             AND data_code = 'Batchno';
        if( SQLCODE != 0)
        {
                WriteLog(ERR_LVL,"取项目编号失败![%d]",SQLCODE);
                PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
                return( -1 );
        }
	
	/* 查询数据 */	
    EXEC SQL SELECT * INTO :sign_info
              FROM t_pagt_signinfo
              WHERE batchno = :batchno
              AND   prsn_no = :card_no;
      if( sqlca.sqlcode )
       {
          if( sqlca.sqlcode==SQLNOTFOUND )
          {
           WriteLog( ERR_LVL,"客户签约信息表无对应记录![%d]",sqlca.sqlcode);
           strcpy( ret_msg, "无签约记录");
           ret_code = 99999;
           PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
           PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);

           PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
           return (-1);
          }
          else
          {
            WriteLog ( ERR_LVL, "查询客户签约信息表失败![%d]",sqlca.sqlcode);
            strcpy( ret_msg, "查询签约信息失败");
            ret_code = 99999;
            PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
            PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);

            PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
            return( -1 );
          }
       }
    Trim( sign_info.signacc );
    if( strcmp(card_no,sign_info.signacc)!=0 )  
     { 
        WriteLog( ERR_LVL,"签约信息不符[%s]",sign_info.prsn_no);
        strcpy( ret_msg, "签约信息不符");
        ret_code = 99999;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
        PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
        return (-1);
     } 
     	/* 更新数据 */	
	EXEC SQL UPDATE t_pagt_signinfo
	    SET Signinfo6 = :singmax, 
	    Signinfo7 = :daymax,
	    signinfo8 = :channel,
		moddate = :sign_info.moddate,	
		modtime = :sign_info.modtime
	    WHERE batchno = :batchno	
  	    AND prsn_no = :card_no;	
	if( sqlca.sqlcode || sqlca.sqlerrd[2] != 1)
	{
		WriteLog ( ERR_LVL, "更新客户签约信息表失败![%d]",sqlca.sqlcode );
        strcpy( ret_msg, "支付限额修改失败");
        ret_code = 35007;
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&ret_code, 0);
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, ret_msg, 0);
		PutPoolDataByName( "CARDCURIB", "stat", 0, 0, "1", 0 );
		return( -1 );	
	}	
	return( 0 );
}

/*
 *    Trans       :	 卡通取状态
 *    Function    :  ct_GetParaContent
 *    Premise     :  从系统状态表t_pay_sys_para中取对应状态
 *    Input       :  inst_no	项目分类				 
                     data_code	项目名字
 *					 content	项目内容
 *    Output      :  无
 *    Return      :   0 -- 成功
 *                   -1 -- 失败
 *    ------------------------------------
 *    Name        Action         Date            Content
 *    zhaomy     Create         2011/06/09
 */
int  
ct_GetParaContent ( inst_no, data_code, content)
EXEC SQL BEGIN DECLARE SECTION;
char *inst_no;
char *data_code;
char *content;
EXEC SQL END DECLARE SECTION;
{
	char err_msg[60+1];

	memset( err_msg, 0, sizeof (err_msg));
	WriteLog( ERR_LVL, "inst_no[%s],data_code[%s]",inst_no, data_code);
	rtrim(inst_no);
	rtrim(data_code);
	EXEC SQL SELECT content[1,19] INTO :content
		FROM t_pay_sys_para
		WHERE inst_no = :inst_no
		AND data_code = :data_code;
	if ( sqlca.sqlcode)
	{
		WriteLog( ERR_LVL, "数据库操作错[%d]",sqlca.sqlcode);
		return ( -1);
	}
	rtrim(content);
	WriteLog( APP_LVL, "content[%s]", content);
	return ( 0);
}
