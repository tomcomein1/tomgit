#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include <time.h>

#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pbappdb.h"
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"

#include "pbdb.h"
#include "fml32.h"
#include "atmi.h"

/* Modified by MSJ for 王晓瑞-网银理财项目并版 20140515 */
/** #include "pbsrv.h" **/
EXEC SQL include "pbsrv.h";

long NetBank_Pub_InsertPbTlrLog();
long AccQryPub5711();
long GetFixNotifyAmt();
long GetFixLedgerInfo();
long GetPubSvtInfo();

struct prdnoinfo
{
	double bgn_amt;
	double bgn_m_amt;
};
struct FixLedInfoStr
{
	char inst_no[4+1];
	char acc_name[128+1];
	char cstm_no[14+1];
	char prd_no[4+1];
	double bal;
	double aval_bal;
};

/*************************************************
* Date		Action	User			Desc.
* 20130912	更新	Zhang.Chao		PB迁移,PQDS改造,删除由账号查询卡号部分.
*************************************************/

long 
WY_CalsavTCdm()
{
	EXEC SQL BEGIN DECLARE SECTION;
		struct s_pb_tlrlog pb_tlrlog;
		char pbdate[8+1];
		char prd_no[4+1];
		char curr_type[2+1];
		char acctype[4+1];
	EXEC SQL END DECLARE SECTION;
	struct FixLedInfoStr fix_ledger;
	struct FixLedInfoStr fix_ledger1;
	struct prdnoinfo prdnoinfo;
	char tx_code[40+1];
	char old_tx_code[40+1];
	char summ_no[12+1];
	char summ_note[60+1];
	char in_acc[32+1];
	char out_acc[32+1];
	char subAcct[32+1];
	char hostseqno[10+1];
	char err_msg[256+1];
	char s_amt[16+1];
	char in_card_no[32+1];
	char out_card_no[32+1];
	char inst_no[4+1];
	char noticeFlg[2+1];
	char noticeNb[32+1];

	char curAcctBal[16+1];
	char curAcctAvlBal[16+1];
	char curAcctBal_pre[16+1];
	char curAcctAvlBal_pre[16+1];
	char transIntrstAmt[16+1];
	char fixBal[16+1];
	char fixAvlBal[16+1];
	char hostSeqNb[16+1];
	char transAmt[16+1];
	char noticeAmt[16+1];

	long l_noticeNb = 0;
	long app_err_no = 0;
	long errcode = 0;
	long hoststat = -1;
	long ret = 0;
	long l_accsign = 0;

	long summno = 0;
	double amt = 0.00;
	double f_transAmt = 0.00;
	double f_noticeAmt = 0.00;
	double f_cashHandAmt = 0.00;
	double f_aval_bal = 0.00;
	double f_curAcctBal = 0.00;
	double f_curAcctAvlBal = 0.00;
	double f_curAcctBal_pre = 0.00;
	double f_transIntrstAmt = 0.00;

	memset( &pb_tlrlog, 0x00, sizeof( pb_tlrlog ) );
	memset( &fix_ledger, 0x00, sizeof( fix_ledger ) );
	memset( &fix_ledger1, 0x00, sizeof( fix_ledger1 ) );
	memset( pbdate, 0x00, sizeof( pbdate ) );
	memset( prd_no, 0x00, sizeof( prd_no ) );
	memset( curr_type, 0x00, sizeof( curr_type ) );
	memset( tx_code, 0x00, sizeof( tx_code ) );
	memset( old_tx_code, 0x00, sizeof( old_tx_code ) );
	memset( curr_type, 0x00, sizeof( curr_type ) );
	memset( summ_no, 0x00, sizeof( summ_no ) );
	memset( summ_note, 0x00, sizeof( summ_note ) );
	memset( in_acc, 0x00, sizeof( in_acc ) );
	memset( out_acc, 0x00, sizeof( out_acc ) );
	memset( subAcct, 0x00, sizeof( subAcct ) );
	memset( hostseqno, 0x00, sizeof( hostseqno ) );
	memset( err_msg, 0x00, sizeof( err_msg ) );
	memset( s_amt, 0x00, sizeof( s_amt ) );
	memset( in_card_no, 0x00, sizeof( in_card_no ) );
	memset( out_card_no, 0x00, sizeof( out_card_no ) );
	memset( inst_no, 0x00, sizeof( inst_no ) );
	memset( noticeFlg, 0x00, sizeof( noticeFlg ) );
	memset( noticeNb, 0x00, sizeof( noticeNb ) );

	memset( curAcctBal, 0x00, sizeof( curAcctBal ) );
	memset( curAcctAvlBal, 0x00, sizeof( curAcctAvlBal ) );
	memset( curAcctBal_pre, 0x00, sizeof( curAcctBal_pre ) );
	memset( curAcctAvlBal_pre, 0x00, sizeof( curAcctAvlBal_pre ) );
	memset( fixBal, 0x00, sizeof( fixBal ) );
	memset( fixAvlBal, 0x00, sizeof( fixAvlBal ) );
	memset( hostSeqNb, 0x00, sizeof( hostSeqNb ) );
	memset( transAmt, 0x00, sizeof( transAmt ) );
	memset( noticeAmt, 0x00, sizeof( noticeAmt ) );
	memset( transIntrstAmt, 0x00, sizeof( transIntrstAmt ) );

	WriteLog( APP_LVL, "===通知存款转活===" );

	GetPoolDataByName( "BUSIIB", "noticeAcct", 0, 0, out_acc, 0 );
	rtrim( out_acc );
	GetPoolDataByName( "BUSIIB", "subAcct", 0, 0, subAcct, 0 );
	rtrim( subAcct );
	GetPoolDataByName( "PAGTBUF", "currtype", 0, 0, curr_type, 0 );
	rtrim( curr_type );
	GetPoolDataByName( "BUSIIB", "curAcct", 0, 0, in_acc, 0 );
	rtrim( in_acc );
	GetPoolDataByName( "BUSIIB", "noticeFlg", 0, 0, noticeFlg, 0 );
	rtrim( noticeFlg );
	GetPoolDataByName( "BUSIIB", "noticeNb", 0, 0, noticeNb, 0 );
	rtrim( noticeNb );
	GetPoolDataByName( "BUSIIB", "transAmt", 0, 0, transAmt, 0 );
	rtrim( s_amt );
	WriteLog( APP_LVL, "out_acc[%s]", out_acc );
	WriteLog( APP_LVL, "subAcct[%s]", subAcct );
	WriteLog( APP_LVL, "curr_type[%s]", curr_type );
	WriteLog( APP_LVL, "in_acc[%s]", in_acc );
	WriteLog( APP_LVL, "noticeFlg[%s]", noticeFlg );
	WriteLog( APP_LVL, "noticeNb[%s]", noticeNb );
	WriteLog( APP_LVL, "transAmt[%s]", transAmt );
	
	/** Commentted by MSJ for SC6000Z's Subaccout 20140516 **/
	/**
	if( strlen( subAcct ) != 0 )
	{
		memset( out_acc, 0x00, sizeof( out_acc ) );
		strcpy( out_acc, subAcct );
	}
	if( out_acc[6] != '3' )
	{
		WriteLog( ERR_LVL, "转出账号不是定期账户!" );
		errcode = 99999;
		strcpy( err_msg, "转出账号不是定期账户!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	**/

	/**检查输入项**/
	if( noticeFlg[0] == '0' )
	{
		if( strlen( transAmt ) == 0 )
		{
			WriteLog( ERR_LVL, "未通知时金额必输!" );
			errcode = 99999;
			strcpy( err_msg, "未通知时金额必输!" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			return ( -1 );
		}
	}
	else if( noticeFlg[0] == '1' )
	{
		if( strlen( noticeNb ) == 0 )
		{
			WriteLog( ERR_LVL, "通知时通知编号必输!" );
			errcode = 99999;
			strcpy( err_msg, "通知时通知编号必输!" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			return ( -1 );
		}
	}
	else
	{
		WriteLog( ERR_LVL, "通知标志错!" );
		errcode = 99999;
		strcpy( err_msg, "通知标志错!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	
	/** Modified by MSJ for SC6000Z's Subaccout 20140516 **/
	/** ret = GetFixLedgerInfo( out_acc, &fix_ledger ); **/
	ret = GetFixLedgerInfo( out_acc, subAcct, &fix_ledger );
	if( ret != 0 )
	{
		WriteLog( ERR_LVL, "取通知存款账号信息错!" );
		errcode = 99999;
		strcpy( err_msg, "取通知存款账号信息错!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	rtrim( fix_ledger.prd_no );
	strcpy( prd_no, fix_ledger.prd_no );
        WriteLog( APP_LVL, "prd_no[%s]", fix_ledger.prd_no );
        /**检查账户类型**/
        EXEC SQL SELECT acctype INTO :acctype
                FROM t_pb_prdno_acctype
                WHERE prd_no = :prd_no
                AND currtype = :curr_type;
        if( sqlca.sqlcode )
        {
		WriteLog( APP_LVL, "查账户类型错!sqlcode[%ld]", sqlca.sqlcode );
                errcode = 99999;
                strcpy( err_msg, "查账户类型错!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	rtrim( acctype );
        WriteLog( APP_LVL, "acctype[%s]prd_no[%s]curr_type[%s]", acctype, prd_no
, curr_type );

	/**通知编号不为空时，要先把金额取回来,然后再做相应检查**/
	if( strlen( noticeNb) != 0 )
	{
		ret = GetFixNotifyAmt( out_acc, noticeNb, &f_noticeAmt );
		if( ret != 0 )
		{
			WriteLog( ERR_LVL, "取通知金额错!" );
			errcode = 99999;
			strcpy( err_msg, "取通知金额错!" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			return ( -1 );
		}
		WriteLog( APP_LVL, "f_noticeAmt[%.2f]", f_noticeAmt );
		if( strlen( transAmt ) != 0 )
		{
			f_transAmt = atof( transAmt );
			WriteLog( APP_LVL, "f_transAmt[%.2f]f_noticeAmt[%.2f]", f_transAmt, f_noticeAmt );
			if( f_transAmt != f_noticeAmt )
			{
				WriteLog( ERR_LVL, "通知金额与转账金额不一致!" );
				errcode = 99999;
				strcpy( err_msg, "通知金额与转账金额不一致!" );
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				return ( -1 );
			}
		}
		else
		{
			sprintf( transAmt, "%.2f", f_noticeAmt );
			WriteLog( APP_LVL, "transAmt[%s]", transAmt );
		}
	}

	/**取产品表信息检查留存金额**/
	ret = GetPubSvtInfo( fix_ledger.prd_no, curr_type, &prdnoinfo );
	if( ret != 0 )
	{
		WriteLog( ERR_LVL, "取产品信息错![%s] [%d]\n", __FILE__, __LINE__  );
		errcode = 99999;
		strcpy( err_msg, "取产品信息错!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}

	/**留存金额检查**/
	f_transAmt = atof( transAmt );
	WriteLog( APP_LVL, "f_transAmt[%.2f]", f_transAmt );
	WriteLog( APP_LVL, "aval_bal[%.2f]", fix_ledger.aval_bal );
	f_aval_bal = fix_ledger.aval_bal;
	f_cashHandAmt = f_aval_bal - f_transAmt;
	WriteLog( APP_LVL, "f_cashHandAmt[%.2f]", f_cashHandAmt );
	WriteLog( APP_LVL, "bgn_amt[%.2f]", prdnoinfo.bgn_amt );
	WriteLog( APP_LVL, "bgn_m_amt[%.2f]", prdnoinfo.bgn_m_amt );

	if( f_cashHandAmt < -0.001 || prdnoinfo.bgn_amt < -0.001 || prdnoinfo.bgn_m_amt < -0.001 || f_aval_bal < -0.001 || f_transAmt < -0.001 )
	{
		WriteLog( ERR_LVL, "金额小于零![%s] [%d]\n", __FILE__, __LINE__  );
		errcode = 99999;
		strcpy( err_msg, "金额小于零!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}

	if( prdnoinfo.bgn_m_amt > 0.001 )	
	{
		if( f_cashHandAmt > prdnoinfo.bgn_m_amt )
		{
			WriteLog( ERR_LVL, "留存金额大于最高开户金额![%s] [%d]\n", __FILE__, __LINE__  );
			errcode = 99999;
			strcpy( err_msg, "留存金额大于最高开户金额!" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			return ( -1 );
		}
		else
		{
     		if( prdnoinfo.bgn_amt > 0.001 )
			{
				if( f_cashHandAmt < prdnoinfo.bgn_amt )
				{
					l_accsign = 2;
					strcpy( err_msg, "不满足通知存款开户条件，已做销户处理!" );
					PutPoolDataByName( "BUSIIB", "thsdesc", 0, 0, err_msg, 0 );
				}
				else
				{
					l_accsign = 0;
				}
			}
			else
			{
				l_accsign = 0;
			}
		}
	}
	else
	{
		if( prdnoinfo.bgn_amt > 0.001 )
		{
			if( f_cashHandAmt < prdnoinfo.bgn_amt )
			{
				l_accsign = 2;
				strcpy( err_msg, "不满足通知存款开户条件，已做销户处理!" );
				WriteLog( APP_LVL, "不满足通知存款开户条件，已做销户处理!" );
				PutPoolDataByName( "BUSIIB", "thsdesc", 0, 0, err_msg, 0 );
			}
			else
			{
				l_accsign = 0;
			}
		}
		else
		{
			l_accsign = 0;
		}
	}
	

	/**转入账号检查**/
	ret = IsCardNo( in_acc );
	if( ret == 0 )
	{
		WriteLog( ERR_LVL, "转入账号[%s]是卡号", in_acc );
		strcpy( in_card_no, in_acc );
	}
	else
	{
		/*非卡号不能做此交易 add by zhangchao 20130912*/
		WriteLog( ERR_LVL, "转入账号[%s]不是卡号", in_acc );
		errcode = 99999;
		strcpy( err_msg, "转入账号不是卡号");
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}

	/**调用5711查询转入账户信息**/
	ret = AccQryPub5711( in_acc );
	if( ret )
	{
		WriteLog( ERR_LVL, "调用5711查询转出账号[%s]信息失败", out_acc );
		errcode = 99999;
		strcpy( err_msg, "查询转出账号信息失败!" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	memset( in_acc, 0x00, sizeof( in_acc ) );
        GetPoolDataByName ( "CBS", "Track2Data", 0, 0, in_acc, 0);
	rtrim( in_acc );
	/**
        GetPoolDataByName ( "CBS", "CustNo", 0, 0, in_cust_no, 0);
	**/
        GetPoolDataByName ( "CBS", "TranBranch", 0, 0, curAcctBal_pre, 0);
	rtrim( curAcctBal_pre );
        GetPoolDataByName ( "CBS", "TxFlag", 0, 0, curAcctAvlBal_pre, 0);
	rtrim( curAcctAvlBal_pre );
	

	WriteLog( APP_LVL, "开始登记PB日志表" );
	strcpy( pb_tlrlog.tran_inst, fix_ledger.inst_no );
	ret = NetBank_Pub_InsertPbTlrLog( &pb_tlrlog );
	if( ret < 0 )
	{
		WriteLog( ERR_LVL, "登记PB日志表失败![%s] [%d]\n", __FILE__, __LINE__  );
		errcode = 99999;
		strcpy( err_msg, "登记PB日志表失败" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}

	/**账务接口变量准备**/
	GetPoolDataByName( "PBSYS", "RTranCode", 0, 0, old_tx_code, 0 );
	rtrim( old_tx_code );
	strcpy( tx_code, "7201" );
	rtrim( tx_code );
	PutPoolDataByName( "ABSHEAD", "_tx_code", 0, 0, tx_code, 0 );
	strcpy( inst_no, fix_ledger.inst_no );
	PutPoolDataByName( "ABSHEAD", "organ_no", 0, 0, inst_no, 0 );
	/**摘要码**/
	summno = FIXTCAL;
	PutPoolDataByName( "CBS", "SummNo", 0, 0, (char *)&summno, 0 );
	strcpy( summ_note, "通知存款转活期" );
	PutPoolDataByName( "CBS", "Summary", 0, 0, summ_note, 0 );
	/**入账标志**/
	if( l_accsign == 0 ) 
	{
		PutPoolDataByName( "CBS", "AccSign", 0, 0, "0", 0 );
		PutPoolDataByName( "CBS", "SubTranCode", 0, 0, "01", 0 );
		/**转账：0维-转出账号 1维转入账号**/
		/**现转标志**/
		PutPoolDataByName( "CBS", "CshTsfFlag", 0, 0, "1", 0 );
		PutPoolDataByName( "CBS", "CshTsfFlag", 0, 1, "1", 0 );
		/**内部帐标志**/
		PutPoolDataByName( "CBS", "AccFlag", 0, 0, "0", 0 );
		PutPoolDataByName( "CBS", "AccFlag", 0, 1, "0", 0 );
		/**账号**/
		PutPoolDataByName( "CBS", "Account", 0, 0, out_acc, 0 );
		PutPoolDataByName( "CBS", "Account", 0, 1, in_acc, 0 );
		/**金额**/
		amt = 1.00;
		WriteLog( APP_LVL, "amt[%f]", amt );
		PutPoolDataByName( "CBS", "Amt", 0, 1, &amt, 0 );
		amt = atof( transAmt );
		WriteLog( APP_LVL, "amt[%s] [%f]", transAmt, amt );
		PutPoolDataByName( "CBS", "Amt", 0, 0, &amt, 0 );
		/* Modiefied by MSJ for SC6000z - 20140627 */
		/**
		if( strlen( noticeNb ) != 0 )
		{
		**/
		if( strlen( subAcct ) != 0 )
		{
			l_noticeNb = atol( subAcct );
			WriteLog( APP_LVL, "l_noticeNb[%ld]", l_noticeNb );
			PutPoolDataByName( "CBS", "AccId", 0, 0, &l_noticeNb, 0 );
			GetPoolDataByName( "CBS", "AccId", 0, 0, &l_noticeNb, 0 );
			WriteLog( APP_LVL, "l_noticeNb[%ld]", l_noticeNb );
		}
		else
		{
			WriteLog( ERR_LVL, "子账号为空[%s]", subAcct );
		}
		PutPoolDataByName( "CBS", "Summary", 0, 1, summ_note, 0 );
	}
	else if( l_accsign == 2 )
	{
		/* Modified by MSJ for 王晓瑞-网银理财项目并版 20140515 - Start */
		PutPoolDataByName( "CBS", "AccSign", 0, 0, "2", 0 );
		PutPoolDataByName( "CBS", "SubTranCode", 0, 0, "02", 0 );
		/**转账：0维-转出账号 1维转入账号**/
		/**现转标志**/
		PutPoolDataByName( "CBS", "CshTsfFlag", 0, 0, "1", 0 );
		PutPoolDataByName( "CBS", "CshTsfFlag", 0, 1, "1", 0 );
		/*PutPoolDataByName( "CBS", "CshTsfFlag", 0, 2, "1", 0 );del by wangxiaorui20140306*/
		/**内部帐标志**/
		PutPoolDataByName( "CBS", "AccFlag", 0, 0, "0", 0 );
		PutPoolDataByName( "CBS", "AccFlag", 0, 1, "0", 0 );
		/*PutPoolDataByName( "CBS", "AccFlag", 0, 2, "0", 0 );del by wangxiaorui20140306*/
		/**账号**/
		PutPoolDataByName( "CBS", "Account", 0, 0, out_acc, 0 );
		PutPoolDataByName( "CBS", "Account", 0, 1, in_acc, 0 );/*add by wangxiaorui*/
		/*PutPoolDataByName( "CBS", "Account", 0, 1, out_acc, 0 );
		PutPoolDataByName( "CBS", "Account", 0, 2, in_acc, 0 );del by wangxiaorui20140306*/
		/**金额**/
		/*amt = 0.00;
		WriteLog( APP_LVL, "amt[%f]", amt );
		PutPoolDataByName( "CBS", "Amt", 0, 1, &amt, 0 );
		amt = 1.00;
		WriteLog( APP_LVL, "amt[%f]", amt );
		PutPoolDataByName( "CBS", "Amt", 0, 2, &amt, 0 );del by wangxiaorui20140306*/
		/* add begin*/
		amt = 1.00;
		WriteLog( APP_LVL, "amt[%f]", amt );
		PutPoolDataByName( "CBS", "Amt", 0, 1, &amt, 0 );/*add by wangxiaorui20140306*/
		/**
		amt = atof( fix_ledger.aval_bal );
		WriteLog( APP_LVL, "amt[%s] [%f]", fix_ledger.aval_bal, amt );
		**/
		PutPoolDataByName( "CBS", "Amt", 0, 0, &fix_ledger.aval_bal, 0 );
		GetPoolDataByName( "CBS", "Amt", 0, 0, &amt, 0 );
		WriteLog( APP_LVL, "amt[%f]", amt );
		if( strlen( subAcct ) != 0 )
		{
			l_noticeNb = atol( subAcct );
			WriteLog( APP_LVL, "l_noticeNb[%ld]", l_noticeNb );
			PutPoolDataByName( "CBS", "AccId", 0, 0, &l_noticeNb, 0 );
			GetPoolDataByName( "CBS", "AccId", 0, 0, &l_noticeNb, 0 );
			WriteLog( APP_LVL, "l_noticeNb[%ld]", l_noticeNb );
		}
		else
		{
			WriteLog( ERR_LVL, "子账号为空[%s]", subAcct );
		}
		PutPoolDataByName( "CBS", "Summary", 0, 1, summ_note, 0 );
		/*PutPoolDataByName( "CBS", "Summary", 0, 2, summ_note, 0 );del by wangxiaorui20140306*/
		/* Modified by MSJ for 王晓瑞-网银理财项目并版 20140515 - End */
	}
	else
	{
		WriteLog( ERR_LVL, "入账标志错!" );
		errcode = 99999;
		strcpy( err_msg, "入账标志错" );
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}

	/**币种**/
	PutPoolDataByName( "CBS", "CurrType", 0, 0, curr_type, 0 );

	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, hostseqno, 0 );
	PutPoolDataByName("ABSHEAD","list_seqno",0,0, hostseqno,0);

	PutPoolDataByName( "ABSHEAD", "chnl_no", 0, 0, "W", 0);

	/**调用记账接口**/
	ret = PbRegAcc();
	GetPoolDataByName( "ABSHEAD", "_host_stat", 0, 0, &hoststat, 0 );
	if( ret != 0 )
	{
		WriteLog( ERR_LVL, "Call PbRegAcc Err!" );
		if( ret == -1 )
		{
			WriteLog( ERR_LVL, "PbRegAcc timeout!" );
			errcode = 99999;
			strcpy( err_msg, "交易超时，请在账户查询里查询余额及子账户!" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			/**冲正**
			ret = UpdNetBank_PL_AccJnl( pb_tlrlog.tran_date, pb_tlrlog.tran_seqno );
			if( ret != 0 )
                        {
                                WriteLog( ERR_LVL, "更新ACCJNL状态失败!" );
                                strcpy( err_msg, "更新ACCJNL状态失败!" );
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				return ( -1 );
                        }
                        ret = NetBank_PL_InsRevJnl();
                        if( ret < 0 )
                        {
                                WriteLog( ERR_LVL, "插入冲正流水表失败!" );
                                strcpy( err_msg, "插入冲正流水表失败!" );
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				return ( -1 );
                        }
			**/
		}
		else
		{
			WriteLog( ERR_LVL, "核心记账失败!hoststat[%d]", hoststat );
			errcode = 99999;
			memset( err_msg, 0x00, sizeof( err_msg ) );
			GetPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			trim( err_msg );
			if( strlen( err_msg ) == 0 )
			{
				strcpy( err_msg, "核心记账失败" );
			}
			ret = DelNetBank_PL_AccJnl( pb_tlrlog.tran_date, pb_tlrlog.tran_seqno );
			if( ret < 0 )
                        {
                                WriteLog( ERR_LVL, "删除ACCJNL表失败!" );
                                strcpy( err_msg, "删除ACCJNL表失败!" );
				PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
				PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
				return ( -1 );
                        }
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		}
		return ( -1 );
	}
	WriteLog( APP_LVL, "out_acc[%s]in_acc[%s]", out_acc, in_acc );
	memset( out_acc, 0x00, sizeof( out_acc ) );
	/**取定期账号(因可能是新开户，所以从5710返回报文中取定期账户)**/
	GetPoolDataByName( "CBS", "Account", 0, 0, out_acc, 0 );
	if( l_accsign == 0 )
	{
		/** Modified by MSJ for SC6000Z's Subaccout 20140627 **/
		/*ret = GetFixLedgerInfo( out_acc, &fix_ledger1 ); */
		ret = GetFixLedgerInfo( out_acc, subAcct, &fix_ledger1 );
		 if( ret != 0 )
		 {
			 WriteLog( APP_LVL, "取定期账号余额失败!" );
			 errcode = 99999;
			 strcpy( err_msg, "取定期账号余额失败!" );
			 PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char*)&errcode, 0 );
			 PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
			 return ( -1 );
		 }
                sprintf( fixAvlBal, "%.2f", fix_ledger1.aval_bal );
                sprintf( fixBal, "%.2f", fix_ledger1.bal );

	}
	else if( l_accsign == 2 )
	{
		strcpy( fixAvlBal, "0.00" );
                strcpy( fixBal, "0.00" );
	}

	WriteLog( APP_LVL, "fixBal[%s]fixAvlBal[%s]", fixBal, fixAvlBal );

        PutPoolDataByName( "BUSIIB", "noticeAcctBal", 0, 0, fixBal, 0 );
        PutPoolDataByName( "BUSIIB", "noticeAcctAvlBal", 0, 0, fixAvlBal, 0 );

	ret = AccQryPub5711( in_acc );
	if( ret )
	{
		WriteLog( ERR_LVL, "查询活期账户余额失败!" );
		errcode = 99999;
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		return ( -1 );
	}
	GetPoolDataByName( "CBS", "TranBranch", 0, 0, curAcctBal, 0 );
	GetPoolDataByName( "CBS", "TxFlag", 0, 0, curAcctAvlBal, 0 );
	
	f_curAcctBal = atof( curAcctBal );
        f_curAcctBal /= 100;
        f_curAcctAvlBal = atof( curAcctAvlBal );
        f_curAcctAvlBal /= 100;
        f_curAcctBal_pre = atof( curAcctBal_pre );
        f_curAcctBal_pre /= 100;

	memset( curAcctBal, 0x00, sizeof( curAcctBal ) );
        memset( curAcctAvlBal, 0x00, sizeof( curAcctAvlBal ) );
        sprintf( curAcctBal, "%.2f", f_curAcctBal );
        sprintf( curAcctAvlBal, "%.2f", f_curAcctAvlBal );

	PutPoolDataByName( "BUSIIB", "curAcctBal", 0, 0, curAcctBal, 0 );
	PutPoolDataByName( "BUSIIB", "curAcctAvlBal", 0, 0, curAcctAvlBal, 0 );
        f_transIntrstAmt = f_curAcctBal - amt - f_curAcctBal_pre;
        WriteLog( APP_LVL, "转存利息[%.2f]转账后活期余额[%.2f]交易金额[%.2f]转账前活期余额[%.2f]", f_transIntrstAmt, f_curAcctBal, amt, f_curAcctBal_pre );

	sprintf( transIntrstAmt, "%.2f", f_transIntrstAmt );
	PutPoolDataByName( "BUSIIB", "transIntrstAmt", 0, 0, transIntrstAmt, 0 );

	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, hostSeqNb, 0 );
	PutPoolDataByName( "BUSIIB", "hostSeqNb", 0, 0, hostSeqNb, 0 );

	return ( 0 );
}

long 
GetFixNotifyAmt( acc, noticeNb, transAmt )
char *acc;
char *noticeNb;
double *transAmt;
{
	char pqqry[1024+1];
	
	double f_tmp_amt = 0.00;
	long ret = 0;
	long serno = 0;

	memset( pqqry, 0x00, sizeof( pqqry ) );

	WriteLog( APP_LVL, "acc[%s]", acc );
	WriteLog( APP_LVL, "noticeNb[%s]", noticeNb );
	serno = atol( noticeNb );
	sprintf( pqqry, "select notice_amt from t_fix_notify where acc = \"%s\" and serno = %d", acc, serno );
	WriteLog( APP_LVL, "pqqry[%s]", pqqry );
	ret = PqQry( "9996", (char *)&f_tmp_amt, pqqry );
	if( ret != 0 )
	{
		WriteLog( ERR_LVL, "PqQry Err!" );
		return ( -1 );
	}
	WriteLog( APP_LVL, "f_tmp_amt[%.2f]", f_tmp_amt );
	*transAmt = f_tmp_amt;
	WriteLog( APP_LVL, "transAmt[%.2f]", *transAmt );

	return ( 0 );
}

long 
GetPubSvtInfo( prd_no, curr_type, prdnoinfo )
char *prd_no;
char *curr_type;
struct prdnoinfo *prdnoinfo;
{
	char pqqry[1024+1];
	struct prdnoinfo tmp;
	long ret = 0;

	memset( pqqry, 0x00, sizeof( pqqry ) );
	memset( &tmp, 0x00, sizeof( struct prdnoinfo ) );

	WriteLog( APP_LVL, "prd_no[%s]", prd_no );
	WriteLog( APP_LVL, "curr_type[%s]", curr_type );
	sprintf( pqqry, "select bgn_amt, bgn_m_amt from t_pub_svt where prd_no = \"%s\" and curr_type = \"%s\"", prd_no, curr_type );
	WriteLog( APP_LVL, "pqqry[%s]", pqqry );
	ret = PqQry( "9996", (char *)&tmp, pqqry );
	if( ret != 0 )
	{
		WriteLog( ERR_LVL, "PqQry Err!" );
		return ( -1 );
	}
	WriteLog( APP_LVL, "bgn_amt[%.2f]", tmp.bgn_amt );
	WriteLog( APP_LVL, "bgn_m_amt[%.2f]", tmp.bgn_m_amt );
	prdnoinfo->bgn_amt = tmp.bgn_amt;
	prdnoinfo->bgn_m_amt = tmp.bgn_m_amt;

	return ( 0 );
}
