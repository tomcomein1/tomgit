/*PB3.0系统自动生成demo源码文件*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h" 
#include "pbstructdef.h" 
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"
int  pbbusi700baseDemo ()
{
	return ( 0 );
}
/*****************************************
 *    Function    :	LoanRetHisQry
 *    DESC        :	贷款还款历史信息
 *    INPUT       :	NULL
 *    Return:   0 -- 成功  -1 -- 失败
 *    ------------------------------------
 *    Author	Date			Action
 *    wqc 		2010/10/28		Create
*****************************************/

long  
LoanRetHisQry( )
{
	char acc[25+1];
	char currtype[6+1];
	char repay_date[10+1];
	char repaymode[1+1];
	char repayModeNm[10+1];
	char s_loan_term[8+1];
	char str_tmp[20];
	char str_rec_num[20];

	long rec_num;
	long i;
	double amt;

	i = 0;
	amt = 0.0;
	rec_num = 0;
	memset(acc, 0, sizeof(acc));
	memset(repaymode, 0, sizeof(repaymode));
	memset(str_rec_num, 0, sizeof(str_rec_num));
	memset(repayModeNm, 0, sizeof(repayModeNm));
	memset(s_loan_term, 0, sizeof(s_loan_term));

	/* 符合条件的记录数 */
	GetPoolDataByName( "BUSIIB", "turnPageTotalQnt", 0, 0, str_rec_num, 0 );

	WriteLog( ERR_LVL, "------符合条件记录数[%s]-----", str_rec_num);
	rec_num = atol(str_rec_num);
	WriteLog( ERR_LVL, "------符合条件记录数[%d]-----", rec_num);

	GetPoolDataByName( "BUSIIB", "repayMode", 0, 0, repaymode, 0 );
	GetPoolDataByName( "BUSIIB", "repayModeNm", 0, 0, repayModeNm, 0 );
	GetPoolDataByName( "BUSIIB", "repayCardAcctNb", 0, 0, acc, 0 );
	/**
	GetPoolDataByName( "BUSIIB", "loanTerm", 0, 0, s_loan_term, 0 );
	WriteLog( APP_LVL, "loanTerm[%s]", s_loan_term );
	rtrim( s_loan_term );	
	**/
	rtrim( repaymode );
	rtrim( repayModeNm );
	WriteLog( APP_LVL, "repaymode[%s]", repaymode );
	WriteLog( APP_LVL, "repayModeNm[%s]", repayModeNm );
	WriteLog( APP_LVL, "rec_num[%ld]", rec_num );

	for( i=0; i<rec_num; i++ )
	{
		/* 还款方式 */
		PutPoolDataByName( "BUSIIB", "repayMode", i, 0, repaymode, 0 );
		PutPoolDataByName( "BUSIIB", "repayModeNm", i, 0, repayModeNm, 0 );
		/**
		PutPoolDataByName( "BUSIIB", "loanTerm", i, 0, s_loan_term, 0 );
		**/
		PutPoolDataByName( "BUSIIB", "repayCardAcctNb", i, 0, acc, 0 );
	}

	return 0;
}

/*****************************************
 *    Function    :	AfterParaConv
 *    DESC        :	参数转换,核心的参数转为第三方格式
 *    INPUT       :	NULL
 *    Return:   0 -- 成功  -1 -- 失败
 *    ------------------------------------
 *    Author	Date			Action
 *    wqc 		2010/11/06		Create
*****************************************/

long  
AfterParaConv( char * param )
{
    EXEC SQL BEGIN DECLARE SECTION;
    char busitype[3+1];
    char paratype[10+1];
    char outcode[20+1];
    char incode[20+1];
    char curr_type[6];
    char str_rec_num[20+1];
    EXEC SQL END DECLARE SECTION;

	long rec_num;
	long i,j;
    int  ret;

    ATOM_PARA Para;
    char err_code[6+1];
    char err_msg[256+1];
	long errcode = 0;

	i = 0;
	j = 0;
	rec_num = 0;
    memset( busitype, 0x00, sizeof( busitype ) );
    memset( curr_type, 0x00, sizeof( curr_type ) );
    memset( paratype, 0x00, sizeof( paratype ) );
    memset( outcode, 0x00, sizeof( outcode ) );
    memset( incode, 0x00, sizeof( incode ) );
    memset( err_code, 0x00, sizeof( err_code ) );
    memset( err_msg, 0x00, sizeof( err_msg ) );

    GetPoolDataByName( "PBSYS", "BusiType", 0, 0, busitype, 0 );
    rtrim( busitype );

    memset( &Para, 0x00, sizeof( ATOM_PARA ) );
    ParseAtomPara( &Para, param );

	/* 符合条件的记录数 */
	GetPoolDataByName( "BUSIIB", "turnPageTotalQnt", 0, 0, str_rec_num, 0 );

	WriteLog( ERR_LVL, "------符合条件记录数[%s]-----", str_rec_num);
	rec_num = atoi(str_rec_num);
	WriteLog( ERR_LVL, "------符合条件记录数rec_num[%d]-----", rec_num);

	if(rec_num > 0)
	{
		for( i=0; i<rec_num; i++ )
		{
			for( j = 0; j < Para.ParaNum; j ++ )
			{
				rtrim( Para.Para[j] );
				memset( outcode, 0x00, sizeof( outcode ) );
				memset( incode, 0x00, sizeof( incode ) );

				WriteLog( APP_LVL, "j[%ld]", j );
				if( strcmp( Para.Para[j], "currencyTyp" ) == 0 )
				{
				/*
					GetPoolDataByName( "BUSIIB", "currencyTyp", 0, i, outcode, 0 );
				*/
					GetPoolDataByName( "BUSIIB", "currencyTyp", i, 0, outcode, 0 );
					strcpy( paratype, "currencyTyp" );
				}
				rtrim( outcode );

				EXEC SQL SELECT incode INTO :incode
					FROM t_pb_net_para
					WHERE busitype = :busitype
					AND paratype = :paratype
					AND outcode = :outcode;
				if( SQLCODE != 0 && SQLCODE != 100 )
				{
					WriteLog( ERR_LVL, "查询网银系统参数对应表失败!SQLCODE[%d]busitype[%s]paratype[%s]outcode[%s]\n", sqlca.sqlcode, busitype, paratype, outcode );
					strcpy( err_code, "99999" );
					errcode = 99999;
					strcpy( err_msg, "查询网银系统参数对应表失败!" );
					PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
					PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
					return ( -1 );
				}
				else if( SQLCODE == 100 )
				{
					WriteLog( ERR_LVL, "网银系统参数对应表配置有误，请检查!busitype[%s]paratype[%s]outcode[%s]\n", busitype, paratype, outcode );
					errcode = 99999;
					strcpy( err_msg, "查询网银系统参数对应表错!" );
					PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
					PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
					return ( -1 );
				}
				rtrim(incode);
				WriteLog( APP_LVL, "incode[%s]", incode );
				if( strcmp( paratype, "currencyTyp" ) == 0 )
				{
					PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, incode, 0 );
				}
			}
		}
	}
	else if( rec_num == 0 )
	{
			for( j = 0; j < Para.ParaNum; j ++ )
			{
				rtrim( Para.Para[j] );
				memset( outcode, 0x00, sizeof( outcode ) );
				memset( incode, 0x00, sizeof( incode ) );
				if( strcmp( Para.Para[j], "currencyTyp" ) == 0 )
				{
					GetPoolDataByName( "BUSIIB", "currencyTyp", 0, 0, outcode, 0 );
					strcpy( paratype, "currencyTyp" );
				}
				rtrim( outcode );

				EXEC SQL SELECT incode INTO :incode
					FROM t_pb_net_para
					WHERE busitype = :busitype
					AND paratype = :paratype
					AND outcode = :outcode;
				if( SQLCODE != 0 && SQLCODE != 100 )
				{
					WriteLog( ERR_LVL, "查询网银系统参数对应表失败!SQLCODE[%d]busitype[%s]paratype[%s]outcode[%s]\n", sqlca.sqlcode, busitype, paratype, outcode );
					strcpy( err_code, "99999" );
					errcode = 99999;
					strcpy( err_msg, "查询网银系统参数对应表失败!" );
					PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
					PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
					return ( -1 );
				}
				else if( SQLCODE == 100 )
				{
					WriteLog( ERR_LVL, "网银系统参数对应表配置有误，请检查!busitype[%s]paratype[%s]outcode[%s]\n", busitype, paratype, outcode );
					errcode = 99999;
					strcpy( err_msg, "查询网银系统参数对应表失败!" );
					PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
					PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
					return ( -1 );
				}
				rtrim(incode);
				if( strcmp( paratype, "currencyTyp" ) == 0 )
				{
					PutPoolDataByName( "BUSIIB", "currencyTyp", 0, 0, incode, 0 );
				}
			}
	}

	return 0;
}
