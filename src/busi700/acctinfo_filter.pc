/*****************************************************
**函数描述     : 查询凭证下所有账户信息交易后处理 
**函数用途     : 将核心返回的所有账户信息整合到一起 
**输入         ：    
**输出         : 无 
**创建日期     ：2011/03/18
**最后修改日期 ：
**Create by    : sqf
*****************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"

long MulNetParaConv();

int
AcctinfoFilter()
{
    EXEC SQL BEGIN DECLARE SECTION;
        char prd_no[4+1];
        char curr[32+1];
        char acctTyp[8+1];
        char savePeriod[4+1];
        char flag[1+1];
        char acctType[8+1];
	int  num_v=0;/**add by wangou 查询账户过多 20131225**/
    EXEC SQL END DECLARE SECTION;
    char acct[32+1];
    char subAcct[32+1];
    char openBrchID[32+1];
    char openBrchNm[40+1];
    char openBrchNmSt[32+1];
    char openDt[40+1];
    char acctStat[32+1];
    char acctKind[32+1];
    char currencyTyp[20+1];
    char cashFlg[2+1];
    char avlBal[16+1];
    char bal[16+1];
    char intrstBgnDt[20+1];
    char dueDt[20+1];
    char intrstRate[16+1];
    char custID[32+1];
    char custNm[128+1];
    char stat[2+1];
	char relnmustr[6];

    
    char busitype[3+1];
    char tmp[256+1];
    char err_msg[256+1];

    int i = 0;
    int j = 0;
    int k = 0;
    long errcode = 0;
    long card_rel_num = 0;

    memset( acct, 0x00, sizeof( acct ) ); 
    memset( subAcct, 0x00, sizeof( subAcct ) ); 
    memset( openBrchID, 0x00, sizeof( openBrchID ) ); 
    memset( openBrchNm, 0x00, sizeof( openBrchNm ) ); 
    memset( openBrchNmSt, 0x00, sizeof( openBrchNmSt ) ); 
    memset( openDt, 0x00, sizeof( openDt ) ); 
    memset( acctStat, 0x00, sizeof( acctStat ) ); 
    memset( acctTyp, 0x00, sizeof( acctTyp ) ); 
    memset( acctKind, 0x00, sizeof( acctKind ) ); 
    memset( curr, 0x00, sizeof( curr ) ); 
    memset( currencyTyp, 0x00, sizeof( currencyTyp ) ); 
    memset( cashFlg, 0x00, sizeof( cashFlg ) ); 
    memset( avlBal, 0x00, sizeof( avlBal ) ); 
    memset( bal, 0x00, sizeof( bal ) ); 
    memset( intrstBgnDt, 0x00, sizeof( intrstBgnDt ) ); 
    memset( savePeriod, 0x00, sizeof( savePeriod ) ); 
    memset( dueDt, 0x00, sizeof( dueDt ) ); 
    memset( intrstRate, 0x00, sizeof( intrstRate ) ); 
    memset( custID, 0x00, sizeof( custID ) ); 
    memset( custNm, 0x00, sizeof( custNm ) ); 
    memset( stat, 0x00, sizeof( stat ) ); 
    memset( prd_no, 0x00, sizeof( prd_no ) ); 
    memset( flag, 0x00, sizeof( flag ) ); 
    memset( acctType, 0x00, sizeof( acctType ) ); 

    memset( busitype, 0x00, sizeof( busitype ) ); 
    memset( tmp, 0x00, sizeof( tmp ) ); 
    memset( err_msg, 0x00, sizeof( err_msg ) ); 
    memset( relnmustr, 0x00, sizeof( relnmustr ) ); 

    GetPoolDataByName( "PBSYS", "BusiType", 0, 0, busitype, 0 );
    GetPoolDataByName( "BUSIIB2", "Cdmacct", 0, 0, acct, 0);
    GetPoolDataByName( "BUSIIB", "acctTyp", 0, 0, acctType, 0);
    rtrim(acctType);

    /* add by dly 20110530  begin */
    GetPoolDataByName( "PAGTBUF", "num", 0, 0, relnmustr, 0);
	card_rel_num = atol( relnmustr);
    WriteLog( APP_LVL, "card_rel_num[%d]", card_rel_num );
    /* add by dly 20110530  end */
	/* Added by wangou for 查询账户过多 20131225 - Start */
    EXEC SQL SELECT arrayno INTO :num_v FROM t_pb_busi_dict_fld
        WHERE busitype = '700'
          AND commstructno = '700100'
          AND commstructfldname = 'acct';
    if( sqlca.sqlcode!=0 )
    {
        WriteLog( ERR_LVL, "查询数据库表t_pb_busi_dict_fld失败[%ld]", sqlca.sqlcode);
        errcode = 99999;
        sprintf( err_msg, "数据库查询失败[%ld]", sqlca.sqlcode );
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
        return ( -1);
    }
    WriteLog( ERR_LVL, "BUSIIB_acct维度为[%d]", num_v );
    /* 20130509 - End */

    i = 0;
    j = 0;
    while( strlen( acct ) != 0 )
    {
        memset( acct, 0x00, sizeof( acct ) ); 
        memset( subAcct, 0x00, sizeof( subAcct ) ); 
        memset( openBrchID, 0x00, sizeof( openBrchID ) ); 
        memset( openBrchNm, 0x00, sizeof( openBrchNm ) ); 
        memset( openBrchNmSt, 0x00, sizeof( openBrchNmSt ) ); 
        memset( openDt, 0x00, sizeof( openDt ) ); 
        memset( acctStat, 0x00, sizeof( acctStat ) ); 
        memset( acctTyp, 0x00, sizeof( acctTyp ) ); 
        memset( acctKind, 0x00, sizeof( acctKind ) ); 
        memset( currencyTyp, 0x00, sizeof( currencyTyp ) ); 
        memset( cashFlg, 0x00, sizeof( cashFlg ) ); 
        memset( avlBal, 0x00, sizeof( avlBal ) ); 
        memset( bal, 0x00, sizeof( bal ) ); 
        memset( intrstBgnDt, 0x00, sizeof( intrstBgnDt ) ); 
        memset( savePeriod, 0x00, sizeof( savePeriod ) ); 
        memset( dueDt, 0x00, sizeof( dueDt ) ); 
        memset( intrstRate, 0x00, sizeof( intrstRate ) ); 
        memset( custID, 0x00, sizeof( custID ) ); 
        memset( custNm, 0x00, sizeof( custNm ) ); 
        memset( stat, 0x00, sizeof( stat ) ); 
        memset( prd_no, 0x00, sizeof( prd_no ) ); 

        memset( tmp, 0x00, sizeof( tmp ) ); 

        /* Added by wangou for 查询账户过多 20131225 - Start */
        if( i>=num_v )
        {
            WriteLog( ERR_LVL, "当前维度已为[%d]", i );
            break;
        }
             /* 20131225 - End */

        if( strlen( acctType ) != 0 && strcmp( acctType, "000" ) != 0)
        {
            break;
        }

        /* modify by dly 20110530 begin */

        GetPoolDataByName( "BUSIIB2", "Cdmacct", j, 0, acct, 0);
        WriteLog( APP_LVL, "cdmacct[%s]", acct );

        if( card_rel_num > 0 )
		{
			for(k = 0; k < card_rel_num; k++)
			{
				GetPoolDataByName( "BUSIIB2", "cardsubAcct", k, 0, subAcct, 0);
                WriteLog( APP_LVL, "cardsubAcct[%s]", subAcct );

				if( strcmp(acct, subAcct) == 0 )
				{
					GetPoolDataByName( "BUSIIB2", "cardacct", k, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
					break;
				} 

				if( k + 1 == card_rel_num )
				{
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
				}

			}
		}
		else
		{
			PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
			PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
		}


        /** modify dly 20110510 
        GetPoolDataByName( "BUSIIB2", "CdmsubAcct", j, 0, subAcct, 0);
        WriteLog( APP_LVL, "cdmsubAcct[%s]", subAcct );
        PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
        PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
        **/

        /* modify by dly 20110530 end */

        GetPoolDataByName( "BUSIIB2", "CdmopenBrchID", j, 0, openBrchID, 0);
        WriteLog( APP_LVL, "cdmopenBrchID[%s]", openBrchID );
        PutPoolDataByName( "BUSIIB", "openBrchID", i, 0, openBrchID, 0);

        if( GetInstName( openBrchID, openBrchNm ) )
		{
		    WriteLog( APP_LVL, "查询机构名失败");
		}

        strcpy( openBrchNmSt, openBrchNm );
        WriteLog( APP_LVL, "cdmopenBrchNm[%s]", openBrchNm );
        PutPoolDataByName( "BUSIIB", "openBrchNm", i, 0, openBrchNm, 0);
        PutPoolDataByName( "BUSIIB", "openBrchNmSt", i, 0, openBrchNm, 0);

        GetPoolDataByName( "BUSIIB2", "CdmopenDt", j, 0, openDt, 0);
        WriteLog( APP_LVL, "cdmopenDt[%s]", openDt );
        PutPoolDataByName( "BUSIIB", "openDt", i, 0, openDt, 0);

        GetPoolDataByName( "BUSIIB2", "CdmacctStat", j, 0, acctStat, 0);
        WriteLog( APP_LVL, "cdmacctStat[%s]", acctStat );
        if( strlen( acctStat ) == 0 )
        {
            WriteLog( ERR_LVL, "请检查账户状态!" );
        }
        else
        {
            if( acctStat[0] == '0' )
            {
                if( acctStat[1] == '0' || acctStat[1] == '3' )
                {
                    if( acctStat[2] == '0' )
                    {
                        strcpy( stat, "01" );
                    }
                    else if( ( acctStat[2] == '1' ) || ( acctStat[2] == '2' ) || ( acctStat[2] == '3' ) )
                    {
                        strcpy( stat, "03" );
                    }
                    else
                    {
                        strcpy( stat, "99" );
                    }
                }
                else if( ( acctStat[1] == '1' ) || ( acctStat[1] == '2' ) )
                {
                    strcpy( stat, "02" );
                }
                else
                {
                    strcpy( stat, "99" );
                }
            }
            else if( acctStat[0] == '1' )
            {
                strcpy( stat, "04" );
            }
            else
            {
                strcpy( stat, "99" );
            }
        }
        PutPoolDataByName( "BUSIIB", "acctStat", i, 0, stat, 0);

        GetPoolDataByName( "BUSIIB2", "CdmacctTyp", j, 0, acctTyp, 0);
        WriteLog( APP_LVL, "cdmacctTyp[%s]", acctTyp );
        /**活期账户类型为000, 存期为00**/
        PutPoolDataByName( "BUSIIB", "acctTyp", i, 0, "000", 0);
        PutPoolDataByName( "BUSIIB", "savePeriod", i, 0, "00", 0);

        GetPoolDataByName( "BUSIIB2", "CdmcurrencyTyp", j, 0, curr, 0);
        GetPoolDataByName( "BUSIIB2", "CdmcashFlg", j, 0, cashFlg, 0);
        WriteLog( APP_LVL, "cdmcashFlg[%s]", cashFlg );
        WriteLog( APP_LVL, "cdmcurrencyTyp[%s]", curr );
        if( ( strlen( curr ) != 0 ) && ( strcmp( curr, "01") == 0) )
        {
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, "CNY", 0);
            PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "2", 0);
        }
        else
        {
            if( cashFlg[5] == '0' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "0", 0);
            }
            else if( cashFlg[5] == '1' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "1", 0);
            }
            else
            {
                WriteLog( ERR_LVL, "钞汇标志有误!" );
            }

            sprintf( tmp, "%s|currencyTyp|%s", busitype, curr );
            MulNetParaConv( tmp, currencyTyp );    
            rtrim( currencyTyp );
            WriteLog( APP_LVL, "currencyTyp[%s]", currencyTyp );
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, currencyTyp, 0);
        }

        if( cashFlg[7] == '0' )
        {
            strcpy( acctKind, "02" );
        }
        else if( cashFlg[7] == '1' )
        {
            strcpy( acctKind, "01" );
        }
        else if( cashFlg[7] == '3' )
        {
            strcpy( acctKind, "04" );
        }
        else if( cashFlg[7] == '4' )
        {
            strcpy( acctKind, "03" );
        }
        else
        {
            strcpy( acctKind, "99" );
        }
        WriteLog( APP_LVL, "cashFlg[7][%c], acctKind[%s]", cashFlg[7], acctKind );
        PutPoolDataByName( "BUSIIB", "acctKind", i, 0, acctKind, 0);

        GetPoolDataByName( "BUSIIB2", "CdmavlBal", j, 0, avlBal, 0);
        WriteLog( APP_LVL, "cdmavlBal[%s]", avlBal );
        PutPoolDataByName( "BUSIIB", "avlBal", i, 0, avlBal, 0);

        GetPoolDataByName( "BUSIIB2", "Cdmbal", j, 0, bal, 0);
        WriteLog( APP_LVL, "cdmbal[%s]", bal );
        PutPoolDataByName( "BUSIIB", "bal", i, 0, bal, 0);

        GetPoolDataByName( "BUSIIB2", "CdmintrstBgnDt", j, 0, intrstBgnDt, 0);
        WriteLog( APP_LVL, "cdmintrstBgnDt[%s]", intrstBgnDt );
        PutPoolDataByName( "BUSIIB", "intrstBgnDt", i, 0, intrstBgnDt, 0);

        GetPoolDataByName( "BUSIIB2", "CdmdueDt", j, 0, dueDt, 0);
        WriteLog( APP_LVL, "cdmdueDt[%s]", dueDt );
        PutPoolDataByName( "BUSIIB", "dueDt", i, 0, dueDt, 0);

        GetPoolDataByName( "BUSIIB2", "CdmintrstRate", j, 0, intrstRate, 0);
        WriteLog( APP_LVL, "cdmintrstRate[%s]", intrstRate );
        PutPoolDataByName( "BUSIIB", "intrstRate", i, 0, intrstRate, 0);

        GetPoolDataByName( "BUSIIB2", "CdmcustID", j, 0, custID, 0);
        WriteLog( APP_LVL, "cdmcustID[%s]", custID );
        PutPoolDataByName( "BUSIIB", "custID", i, 0, custID, 0);

        GetPoolDataByName( "BUSIIB2", "CdmcustNm", j, 0, custNm, 0);
        WriteLog( APP_LVL, "cdmcustNm[%s]", custNm );
        PutPoolDataByName( "BUSIIB", "custNm", i, 0, custNm, 0);

        i ++;
        j ++;
        memset( acct, 0x00, sizeof( acct ) ); 
        GetPoolDataByName( "BUSIIB2", "Cdmacct", j, 0, acct, 0);
    }

    memset( acct, 0x00, sizeof( acct ) );
    GetPoolDataByName( "BUSIIB2", "sdmacct", 0, 0, acct, 0);
    j = 0;
    while( strlen( acct ) != 0 )
    {
        memset( acct, 0x00, sizeof( acct ) ); 
        memset( subAcct, 0x00, sizeof( subAcct ) ); 
        memset( openBrchID, 0x00, sizeof( openBrchID ) ); 
        memset( openBrchNm, 0x00, sizeof( openBrchNm ) ); 
        memset( openBrchNmSt, 0x00, sizeof( openBrchNmSt ) ); 
        memset( openDt, 0x00, sizeof( openDt ) ); 
        memset( acctStat, 0x00, sizeof( acctStat ) ); 
        memset( acctTyp, 0x00, sizeof( acctTyp ) ); 
        memset( acctKind, 0x00, sizeof( acctKind ) ); 
        memset( currencyTyp, 0x00, sizeof( currencyTyp ) ); 
        memset( cashFlg, 0x00, sizeof( cashFlg ) ); 
        memset( avlBal, 0x00, sizeof( avlBal ) ); 
        memset( bal, 0x00, sizeof( bal ) ); 
        memset( intrstBgnDt, 0x00, sizeof( intrstBgnDt ) ); 
        memset( savePeriod, 0x00, sizeof( savePeriod ) ); 
        memset( dueDt, 0x00, sizeof( dueDt ) ); 
        memset( intrstRate, 0x00, sizeof( intrstRate ) ); 
        memset( custID, 0x00, sizeof( custID ) ); 
        memset( custNm, 0x00, sizeof( custNm ) ); 
        memset( stat, 0x00, sizeof( stat ) ); 
        memset( prd_no, 0x00, sizeof( prd_no ) ); 

        memset( tmp, 0x00, sizeof( tmp ) ); 

        /* Added by wangou for 查询账户过多 20131225 - Start */
        if( i>=num_v )
        {
            WriteLog( ERR_LVL, "当前维度已为[%d]", i );
            break;
        }
             /* 20131225 - End */

        if( strlen( acctType ) != 0 && strcmp( acctType, "000" ) != 0)
           {
            break;
        }

        /* modify by dly 20110530 begin */
        
        GetPoolDataByName( "BUSIIB2", "sdmacct", j, 0, acct, 0);
        WriteLog( APP_LVL, "sdmacct[%s]", acct );
        /*PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);*/

        if( card_rel_num > 0 )
		{
			for(k = 0; k < card_rel_num; k++)
			{
				GetPoolDataByName( "BUSIIB2", "cardsubAcct", k, 0, subAcct, 0);
                WriteLog( APP_LVL, "cardsubAcct[%s]", subAcct );

				if( strcmp(acct, subAcct) == 0 )
				{
					GetPoolDataByName( "BUSIIB2", "cardacct", k, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
					break;
				} 

				if( k + 1 == card_rel_num )
				{
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
				}

			}
		}
		else
		{
			PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
			PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
		}


        /** modify dly 20110510
        GetPoolDataByName( "BUSIIB2", "sdmsubAcct", j, 0, subAcct, 0);
        WriteLog( APP_LVL, "sdmsubAcct[%s]", subAcct );
       
        PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
        
        PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
        **/
       /* modify by dly 20110530 end */


        GetPoolDataByName( "BUSIIB2", "sdmopenBrchID", j, 0, openBrchID, 0);
        WriteLog( APP_LVL, "sdmopenBrchID[%s]", openBrchID );
        PutPoolDataByName( "BUSIIB", "openBrchID", i, 0, openBrchID, 0);

        GetInstName( openBrchID, openBrchNm );
        strcpy( openBrchNmSt, openBrchNm );
        WriteLog( APP_LVL, "sdmopenBrchNm[%s]", openBrchNm );
        PutPoolDataByName( "BUSIIB", "openBrchNm", i, 0, openBrchNm, 0);
        PutPoolDataByName( "BUSIIB", "openBrchNmSt", i, 0, openBrchNm, 0);

        GetPoolDataByName( "BUSIIB2", "sdmopenDt", j, 0, openDt, 0);
        WriteLog( APP_LVL, "sdmopenDt[%s]", openDt );
        PutPoolDataByName( "BUSIIB", "openDt", i, 0, openDt, 0);

        GetPoolDataByName( "BUSIIB2", "sdmacctStat", j, 0, acctStat, 0);
        WriteLog( APP_LVL, "sdmacctStat[%s]", acctStat );
        rtrim( acctStat );
        if( strlen( acctStat ) == 0 )
        {
            WriteLog( ERR_LVL, "请检查账户状态!" );
        }
        else
        {
            if( acctStat[0] == '0' )
            {
                if( acctStat[1] == '0' || acctStat[1] == '3' )
                {
                    strcpy( stat, "01" );
                }
                else if( acctStat[1] == '1' || acctStat[1] == '2' )
                {
                    strcpy( stat, "02" );
                }
                else
                {
                    strcpy( stat, "99" );
                }
            }
            else if( acctStat[0] == '1' )
            {
                strcpy( stat, "04" );
            }
            else
            {
                strcpy( stat, "99" );
            }
        }
        PutPoolDataByName( "BUSIIB", "acctStat", i, 0, stat, 0);

        GetPoolDataByName( "BUSIIB2", "sdmacctTyp", j, 0, acctTyp, 0);
        WriteLog( APP_LVL, "sdmacctTyp[%s]", acctTyp );
        /**结算活期账户类型为000,存期为00**/
        PutPoolDataByName( "BUSIIB", "acctTyp", i, 0, "000", 0);
        PutPoolDataByName( "BUSIIB", "savePeriod", i, 0, "00", 0);

        /**
        GetPoolDataByName( "BUSIIB2", "sdmacctKind", j, 0, acctKind, 0);
        WriteLog( APP_LVL, "sdmacctKind[%s]", acctKind );
        PutPoolDataByName( "BUSIIB", "acctKind", i, 0, acctKind, 0);
        **/

        GetPoolDataByName( "BUSIIB2", "sdmcurrencyTyp", j, 0, curr, 0);
        GetPoolDataByName( "BUSIIB2", "sdmcashFlg", j, 0, cashFlg, 0);
        WriteLog( APP_LVL, "sdmcashFlg[%s]", cashFlg );
        WriteLog( APP_LVL, "sdmcurrencyTyp[%s]", curr );
        if( ( strlen( curr ) != 0 ) && ( strcmp( curr, "01") == 0) )
        {
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, "CNY", 0);
            PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "2", 0);
        }
        else
        {
            WriteLog( APP_LVL, "sdmcashFlg[%s]", cashFlg );
            if( cashFlg[3] == '0' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "0", 0);
            }
            if( cashFlg[3] == '1' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "1", 0);
            }
            if( cashFlg[3] != '0' && cashFlg[3] != '1' )
            {
                WriteLog( ERR_LVL, "钞汇标志有误!" );
            }
            
            memset( tmp, 0x00, sizeof( tmp ) );
            memset( currencyTyp, 0x00, sizeof( currencyTyp ) );
            sprintf( tmp, "%s|currencyTyp|%s", busitype, curr );
            MulNetParaConv( tmp, currencyTyp );    
            rtrim( currencyTyp );
            WriteLog( APP_LVL, "currencyTyp[%s]", currencyTyp );
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, currencyTyp, 0);
            
        }
        WriteLog( APP_LVL, "sdmcashFlg[%s]", cashFlg );
        
        if( cashFlg[1] == '0' )
        {
            strcpy( acctKind, "02" );
        }
        else if( cashFlg[1] == '1' )
        {
            strcpy( acctKind, "01" );
        }
        else if( cashFlg[1] == '3' )
        {
            strcpy( acctKind, "04" );
        }
        else if( cashFlg[1] == '4' )
        {
            strcpy( acctKind, "03" );
        }
        else
        {
            strcpy( acctKind, "99" );
        }
        WriteLog( APP_LVL, "cashFlg[1][%c], acctKind[%s]", cashFlg[1], acctKind );
        PutPoolDataByName( "BUSIIB", "acctKind", i, 0, acctKind, 0);

        GetPoolDataByName( "BUSIIB2", "sdmavlBal", j, 0, avlBal, 0);
        WriteLog( APP_LVL, "sdmavlBal[%s]", avlBal );
        PutPoolDataByName( "BUSIIB", "avlBal", i, 0, avlBal, 0);

        GetPoolDataByName( "BUSIIB2", "sdmbal", j, 0, bal, 0);
        WriteLog( APP_LVL, "sdmbal[%s]", bal );
        PutPoolDataByName( "BUSIIB", "bal", i, 0, bal, 0);

        GetPoolDataByName( "BUSIIB2", "sdmintrstBgnDt", j, 0, intrstBgnDt, 0);
        WriteLog( APP_LVL, "sdmintrstBgnDt[%s]", intrstBgnDt );
        PutPoolDataByName( "BUSIIB", "intrstBgnDt", i, 0, intrstBgnDt, 0);

        GetPoolDataByName( "BUSIIB2", "sdmdueDt", j, 0, dueDt, 0);
        WriteLog( APP_LVL, "sdmdueDt[%s]", dueDt );
        PutPoolDataByName( "BUSIIB", "dueDt", i, 0, dueDt, 0);

        GetPoolDataByName( "BUSIIB2", "sdmintrstRate", j, 0, intrstRate, 0);
        WriteLog( APP_LVL, "sdmintrstRate[%s]", intrstRate );
        PutPoolDataByName( "BUSIIB", "intrstRate", i, 0, intrstRate, 0);

        GetPoolDataByName( "BUSIIB2", "sdmcustID", j, 0, custID, 0);
        WriteLog( APP_LVL, "sdmcustID[%s]", custID );
        PutPoolDataByName( "BUSIIB", "custID", i, 0, custID, 0);

        GetPoolDataByName( "BUSIIB2", "sdmcustNm", j, 0, custNm, 0);
        WriteLog( APP_LVL, "sdmcustNm[%s]", custNm );
        PutPoolDataByName( "BUSIIB", "custNm", i, 0, custNm, 0);


        i ++;
        j ++;
        memset( acct, 0x00, sizeof( acct ) ); 
        GetPoolDataByName( "BUSIIB2", "sdmacct", j, 0, acct, 0);
    }

    memset( acct, 0x00, sizeof( acct ) );
    GetPoolDataByName( "BUSIIB2", "Fixacct", 0, 0, acct, 0);
    j = 0;
    while( strlen( acct ) != 0 )
    {
        memset( acct, 0x00, sizeof( acct ) ); 
        memset( subAcct, 0x00, sizeof( subAcct ) ); 
        memset( openBrchID, 0x00, sizeof( openBrchID ) ); 
        memset( openBrchNm, 0x00, sizeof( openBrchNm ) ); 
        memset( openBrchNmSt, 0x00, sizeof( openBrchNmSt ) ); 
        memset( openDt, 0x00, sizeof( openDt ) ); 
        memset( acctStat, 0x00, sizeof( acctStat ) ); 
        memset( acctTyp, 0x00, sizeof( acctTyp ) ); 
        memset( acctKind, 0x00, sizeof( acctKind ) ); 
        memset( currencyTyp, 0x00, sizeof( currencyTyp ) ); 
        memset( cashFlg, 0x00, sizeof( cashFlg ) ); 
        memset( avlBal, 0x00, sizeof( avlBal ) ); 
        memset( bal, 0x00, sizeof( bal ) ); 
        memset( intrstBgnDt, 0x00, sizeof( intrstBgnDt ) ); 
        memset( savePeriod, 0x00, sizeof( savePeriod ) ); 
        memset( dueDt, 0x00, sizeof( dueDt ) ); 
        memset( intrstRate, 0x00, sizeof( intrstRate ) ); 
        memset( custID, 0x00, sizeof( custID ) ); 
        memset( custNm, 0x00, sizeof( custNm ) ); 
        memset( stat, 0x00, sizeof( stat ) ); 
        memset( prd_no, 0x00, sizeof( prd_no ) ); 
        memset( flag, 0x00, sizeof( flag ) ); 

        memset( tmp, 0x00, sizeof( tmp ) ); 
        
        /**根据产品代码和币种取定期账户账户类型和存期**/
        GetPoolDataByName( "BUSIIB2", "FixcurrencyTyp", j, 0, curr, 0);
        GetPoolDataByName( "BUSIIB2", "FixacctTyp", j, 0, prd_no, 0);

        /* Added by wangou for 查询账户过多 20131225 - Start */
        if( i>=num_v )
        {
            WriteLog( ERR_LVL, "当前维度已为[%d]", i );
            break;
        }
             /* 20131225 - End */

        /*if( strlen( acctType ) != 0 && strcmp( acctType, "000" ) != 0) */
        if( strlen( acctType ) != 0 ) 
        {
            WriteLog(APP_LVL, "acctType[%s]", acctType );
            WriteLog(APP_LVL, "prd_no[%s]", prd_no  );
            WriteLog(APP_LVL, "currtype[%s]", curr  );
            
            EXEC SQL SELECT  saveperiod, flag 
                INTO  :savePeriod, :flag
                FROM t_pb_prdno_acctype
                WHERE prd_no = :prd_no
                AND currtype = :curr AND acctype = :acctType;

            WriteLog(APP_LVL, "sqlcode[%d]", sqlca.sqlcode  );

            if( sqlca.sqlcode != 0 )
            {
                WriteLog( ERR_LVL, "sqlcode[%d],prd_no[%s],curr[%s]", sqlca.sqlcode, prd_no, curr );
                if( sqlca.sqlcode == 100 )
                {
                    
                    j ++;
                    memset( acct, 0x00, sizeof( acct ) ); 
                    GetPoolDataByName( "BUSIIB2", "Fixacct", j, 0, acct, 0);
                    continue;
                }
                else
                {
                    errcode = 99999;
                    strcpy( err_msg, "数据库错!" );
                    PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
                    PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
                    return ( -1 );
                }
            }
            
        }

        /* modify by dly 20110530 begin */
        GetPoolDataByName( "BUSIIB2", "Fixacct", j, 0, acct, 0);
        WriteLog( APP_LVL, "fixacct[%s]", acct );
        /* PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0); */
        
        if( card_rel_num > 0 )
		{
			for(k = 0; k < card_rel_num; k++)
			{
				GetPoolDataByName( "BUSIIB2", "cardsubAcct", k, 0, subAcct, 0);
                WriteLog( APP_LVL, "cardsubAcct[%s]", subAcct );

				if( strcmp(acct, subAcct) == 0 )
				{
					GetPoolDataByName( "BUSIIB2", "cardacct", k, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
					break;
				} 

				if( k + 1 == card_rel_num )
				{
					PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
					PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
				}

			}
		}
		else
		{
			PutPoolDataByName( "BUSIIB", "acct", i, 0, acct, 0);
			PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);
		}
		
       /* GetPoolDataByName( "BUSIIB2", "FixsubAcct", j, 0, subAcct, 0);
        WriteLog( APP_LVL, "fixsubAcct[%s]", subAcct );*/
        /** modify 20110510 
        PutPoolDataByName( "BUSIIB", "subAcct", i, 0, subAcct, 0);
        **/
       /* PutPoolDataByName( "BUSIIB", "subAcct", i, 0, acct, 0);*/
        
        /*modify by dly 20110530 end */

        GetPoolDataByName( "BUSIIB2", "FixopenBrchID", j, 0, openBrchID, 0);
        WriteLog( APP_LVL, "fixopenBrchID[%s]", openBrchID );
        PutPoolDataByName( "BUSIIB", "openBrchID", i, 0, openBrchID, 0);

        GetInstName( openBrchID, openBrchNm );
        strcpy( openBrchNmSt, openBrchNm );
        WriteLog( APP_LVL, "fixopenBrchNm[%s]", openBrchNm );
        PutPoolDataByName( "BUSIIB", "openBrchNm", i, 0, openBrchNm, 0);
        PutPoolDataByName( "BUSIIB", "openBrchNmSt", i, 0, openBrchNm, 0);

        GetPoolDataByName( "BUSIIB2", "FixopenDt", j, 0, openDt, 0);
        WriteLog( APP_LVL, "fixopenDt[%s]", openDt );
        PutPoolDataByName( "BUSIIB", "openDt", i, 0, openDt, 0);

        GetPoolDataByName( "BUSIIB2", "FixacctStat", j, 0, acctStat, 0);
        WriteLog( APP_LVL, "fixacctStat[%s]", acctStat );
        if( strlen( acctStat ) == 0 )
        {
            WriteLog( ERR_LVL, "请检查账户状态!" );
        }
        else
        {
            if( acctStat[0] == '0' )
            {
                if( acctStat[1] == '0' || acctStat[1] == '3' )
                {
                    if( acctStat[2] == '0' )
                    {
                        strcpy( stat, "01" );
                    }
                    else if( ( acctStat[2] == '1' ) || ( acctStat[2] == '2' ) || ( acctStat[2] == '3' ) )
                    {
                        strcpy( stat, "03" );
                    }
                    else
                    {
                        strcpy( stat, "99" );
                    }
                }
                else if( ( acctStat[1] == '1' ) || ( acctStat[1] == '2' ) )
                {
                    strcpy( stat, "02" );
                }
                else
                {
                    strcpy( stat, "99" );
                }
            }
            else if( acctStat[0] == '1' )
            {
                strcpy( stat, "04" );
            }
            else
            {
                strcpy( stat, "99" );
            }
        }
        PutPoolDataByName( "BUSIIB", "acctStat", i, 0, stat, 0);

        GetPoolDataByName( "BUSIIB2", "FixcurrencyTyp", j, 0, curr, 0);
        GetPoolDataByName( "BUSIIB2", "FixacctTyp", j, 0, prd_no, 0);
        WriteLog( APP_LVL, "fixacctTyp[%s]", acctTyp );
        /**根据产品代码和币种取定期账户账户类型和存期**/
        EXEC SQL SELECT acctype, saveperiod, flag 
            INTO :acctTyp, :savePeriod, :flag
            FROM t_pb_prdno_acctype
            WHERE prd_no = :prd_no
            AND currtype = :curr;
        if( sqlca.sqlcode != 0 )
        {
            WriteLog( ERR_LVL, "sqlcode[%d],prd_no[%s],curr[%s]", sqlca.sqlcode, prd_no, curr );
            if( sqlca.sqlcode == 100 )
            {
                WriteLog( ERR_LVL, "未找到对应账户类型和存期" );
            }
            else
            {
                errcode = 99999;
                strcpy( err_msg, "数据库错!" );
                PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
                PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
                return ( -1 );
            }
        }

        WriteLog( APP_LVL, "acctTyp[%s]", acctTyp );
        WriteLog( APP_LVL, "fixsavePeriod[%s]", savePeriod );
        rtrim( acctTyp );
        rtrim( savePeriod );
        if( strcmp( savePeriod, "99" ) == 0 )
        {
            /**99表示无存期**/
            memset( savePeriod, 0x00, sizeof( savePeriod ) );
        }
        PutPoolDataByName( "BUSIIB", "acctTyp", i, 0, acctTyp, 0);
        PutPoolDataByName( "BUSIIB", "savePeriod", i, 0, savePeriod, 0);

        GetPoolDataByName( "BUSIIB2", "FixacctKind", j, 0, acctKind, 0);
        WriteLog( APP_LVL, "fixacctKind[%s]", acctKind );
        PutPoolDataByName( "BUSIIB", "acctKind", i, 0, acctKind, 0);

        GetPoolDataByName( "BUSIIB2", "FixcashFlg", j, 0, cashFlg, 0);
        WriteLog( APP_LVL, "fixcashFlg[%s]", cashFlg );
        WriteLog( APP_LVL, "fixcurrencyTyp[%s]", curr );
        if( ( strlen( curr ) != 0 ) && ( strcmp( curr, "01") == 0) )
        {
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, "CNY", 0);
            PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "2", 0);
        }
        else
        {
            if( cashFlg[5] == '0' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "0", 0);
            }
            else if( cashFlg[5] == '1' )
            {
                PutPoolDataByName( "BUSIIB", "cashFlg", i, 0, "1", 0);
            }
            else
            {
                WriteLog( ERR_LVL, "钞汇标志有误!" );
            }
            
            sprintf( tmp, "%s|currencyTyp|%s", busitype, curr );
            MulNetParaConv( tmp, currencyTyp );    
            rtrim( currencyTyp );
            WriteLog( APP_LVL, "currencyTyp[%s]", currencyTyp );
            PutPoolDataByName( "BUSIIB", "currencyTyp", i, 0, currencyTyp, 0);
        }

        GetPoolDataByName( "BUSIIB2", "FixavlBal", j, 0, avlBal, 0);
        WriteLog( APP_LVL, "fixavlBal[%s]", avlBal );
        PutPoolDataByName( "BUSIIB", "avlBal", i, 0, avlBal, 0);

        GetPoolDataByName( "BUSIIB2", "Fixbal", j, 0, bal, 0);
        WriteLog( APP_LVL, "fixbal[%s]", bal );
        PutPoolDataByName( "BUSIIB", "bal", i, 0, bal, 0);

        GetPoolDataByName( "BUSIIB2", "FixintrstBgnDt", j, 0, intrstBgnDt, 0);
        WriteLog( APP_LVL, "fixintrstBgnDt[%s]", intrstBgnDt );
        PutPoolDataByName( "BUSIIB", "intrstBgnDt", i, 0, intrstBgnDt, 0);

        GetPoolDataByName( "BUSIIB2", "FixdueDt", j, 0, dueDt, 0);
        WriteLog( APP_LVL, "fixdueDt[%s]", dueDt );
        PutPoolDataByName( "BUSIIB", "dueDt", i, 0, dueDt, 0);

        GetPoolDataByName( "BUSIIB2", "FixintrstRate", j, 0, intrstRate, 0);
        WriteLog( APP_LVL, "fixintrstRate[%s]", intrstRate );
        PutPoolDataByName( "BUSIIB", "intrstRate", i, 0, intrstRate, 0);

        GetPoolDataByName( "BUSIIB2", "FixcustID", j, 0, custID, 0);
        WriteLog( APP_LVL, "fixcustID[%s]", custID );
        PutPoolDataByName( "BUSIIB", "custID", i, 0, custID, 0);

        GetPoolDataByName( "BUSIIB2", "FixcustNm", j, 0, custNm, 0);
        WriteLog( APP_LVL, "fixcustNm[%s]", custNm );
        PutPoolDataByName( "BUSIIB", "custNm", i, 0, custNm, 0);

        i ++;
        j ++;
        memset( acct, 0x00, sizeof( acct ) ); 
        GetPoolDataByName( "BUSIIB2", "Fixacct", j, 0, acct, 0);
    }
    memset( tmp, 0x00, sizeof( tmp ) );
    sprintf( tmp, "%d", i );
    WriteLog( APP_LVL, "========tmp[%s]i[%d]========", tmp, i );
    PutPoolDataByName( "BUSIIB", "v", 0, 0, tmp, 0);

    return( 0 );
}

long MulNetParaConv( para,  incode )
char *para;
EXEC SQL BEGIN DECLARE SECTION;
char *incode;
EXEC SQL END DECLARE SECTION;
{
    EXEC SQL BEGIN DECLARE SECTION;
    char busitype[3+1];
    char paratype[10+1];
    char outcode[20+1];
    EXEC SQL END DECLARE SECTION;

    ATOM_PARA Para;

    memset( busitype, 0x00, sizeof( busitype ) );
    memset( paratype, 0x00, sizeof( paratype ) );
    memset( outcode, 0x00, sizeof( outcode ) );

    memset( &Para, 0x00, sizeof( ATOM_PARA ) );
    ParseAtomPara( &Para, para );
    strcpy( busitype, Para.Para[0] );
    strcpy( paratype, Para.Para[1] );
    strcpy( outcode, Para.Para[2] );

    WriteLog( APP_LVL, "busitype[%s]paratype[%s]outcode[%s]", busitype, paratype, outcode );
    if( strlen( busitype ) == 0 || strlen( paratype ) == 0 || strlen( outcode ) == 0 )
    {
        WriteLog( ERR_LVL, "传入参数有误!" );
        return ( -1 );
    }

    EXEC SQL SELECT incode INTO :incode
        FROM t_pb_net_para
        WHERE busitype = :busitype
        AND paratype = :paratype
        AND outcode = :outcode;
    if( SQLCODE != 0 && SQLCODE != 100 )
    {
        WriteLog( ERR_LVL, "数据库错!SQLCODE[%d]", sqlca.sqlcode );
        return ( -1 );
    }
    else if( SQLCODE == 100 )
    {
        return ( -1 );
    }

    return ( 0 );
}
