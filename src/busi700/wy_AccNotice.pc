/*****************************************************
**函数描述     : 通知存款通知及撤销
**函数用途     : 
**输入         ：
**输出         :
**创建日期     ：2014/03/28
**最后修改日期 ：
**Create by    : wangxiaorui
*****************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>
#include <time.h>

#include "pbconstval.h"
#include "pbstructdef.h"
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pbappdb.h"
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"

#include "pbdb.h"
#include "fml32.h"
#include "atmi.h"
#include "pbsrv.h"

int Acc_notice()
{				
	char err_msg[256+1];
	char tran_seqno[ 10+1 ];
	char cardno[32+1];
	char acc_out[32+1];/*转出账号*/
	char acc_in[32+1]; /*转入账号*/
	char accseq[4+1]; /*子账户序号*/
	char operTyp[2+1]; /*操作类型：1通知 2通知撤销*/
	char noticeNb[32+1];/*通知书编号*/
	char noticeAmt[16+1];/*通知金额*/
	char avlBal[16+1]; /*可用余额*/
	char drawDt[10+1]; /*支取日期*/
	char str_Dt[10+1]; /*支取日期*/
	double amt=0;
	char noticeseq[32+1];
        struct head head;
        FBFR32 * sendbuf;
        FBFR32 * recvbuf;
        long sendlen = 0;
        long reclen = 0;
        long hoststat = 0;
        long errcode = 0;
        
        memset( err_msg,	0x00,	sizeof( err_msg ) );
        memset( tran_seqno,	0x00,	sizeof( tran_seqno ) );
        memset( &head,		0x00,	sizeof( struct head ) );
        memset( cardno,		0x00,	sizeof( cardno ) );
        memset( acc_out,	0x00,	sizeof( acc_out ) );
        memset( acc_in,		0x00,	sizeof( acc_in ) );
        memset( accseq,		0x00,	sizeof( accseq ) );
        memset( operTyp,	0x00,	sizeof( operTyp ) );
        memset( noticeNb,	0x00,	sizeof( noticeNb ) );
        memset( noticeAmt,	0x00,	sizeof( noticeAmt ) );
        memset( avlBal,		0x00,	sizeof( avlBal ) );
        memset( drawDt,		0x00,	sizeof( drawDt ) );
        memset( str_Dt,		0x00,	sizeof( str_Dt ) );
        memset( noticeseq,		0x00,	sizeof( noticeseq ) );
        
        /*1、取农信银上送数据*/
        GetPoolDataByName( "BUSIIB", "noticeAcct", 0, 0, cardno, 0 );
        rtrim( cardno );
        GetPoolDataByName( "BUSIIB", "subAcct", 0, 0, acc_out, 0 );
        rtrim( acc_out );
        GetPoolDataByName( "BUSIIB", "billNb", 0, 0, accseq, 0 );
        rtrim( accseq );
        GetPoolDataByName( "BUSIIB", "operTyp", 0, 0, operTyp, 0 );
        rtrim( operTyp );
        GetPoolDataByName( "BUSIIB", "noticeNb", 0, 0, noticeNb, 0 );
        rtrim( noticeNb );
        GetPoolDataByName( "BUSIIB", "noticeAmt", 0, 0, noticeAmt, 0 );
        rtrim( noticeAmt );
        
        strcpy( acc_in, cardno );
        amt=atof( noticeAmt );
	WriteLog(APP_LVL, "cardno %s!", cardno );
	WriteLog(APP_LVL, "accseq %s!", accseq );
	WriteLog(APP_LVL, "acc_out %s!", acc_out);
        WriteLog(APP_LVL, "acc_in %s!", acc_in );
        WriteLog(APP_LVL, "operTyp %s!", operTyp );
        WriteLog(APP_LVL, "noticeNb %s!,", noticeNb );
        WriteLog(APP_LVL, "noticeAmt[%s], amt[%.02f]!", noticeAmt, amt );
        
        /*2、输入项检查*/
        if( operTyp[0]!='1' && operTyp[0]!='2' ) 
       	{
       		sprintf( err_msg, "操作类型[%s]错", operTyp );
                WriteLog( ERR_LVL, "操作类型[%s]错", operTyp );
                errcode = 99999;
                PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
                PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
                return ( -1 );
       	}

        if( operTyp[0]=='1' && ( ( strlen(acc_out)==0 && strlen(cardno)==0 ) || strlen(noticeAmt)==0 ) )
       	{
       		sprintf( err_msg, "通知时，转出账号[%s]和通知金额[%s]不能为空", acc_out,noticeAmt );
                WriteLog( ERR_LVL, "通知时，转出账号[%s]和通知金额[%s]不能为空", acc_out,noticeAmt );
                errcode = 99999;
                PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
                PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
                return ( -1 );
       	}
        else if( operTyp[0]=='2' && strlen(noticeNb)==0 )
       	{
       		sprintf( err_msg, "撤销时，通知编号[%s]不能为空", noticeNb );
                WriteLog( ERR_LVL, "撤销时，通知编号[%s]不能为空", noticeNb );
                errcode = 99999;
                PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
                PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
                return ( -1 );
       	}
        	
	/*3、调用核心通知存款通知接口*/
	GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, tran_seqno, 0);
	/**************** 分配内存 *****************/
        sendbuf = (FBFR32 *)tpalloc("FML32", NULL, PBFDATA_LEN);
        if(sendbuf == NULL)
        {
                WriteLog(ERR_LVL, "分配核心使用输入缓冲池错");
            	errcode = 99999;
                strcpy(err_msg, "系统错!!!");
                PutPoolDataByName("ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD", "_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        recvbuf = (FBFR32 *)tpalloc("FML32", NULL, PBFDATA_LEN);
        if( recvbuf == NULL)
        {
                WriteLog(ERR_LVL, "分配核心使用输出缓冲池错");
                tpfree((char *)sendbuf);
            	errcode = 99999;
                strcpy(err_msg, "系统错!!!");
                PutPoolDataByName("ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD", "_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        
        WriteLog(APP_LVL, "Sub_acc %s!", acc_out+4);
        /*上送核心数据*/
        strcpy(head.organ_no, "9996");    /* 机构号 */
        strcpy(head._tlr_no, "888886");   /* 柜员 */
        strcpy(head._tx_op_stat, "N");    /* 交易状态 */
        strcpy(head.chnl_no, "W");        /* 渠道类型 */
        strcpy(head._tx_code, "5732");    /* 交易码 */
        strcpy(head._seq_no, tran_seqno);
        Fchg32(sendbuf, getcorefmlid("organ_no", HEAD, REQ, "0000"), 0, head.organ_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tlr_no", HEAD, REQ, "0000"), 0, head._tlr_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tx_op_stat", HEAD, REQ, "0000"), 0, head._tx_op_stat, 0);
        Fchg32(sendbuf, 167772201L, 0, head.chnl_no, 0);
        Fchg32(sendbuf, getcorefmlid("_tx_code", HEAD, REQ, "0000"), 0, head._tx_code, 0);
        Fchg32(sendbuf, getcorefmlid("_seq_no", HEAD, REQ, "0000"), 0, head._seq_no, 0);
	/*通知存款下挂卡号*/
        Fchg32(sendbuf, 167772611L, 0, cardno, 0);
        /*子账户序号,新核心用*/
        Fchg32(sendbuf, 167772658L, 0, acc_out+4, 0);
        /*操作类型*/
        Fchg32(sendbuf, 167773559L, 0, operTyp, 0);
        /*转入账号,新核心用*/
        Fchg32(sendbuf, 167775342L, 0, acc_in, 0);
        /*通知编号*/
        Fchg32(sendbuf, 167772975L, 0, noticeNb, 0);
        /*通知金额*/
        Fchg32(sendbuf, 134217863L, 0, ( char* )&amt, 0);
        /** Modifed by MSJ - 20140517 
        PrtFmlDetail(sendbuf);**/
        PrtFmlDetailLvl( APP_LVL, sendbuf );

        WriteLog(ERR_LVL, "tpcall PB_MNGSVC Begin..........");
        sendlen = Fused32(sendbuf);
        Finit32(recvbuf,Fsizeof32(recvbuf));
        if(tpcall("PB_MNGSVC", (char*)sendbuf, sendlen,(char**)&recvbuf, &reclen, 0))
        {
                WriteLog(ERR_LVL, "TPCALL调用核心出错！");
            	tpfree((char *)sendbuf);
                tpfree((char *)recvbuf);
                errcode = 99999;
                strcpy(err_msg, "核心系统错!!!");
                PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                return -1;
        }
        PrtFmlDetailLvl( APP_LVL, recvbuf );
        Fget32(recvbuf, getcorefmlid("_host_stat", HEAD, ANS, "0000"), 0, (char *)&hoststat, 0);
        if(hoststat != 0)
        {
                if(1000 == hoststat)
                {
                        WriteLog(ERR_LVL, "核心通讯超时");
                        tpfree((char *)sendbuf);
                        tpfree((char *)recvbuf);
                        errcode = 99999;
                        strcpy(err_msg, "核心通讯超时");
                        PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                        PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                        return -1;
                }
                else
                {
        		Fget32(recvbuf, getcorefmlid("_error_code", HEAD, ANS, "0000"), 0, err_msg, 0);
                        WriteLog(ERR_LVL,"核心出错!host_stat[%ld]",hoststat);
                        tpfree((char *)sendbuf);
                        tpfree((char *)recvbuf);
                        errcode = 99999;
                        PutPoolDataByName("ABSHEAD","app_err_no", 0, 0, (char *)&errcode, 0);
                        PutPoolDataByName("ABSHEAD","_error_code", 0, 0, err_msg, 0);
                        return -1;
                }

        }
        WriteLog(APP_LVL, "tpcall PB_MNGSVC End..........");
        
        /*4、根据核心返回结果组织返回农信银数据*/
        memset( noticeNb, 0x00, sizeof(noticeNb) );
        memset( noticeseq, 0x00, sizeof(noticeseq) );
        Fget32(recvbuf, getcorefmlid("aval_bal", BODY, ANS, head._tx_code ), 0, (char *)&amt, 0);
        sprintf( avlBal,"%.02f", amt );
        Fget32(recvbuf, getcorefmlid("serno", BODY, ANS, head._tx_code ), 0, noticeseq, 0);
        trim(noticeNb);
        sprintf( noticeNb, "%04s", noticeseq ); 
        Fget32(recvbuf, getcorefmlid("dw_date", BODY, ANS, head._tx_code ), 0, drawDt, 0);

        WriteLog(APP_LVL, "avlBal %.02f!", amt );
        WriteLog(APP_LVL, "noticeseq %s   noticeNb %s!", noticeseq, noticeNb );
        WriteLog(APP_LVL, "drawDt %s!", drawDt );
   
	/* Commented by MSJ for SC6000Z - 20140625 */
	/**    
	strncpy( str_Dt, drawDt, 4 );
	strncat( str_Dt, drawDt+5, 2 );
	strncat( str_Dt, drawDt+8, 2 );
	**/
        PutPoolDataByName("BUSIIB","avlBal", 0, 0, avlBal, 0);
        PutPoolDataByName("BUSIIB","noticeNb", 0, 0, noticeNb, 0);
        PutPoolDataByName("BUSIIB","drawDt", 0, 0, drawDt, 0);
	return ( 0 );
}
