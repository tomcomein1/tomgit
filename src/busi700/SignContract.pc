/*************************************
* Function    : SignContract()
* Description : ÊÖ»úÒøÐÐ¿çÐÐ½áËãÇ©½âÔ¼
* Input       :
* Output      : ÎÞ
* Return      : 0 -- ³É¹¦
                1 -- Ê§°Ü
*-----------------------------------
* Create         Date        Action
* wangxiaorui   2014/06/19    Created
**************************************/
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h"
#include "pbstructdef.h"
EXEC SQL include "pbappdb.h" ;
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
EXEC SQL include "gface.h";
EXEC SQL include "pb_pagt_fun.h";
EXEC SQL include "pb_pagt_dbbuf.h";
EXEC SQL include "wit.h";

long AccQryPub5711();
int 
SignContract()
{
    EXEC SQL BEGIN DECLARE SECTION;
    struct s_wit_sign  wit_sign;
    char SignFlag[1+1]; 
    char pb_date[8+1];
    char OperTyp[2+1];           /*²Ù×÷ÀàÐÍ:00 Ç©Ô¼ 01 Î¬»¤ 02 ½âÔ¼*/
    char Card_Flag[1+1];         /*1 ¿¨ºÅ 2 ÕËºÅ*/
    char CustName_in[60+1];
    char CertType_in[2+1];
    char CertNo_in[20+1];
    char CustName[60+1];
    char CertType[2+1];
    char certTyp[2+1];
    char CertNo[20+1];
    char PayBankName[128+1];/*×ª³öÐÐÃû*/
    char PayBankNo[4+1];/*×ª³ö»ú¹¹ºÅ*/
    char OrderFlag[1+1];/*0 ²»Ô¤Ô¼ 1 Ô¤Ô¼*/
    char OrderPeriod[2+1];/*¿Û¿îÖÜÆÚ:00 Ã¿ÖÜÒ»´Î 01 Ã¿ÔÂÒ»´Î
                          02 Ã¿¼¾Ò»´Î 03 Ã¿ÄêÒ»´Î*/
    char Period_Typ[1+1];
    char OrderTm[14+1]; /*¿Û¿îÊ±¼ä*/
    char OrderNo[25+1]; /*Ô¤Ô¼±àºÅ*/
    char sAmt[16+1];
    double TranAmt=0; /*Ô¤Ô¼¿Û¿î½ð¶î*/
    char inst_no[4+1];
    char tlr_no[6+1];
    char seq_no[10+1];
    EXEC SQL END DECLARE SECTION;
    char acc_stat[3+1];
    char err_msg[256+1];
    long errcode = 0;
    long hoststat = -1;
    long ret = 0;
    char ocerttyp[5];

    memset( ocerttyp,       0x00, sizeof( ocerttyp ) );
    memset( SignFlag,       0x00, sizeof( SignFlag ) );
    memset( pb_date,        0x00, sizeof( pb_date ) );
    memset( OperTyp,        0x00, sizeof( OperTyp ) );
    memset( Card_Flag,      0x00, sizeof( Card_Flag ) );
    memset( CustName_in,    0x00, sizeof( CustName_in ) );
    memset( CertType_in,    0x00, sizeof( CertType_in ) );
    memset( CertNo_in,      0x00, sizeof( CertNo_in ) );
    memset( CustName,       0x00, sizeof( CustName ) );
    memset( CertType,       0x00, sizeof( CertType ) );
    memset( certTyp,        0x00, sizeof( certTyp ) );
    memset( CertNo,         0x00, sizeof( CertNo ) );
    memset( PayBankName,    0x00, sizeof( PayBankName ) );
    memset( PayBankNo,      0x00, sizeof( PayBankNo ) );
    memset( OrderFlag,      0x00, sizeof( OrderFlag ) );
    memset( OrderPeriod,    0x00, sizeof( OrderPeriod ) );
    memset( Period_Typ,     0x00, sizeof( Period_Typ ) );
    memset( OrderTm,        0x00, sizeof( OrderTm ) );
    memset( OrderNo,        0x00, sizeof( OrderNo ) );
    memset( sAmt,           0x00, sizeof( sAmt ) );
    memset( &wit_sign,      0x00, sizeof( struct s_wit_sign ) );
    memset( acc_stat,       0x00, sizeof( acc_stat ) );
    memset( err_msg,        0x00, sizeof( err_msg ) );
    memset( inst_no,        0x00, sizeof( inst_no ) );
    memset( tlr_no,         0x00, sizeof( tlr_no ) );
    memset( seq_no,         0x00, sizeof( seq_no ) );


    GetPoolDataByName( "BUSIIB", "operTyp", 0, 0, OperTyp, 0 );
    GetPoolDataByName( "BUSIIB", "rcvAcct", 0, 0, wit_sign.sign_acc, 0 );
    GetPoolDataByName( "BUSIIB", "cardAcctFlg", 0, 0, Card_Flag, 0 );
    GetPoolDataByName( "BUSIIB", "payCardAcctNb", 0, 0, wit_sign.out_sign_acc, 0 );
    GetPoolDataByName( "BUSIIB", "payCustNm", 0, 0, CustName, 0 );
    GetPoolDataByName( "BUSIIB", "certTyp", 0, 0, CertType, 0 ); 
    GetPoolDataByName( "BUSIIB", "certNb", 0, 0, CertNo, 0 ); 
    GetPoolDataByName( "BUSIIB", "payBrchNm", 0, 0, PayBankName, 0 ); 
    GetPoolDataByName( "BUSIIB", "payBrchID", 0, 0, PayBankNo, 0 );
    GetPoolDataByName( "BUSIIB", "noticeFlg", 0, 0, OrderFlag, 0 );
    GetPoolDataByName( "BUSIIB", "savePeriod", 0, 0, OrderPeriod, 0 );
    GetPoolDataByName( "BUSIIB", "bookDt", 0, 0, OrderTm, 0 );
    GetPoolDataByName( "BUSIIB", "transAmt", 0, 0, sAmt, 0 );
    GetPoolDataByName( "BUSIIB", "bookNb", 0, 0, OrderNo, 0 );
    rtrim( OperTyp );
    rtrim( wit_sign.sign_acc );
    rtrim( Card_Flag );
    rtrim( wit_sign.out_sign_acc );
    rtrim( CustName );
    rtrim( CertType );
    rtrim( CertNo );
    rtrim( PayBankNo );
    rtrim( OrderFlag );
    rtrim( OrderPeriod );
    rtrim( OrderTm );
    rtrim( OrderNo );
    rtrim( sAmt );
    TranAmt=atof( sAmt );
    WriteLog( DEBUG_LVL0, "×ªÈëÕËºÅ[%s]", wit_sign.sign_acc );
    WriteLog( DEBUG_LVL0, "×ª³öÕËºÅ[%s]", wit_sign.out_sign_acc );
    WriteLog( DEBUG_LVL0, "×ª³öÕË»§Ãû[%s]", CustName );
    WriteLog( DEBUG_LVL0, "×ª³öÕË»§Ö¤¼þÀàÐÍ[%s]", CertType );
    WriteLog( DEBUG_LVL0, "×ª³öÕË»§Ö¤¼þºÅÂë[%s]", CertNo );
    WriteLog( DEBUG_LVL0, "Ç©Ô¼±àºÅ[%s]", OrderNo );
    WriteLog( DEBUG_LVL0, "Ç©Ô¼½ð¶î[%s][%.02f]",sAmt,TranAmt );

    /**»ñÈ¡¹«¹²±äÁ¿**/
    GetPoolDataByName( "ABSHEAD", "_seq_no", 0, 0, seq_no, 0 );
    GetPoolDataByName( "ABSHEAD", "_tlr_no", 0, 0, tlr_no, 0 );
    WriteLog( DEBUG_LVL0, "¹ñÔ±ºÅ      %s",  tlr_no );
    WriteLog( DEBUG_LVL0, "Á÷Ë®ºÅ      %s",  seq_no );

    /*ÅÐ¶Ï±ØÐë´«Öµ×Ö¶Î*/
    if( strlen( OperTyp) == 0 )
    {
        sprintf( err_msg, " ½»Ò×ÀàÐÍÎª¿Õ!");
        WriteLog(ERR_LVL,"½»Ò×ÀàÐÍÎª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }
    else if ( strlen( wit_sign.sign_acc) == 0 )
    {
        sprintf( err_msg, "Ç©Ô¼ÕË»§Îª¿Õ!");
        WriteLog(ERR_LVL,"Ç©Ô¼ÕË»§Îª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    } 
    else if ( strlen ( wit_sign.out_sign_acc ) == 0 )
    { 
        sprintf ( err_msg, "×ª³öÕË»§Îª¿Õ!");
        WriteLog(ERR_LVL,"×ª³öÕË»§Îª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }
    else if ( strlen ( CustName ) == 0 )
    {
        sprintf ( err_msg, "»§ÃûÎª¿Õ!");
        WriteLog(ERR_LVL,"»§ÃûÎª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }
    else if ( strlen ( PayBankNo ) == 0 )
    {
        sprintf ( err_msg, "×ª³öÐÐºÅÎª¿Õ!");
        WriteLog(ERR_LVL,"×ª³öÐÐºÅÎª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }
    else if ( strlen ( Card_Flag ) == 0 )
    {
        sprintf ( err_msg, "¿¨ÕÛ±êÖ¾Îª¿Õ!");
        WriteLog(ERR_LVL,"¿¨ÕÛ±êÖ¾Îª¿Õ!");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }

    /*·Ç¶¨Ê±¿Û¿î*Ç*/
    if( OrderFlag[0] == '0' )
    {
        if( strlen( OrderPeriod )!=0 || strlen( OrderTm )!=0 || strlen( sAmt )!=0)
        {
            sprintf( err_msg, "·Ç¶¨Ê±¿Û¿îÇ©Ô¼ÖÜÆÚ¡¢Ê±¼ä¡¢½ð¶îÎª¿Õ!");
            WriteLog( ERR_LVL, "·Ç¶¨Ê±¿Û¿îÇ©Ô¼ÖÜÆÚ¡¢Ê±¼ä¡¢½ð¶îÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        strcpy( wit_sign.crontab_flag, "0");
    }
    else if( OrderFlag[0] == '1' ) /*¶¨Ê±ÖÜÆÚ¿Û¿î*/
    {
        if( strlen( OrderPeriod )==0 )
        {
            sprintf( err_msg,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬¿Û¿îÖÜÆÚ²»ÄÜÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬¿Û¿îÖÜÆÚ²»ÄÜÎª¿Õ! ");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        if( strlen( OrderTm )==0 )
        {
            sprintf( err_msg,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬Ô¤Ô¼¿Û¿îÊ±¼ä²»ÄÜÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬Ô¤Ô¼¿Û¿îÊ±¼ä²»ÄÜÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        if( strlen( sAmt )==0 )
        {
            sprintf( err_msg,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬¿Û¿î½ð¶î²»ÄÜÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±ÖÜÆÚ¿Û¿îÊ±£¬¿Û¿î½ð¶î²»ÄÜÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        strcpy( wit_sign.crontab_flag, "1");
    }
    else if( OrderFlag[0] == '2' ) /*¶¨Ê±·ÇÖÜÆÚ¿Û¿î-µ¥±Ê¶¨Ê±¿Û¿î*/
    {
        if( strlen( OrderPeriod )!=0 )
        {
            sprintf( err_msg,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬¿Û¿îÖÜÆÚÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬¿Û¿îÖÜÆÚÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        if( strlen( OrderTm )==0 )
        {
            sprintf( err_msg,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬Ô¤Ô¼¿Û¿îÊ±¼ä²»ÄÜÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬Ô¤Ô¼¿Û¿îÊ±¼ä²»ÄÜÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        if( strlen( sAmt )==0 )
        {
            sprintf( err_msg,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬¿Û¿î½ð¶î²»ÄÜÎª¿Õ!");
            WriteLog(ERR_LVL,"¶¨Ê±·ÇÖÜÆÚ¿Û¿îÊ±£¬¿Û¿î½ð¶î²»ÄÜÎª¿Õ!");
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
        strcpy( wit_sign.crontab_flag, "1");
    }

    /*ÅÐ¶ÏÊÇ·ñÖÜÆÚ¿Û¿î 0-·Ç¶¨Ê±¿Û¿î 1-¶¨Ê±ÖÜÆÚ¿Û¿î 2-¶¨Ê±·ÇÖÜÆÚ¿Û¿î*/
    if( strcmp( OrderFlag, "0" )==0 || strcmp( OrderFlag, "2" )==0)
        strcpy( wit_sign.period_flag,"1"  );  /*ÎÞÖÜÆÚ*/
    else
        strcpy( wit_sign.period_flag,"0" );  /*ÓÐÖÜÆÚ*/

    /*¿Û¿îÖÜÆÚ×ª»» t_wit_sign±í 0-ÔÂ 1-¼¾¶È  2-Äê*/
    if ( strlen ( OrderPeriod ) != 0 )
    {
        if( strcmp( OrderPeriod, "01" )==0 )
            strcpy( Period_Typ, "0" ); 
        else if( strcmp( OrderPeriod, "02" )==0 )
            strcpy( Period_Typ, "1" );
        else if( strcmp( OrderPeriod, "03" )==0 )
            strcpy( Period_Typ, "2" );
        else 
        { 
            sprintf( err_msg," ¿Û¿îÖÜÆÚ´í: %s", OrderPeriod );
            WriteLog(ERR_LVL," ¿Û¿îÖÜÆÚ´í: %s", OrderPeriod );
            PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
            PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
            return -1;
        }
    }

    /*´æÔÚ¿Û¿îÊ±¼ä*/
    if ( strlen( OrderTm ) != 0 )
        strcpy( wit_sign.sign_crontab_date,OrderTm );

    /*¿¨ÕÛ±êÖ¾×ª»»³ÉÓëÒøÁªÒ»ÖÂ*/
    if( strcmp( Card_Flag, "1" )==0 )
        strcpy( Card_Flag, "0" );         /*0-¿¨*/
    else if( strcmp( Card_Flag, "2" )==0 )
        strcpy( Card_Flag, "1" );         /*1-ÕÛ*/
    else
    {
        sprintf(err_msg, "¿¨ÕÛ±êÖ¾´íÎó£º 1 ¿¨ 2 ÕÛ");
        WriteLog(ERR_LVL, "¿¨ÕÛ±êÖ¾´íÎó£º 1 ¿¨ 2 ÕÛ");
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }    

    /*È¡Ê±¼äÈÕÆÚ*/
    ret = PayGetPbDate( pb_date);
    if(ret)
    {
        sprintf( err_msg,"È¡pbÈÕÆÚ´í: %s", pb_date );
        WriteLog(ERR_LVL,"È¡pbÈÕÆÚ´í: %s", pb_date);
        PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
        PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
        return -1;
    }

    /* ÑéÖ¤¿ª»§ÐÅÏ¢ */
    /********µ÷ÓÃ5711²éÑ¯×ªÈëÕË»§¿ª»§ÐÅÏ¢***********/
    ret = AccQryPub5711( wit_sign.sign_acc );
    if( ret )
    {
         WriteLog( ERR_LVL, "µ÷ÓÃ5711²éÑ¯×ª³öÕËºÅ[%s]ÐÅÏ¢Ê§°Ü", wit_sign.sign_acc );
         strcpy( err_msg, "²éÑ¯×ªÈëÕËºÅÐÅÏ¢Ê§°Ü!" );
         PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
         PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
         return  -1 ;
    }

    /*********È¡×ªÈëÕËºÅ¿ª»§ÐÅÏ¢***/
    GetPoolDataByName( "CBS", "CustName", 0, 0, CustName_in, 0 );
    GetPoolDataByName( "CBS", "AcctStat", 0, 0, CertNo_in, 0 );
    GetPoolDataByName( "CBS", "distflag", 0, 0, CertType_in, 0 );
    GetPoolDataByName( "CBS", "OpenInstNo", 0, 0, inst_no, 0 );
    GetPoolDataByName( "CBS", "OrgTranCode", 0, 0, acc_stat, 0);
    rtrim( CustName_in );
    rtrim( CertType_in );
    rtrim( CertNo_in );
    WriteLog( DEBUG_LVL0, "×ªÈëÕËºÅ¿ª»§»§Ãû[%s]", CustName_in );
    WriteLog( DEBUG_LVL0, "×ªÈëÕËºÅ¿ª»§Ö¤¼þºÅ[%s]", CertNo_in );
    WriteLog( DEBUG_LVL0, "×ªÈëÕËºÅ¿ª»§Ö¤¼þÀàÐÍ[%s]", CertType_in );
    
    /*ÕË»§×´Ì¬¼ì²é*/
     if ( acc_stat[0]!= '0')    /*Ïú»§×´Ì¬*/
    {  
        WriteLog(ERR_LVL, "Ïú»§");
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, "ÕË»§ÒÑÏú»§", 0 );
        return(-1);
    }

    /*Ö¤¼þÀàÐÍ×ª»»*/ 
    ret = NetParaConv( "certTyp" );
    if( ret)
    {
        WriteLog( ERR_LVL, "Ö¤¼þÀàÐÍ×ª»»´í" );
        strcpy( err_msg, "Ö¤¼þÀàÐÍ×ª»»´í" );
        PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
        PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
        return -1 ;
    }
    memset( certTyp, 0x00, sizeof( certTyp ) );
    GetPoolDataByName( "PAGTBUF", "papertype", 0, 0, certTyp, 0 );
    WriteLog( DEBUG_LVL0, "×ªÈëÕËºÅ¿ª»§Ö¤¼þÀàÐÍ[%s]", certTyp );

    if( strcmp( CustName, CustName_in )!=0 ||
        strcmp( certTyp, CertType_in )!=0 ||
        strcmp( CertNo,   CertNo_in   )!=0 )
    {
         WriteLog( ERR_LVL, "×ªÈëÕËºÅ¿Í»§Ãû³Æ[%s],Ö¤¼þÀàÐÍ[%s],Ö¤¼þºÅÂë[%s]"
             "Óë ×ª³öÕËºÅ¿Í»§Ãû³Æ[%s],Ö¤¼þÀàÐÍ[%s],Ö¤¼þºÅÂë[%s]²»Ò»ÖÂ",
             CustName_in,CertType_in,CertNo_in,CustName,certTyp,CertNo );
         strcpy( err_msg, "×ªÈë×ª³ö¿ª»§ÐÅÏ¢²»Ò»ÖÂ" );
         PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
         PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
         return  -1 ;
    }

    /*t_wit_signÖ¤¼þÀàÐÍ±£³ÖÓëÒøÁª±ê×¼Ò»ÖÂ*/
    if( strcmp( certTyp, "0" )  == 0 )
    {
        strcpy(ocerttyp,"01");/**Éí·ÝÖ¤**/
    }
    else if( strcmp( certTyp, "3" )  == 0 )
    {
        strcpy(ocerttyp,"02");/**¾ü¹ÙÖ¤**/
    }
    else if( strcmp( certTyp, "2" )  == 0 )
    {
        strcpy(ocerttyp,"03");/**»¤ÕÕ**/
    }
    else if( strcmp( certTyp, "1" )  == 0 )
    {
        strcpy(ocerttyp,"04");/**»§¿Ú±¾**/
    }
    else
    {
        strcpy(ocerttyp,"06");/**ÆäËü**/
    }
    memset( CertType, 0x00, sizeof( CertType) );
    strcpy( CertType, ocerttyp);
 
    if( strcmp( OperTyp, "00" )==0 )
    {
        WriteLog( DEBUG_LVL0, "========Ç©Ô¼=========" );
    
        /*Ô¤Ô¼±àºÅ*/
        memset( OrderNo, 0x00, sizeof( OrderNo ) );
        strcpy( OrderNo, pb_date );
        strcpy( OrderNo+8, seq_no );
           
        EXEC SQL SELECT sign_flag INTO :SignFlag
        FROM t_wit_sign
        WHERE sign_acc=:wit_sign.sign_acc
        AND  out_sign_acc=:wit_sign.out_sign_acc;
        if( sqlca.sqlcode !=0 && sqlca.sqlcode !=100 )
        {
           sprintf( err_msg,"²éÑ¯Ç©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
           WriteLog( ERR_LVL, "²éÑ¯Ç©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0);
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0);
           return -1;
        }
        rtrim( SignFlag );

        if( strcmp( SignFlag, "1" ) == 0 )
        {
           sprintf( err_msg, "ÕË»§ÒÑ´¦ÓÚÇ©Ô¼×´Ì¬,²»ÔÊÐíÔÙÇ©");
           WriteLog( ERR_LVL, "ÕË»§[%s][%s]ÒÑ´¦ÓÚÇ©Ô¼×´Ì¬,²»ÔÊÐíÔÙÇ©", wit_sign.sign_acc, wit_sign.out_sign_acc );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0);
           PutPoolDataByName("ABSHEAD","_error_code",0,0, err_msg,0);
           return -1;
        }
        else if( strcmp( SignFlag, "0" ) == 0 )
        {
            dtcurrent( &wit_sign.sign_time );
            dtcurrent( &wit_sign.mod_time );
            wit_sign.crontab_amt = TranAmt;
            EXEC SQL UPDATE t_wit_sign 
                SET sign_no =:OrderNo,
                cert_type = :CertType,
                cert_no =:CertNo,
                cust_name = :CustName,
                sign_date =:pb_date,
                sign_time =:wit_sign.sign_time,
                mod_date =:pb_date,
                mod_time =:wit_sign.mod_time,
                sign_flag ='1',
                inst_no =:inst_no,
                tlr_no =:tlr_no,
                crontab_flag =:wit_sign.crontab_flag,
                crontab_amt=:wit_sign.crontab_amt,
                now_date= :wit_sign.now_date,
                sign_crontab_date =:wit_sign.sign_crontab_date,
                out_acc_type = :Card_Flag,
            /**½âÔ¼ºóÖØÐÂÇ©Ô¼,¸²¸ÇÐÐºÅ,ÖÜÆÚÊý¾Ý*/
            /**Çå¿Õ¶¨Ê±¿Û¿î×´Ì¬,ÏÂ´Î¿Û¿îÈÕÆÚ**/
                out_open_bank =:PayBankNo,
                period_flag = :wit_sign.period_flag,
                period_type = :Period_Typ,
                crontab_stat = '0',
                next_date = ''
            WHERE  sign_acc =:wit_sign.sign_acc
            AND    out_sign_acc=:wit_sign.out_sign_acc;
            if( SQLCODE || sqlca.sqlerrd[2]!=1 )
            {
                sprintf( err_msg, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]",sqlca.sqlcode );
                WriteLog( ERR_LVL, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
                PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
                PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
                return -1;
            }
           WriteLog( DEBUG_LVL0, "¸üÐÂÇ©Ô¼±í³É¹¦" );
        }
        else
        {
           strcpy( wit_sign.batch_no, "1111001111" );
           strcpy( wit_sign.batch_name, "¿çÐÐ½áËã¸öÈËÇ©Ô¼" );
           strcpy( wit_sign.sign_no, OrderNo ); /*Ç©Ô¼±àºÅ*/
           strcpy( wit_sign.cert_type, CertType );
           strcpy( wit_sign.cert_no, CertNo );
           strcpy( wit_sign.cust_name, CustName );
           strcpy( wit_sign.cust_type, "0" ); /*¸öÈË*/
           strcpy( wit_sign.out_acc_type, Card_Flag );
           strcpy( wit_sign.out_open_bank, PayBankNo );
           strcpy( wit_sign.sign_date, pb_date );
           strcpy( wit_sign.mod_date, pb_date );
           dtcurrent( &wit_sign.sign_time );
           dtcurrent( &wit_sign.mod_time );
           strcpy( wit_sign.sign_flag, "1" );  /*Ç©Ô¼*/
           strcpy( wit_sign.inst_no, inst_no );
           strcpy( wit_sign.tlr_no, tlr_no );
           strcpy( wit_sign.crontab_flag, wit_sign.crontab_flag);/*0·ÇÔ¤Ô¼¿Û¿î1Ô¤Ô¼¿Û¿î*/
           /*period_flagÔÚÇ°ÃæÒÑ¾­¸³Öµ*/
           strcpy( wit_sign.period_type, Period_Typ );
           wit_sign.crontab_amt = TranAmt;
           strcpy( wit_sign.sign_crontab_date, OrderTm );
           strncpy( wit_sign.now_date, OrderTm, 10 );
           strcpy( wit_sign.crontab_stat, "0" );/*Î´´¦Àí*/
           EXEC SQL INSERT INTO t_wit_sign VALUES( :wit_sign);
           if( sqlca.sqlcode )
           {
              sprintf( err_msg, "µÇ¼ÇÇ©Ô¼±íÊ§°Ü[%d]",sqlca.sqlcode );
              WriteLog( ERR_LVL, "µÇ¼ÇÇ©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
              PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
              PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
              return -1;
           }
           WriteLog( ERR_LVL, "µÇ¼ÇÇ©Ô¼±í³É¹¦");
        }
    }
    else if( strcmp( OperTyp, "01" )==0 ) /*ÐÞ¸ÄÇ©Ô¼ÐÅÏ¢*/
    {
       WriteLog( DEBUG_LVL0, "=======ÐÞ¸ÄÇ©Ô¼ÐÅÏ¢========" );
       WriteLog( DEBUG_LVL0, "¿Û¿î·½Ê½:[%s],¿Û¿îÖÜÆÚ:[%s]", OrderFlag,OrderPeriod );
       WriteLog( DEBUG_LVL0, "¿Û¿îÊ±¼ä:[%s],¿Û¿î½ð¶î:[%s]", OrderTm,sAmt );
       if( strlen( OrderNo )==0 )
       {
           sprintf( err_msg, "Ç©Ô¼±àºÅ²»ÄÜÎª¿Õ" );
           WriteLog( ERR_LVL, "ÐÞ¸ÄÇ©Ô¼ÐÅÏ¢Ê±Ç©Ô¼±àºÅ²»ÄÜÎª¿Õ" );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
       WriteLog( DEBUG_LVL0, "sign_acc=[%s] out_sign_acc=[%s]", wit_sign.sign_acc, wit_sign.out_sign_acc);
       EXEC SQL SELECT sign_flag INTO:SignFlag 
       FROM t_wit_sign
       WHERE batch_no='1111001111'
       AND   sign_no =:OrderNo 
       AND   sign_acc =:wit_sign.sign_acc
       AND   out_sign_acc=:wit_sign.out_sign_acc;
       if( sqlca.sqlcode )
       {
           sprintf( err_msg, "²éÑ¯Ç©Ô¼±íÊ§°Ü[%d]",sqlca.sqlcode );
           WriteLog( ERR_LVL, "²éÑ¯Ç©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
       
       rtrim( SignFlag );
       if( strcmp( SignFlag, "1" )!=0 )
       {
           sprintf( err_msg, "±àºÅ[%s]ÒÑ½âÔ¼,²»ÔÊÐíÐÞ¸Ä" , OrderNo );
           WriteLog( ERR_LVL, "±àºÅ[%s]ÒÑ½âÔ¼,²»ÔÊÐíÐÞ¸Ä", OrderNo );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }

       dtcurrent( &wit_sign.mod_time );

       EXEC SQL UPDATE t_wit_sign
       SET crontab_flag=:wit_sign.crontab_flag,
           period_flag=:wit_sign.period_flag,
           period_type=:Period_Typ,
           crontab_amt=:TranAmt,
           sign_crontab_date=:OrderTm,
           now_date=:OrderTm,
           mod_date=:pb_date,
           mod_time=:wit_sign.mod_time,
           crontab_stat = '0',
           next_date = ''
       WHERE batch_no='1111001111'
       AND   sign_no =:OrderNo 
       AND   sign_acc =:wit_sign.sign_acc
       AND   out_sign_acc=:wit_sign.out_sign_acc;
       if( SQLCODE || sqlca.sqlerrd[2]!=1 )
       {
           sprintf( err_msg, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]",sqlca.sqlcode );
           WriteLog( ERR_LVL, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
       WriteLog( ERR_LVL, "ÐÞ¸ÄÇ©Ô¼ÐÅÏ¢³É¹¦!" );     
    }
    else if( strcmp( OperTyp, "02" )==0 ) /*½âÔ¼*/
    {
       WriteLog( DEBUG_LVL0, "==========½âÔ¼=============" );
       if( strlen( OrderNo )==0 )
       {
           sprintf( err_msg, "½âÔ¼Ê±Ç©Ô¼±àºÅ²»ÄÜÎª¿Õ" );
           WriteLog( ERR_LVL, "½âÔ¼Ê±Ç©Ô¼±àºÅ²»ÄÜÎª¿Õ)" );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
       EXEC SQL SELECT sign_flag  INTO:SignFlag 
       FROM t_wit_sign 
       WHERE batch_no='1111001111'
       AND   sign_no =: OrderNo; 
       if( sqlca.sqlcode )
       {
           sprintf( err_msg, "²éÑ¯Ç©Ô¼±íÊ§°Ü[%d],[%s]",sqlca.sqlcode );
           WriteLog( ERR_LVL, "²éÑ¯Ç©Ô¼±íÊ§°Ü[%d],[%s]", sqlca.sqlcode );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
       
       rtrim( SignFlag );
       if( strcmp(SignFlag, "0" )==0 )
       {
           sprintf( err_msg, "Ç©Ô¼±àºÅ[%s]ÒÑ½âÔ¼£¬²»ÄÜÔÙ½âÔ¼", OrderNo );
           WriteLog( ERR_LVL, "Ç©Ô¼±àºÅ[%s]ÒÑ½âÔ¼£¬²»ÄÜÔÙ½âÔ¼", OrderNo );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
      
       dtcurrent( &wit_sign.mod_time );
       EXEC SQL UPDATE t_wit_sign
       SET  sign_flag='0',
            mod_date=:pb_date,
            mod_time=:wit_sign.mod_time
       WHERE batch_no='1111001111'
       AND   sign_no=: OrderNo; 

       if( SQLCODE || sqlca.sqlerrd[2]!=1 )
       {
           sprintf( err_msg, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]",sqlca.sqlcode );
           WriteLog( ERR_LVL, "¸üÐÂÇ©Ô¼±íÊ§°Ü[%d]", sqlca.sqlcode );
           PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
           PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
           return -1;
       }
        
       WriteLog( ERR_LVL, "½âÔ¼Íê³É!" );
    }
   else
    {
       sprintf( err_msg, "½»Ò×ÀàÐÍ´í[%s]",OperTyp );
       WriteLog( ERR_LVL, "½»Ò×ÀàÐÍ´í[%s]",OperTyp );
       PutPoolDataByName("ABSHEAD","app_err_no",0,0,(char*)&errcode,0 );
       PutPoolDataByName("ABSHEAD","_error_code",0,0,err_msg,0 );
       return -1;
    }

    PutPoolDataByName( "BUSIIB", "bookNb", 0, 0, OrderNo, 0 );
    PutPoolDataByName( "BUSIIB", "certNb", 0, 0, CertNo, 0 );
    return 0;
}

