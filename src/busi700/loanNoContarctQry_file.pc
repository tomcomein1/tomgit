/*PB3.0系统自动生成demo源码文件*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h" 
#include "pbstructdef.h" 
#include "pbranchdb.h"
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"
#include "macrodef.h"
EXEC SQL include "pbsrv.h";

/*****************************************
 *    Function    :	loanNoContarctQry_file
 *    DESC        :	小额农贷借据号查询文件解析
 *    INPUT       :	NULL
 *    Return:   0 -- 成功  -1 -- 失败
 *    ------------------------------------
 *    Author	Date			Action
 *    heyz 		2014/2/27		Create
*****************************************/

long  
loanNoContarctQry_file( )
{
	char acc[25+1];
	char currtype[6+1];
	char repay_date[10+1];
	double loanbal = 0.00;
	char repayModeNm[10+1];
	char s_loan_term[8+1];
	char str_tmp[20];
	char str_num[4+1];
	char str_rec_num[20];
	char due_date[8+1];
	char end_date[8+1];
	char str_amt[16+1];
	char TT_seqno[10+1];
	char PB_seqno[10+1];
	char ftpfilename[64+1];
	char syscmd[256];
	char loan_inst[4+1];
	char atm_trandate[8+1];
	char loanno[32+1];
	char res_code[4+1];
	char err_msg[50+1];
	char buff[1024];
	char filename[50+1];
	long num = 0;
	long hoststat = 1;
	long err_no;
	long i;
	long lerrcode=0;
	double amt;
	double amt1;
	double amt2;
	char amta[17+1];         		/* 借款金额 */
	char amtb[17+1];         		/* 借款余额 */
	double rate1;
	double rate2;
	char ratea[17+1];    			/* 贷款利率 */
	char rateb[17+1];    			/* 逾期利率 */
	FILE *fp;
	char *cp = NULL;
	long ret = -1;
	long count = 0;
	struct s_rec_inf				/*记录信息*/
	{
		int count;        			/* 序号 */
		char loan_no[25];			/* 借据号 */
		char loan_date[9+1];			/* 借款日期 */
		char due_dt[9+1];    			/* 到期日 */
		char loan_amt[17+1];         		/* 借款金额 */
		char loanBalance[17+1];         	/* 借款余额 */
		char clr_acc[25+1];         		/* 核算帐号 */
		char clt_seqno[20+1];                /* 合同流水号 */
		char loan_rate[17+1];    		/* 贷款利率 */
		char overduerate[17+1];    		/* 逾期利率 */
		char over_amt[17+1];           		/* 欠息金额 */
		char loan_inst[14+1];			/* 贷款机构 */
	};	
	struct s_rec_inf rec_dtl;
	i = 0;
	amt = 0.0;

	memset(buff, 0, sizeof(buff));
	memset(acc, 0, sizeof(acc));
	memset(amta, 0, sizeof(amta));
	memset(amtb, 0, sizeof(amtb));
	memset(ratea, 0, sizeof(ratea));
	memset(rateb, 0, sizeof(rateb));
	memset(str_rec_num, 0, sizeof(str_rec_num));
	memset(s_loan_term, 0, sizeof(s_loan_term));
	memset( due_date, 0x00, sizeof(due_date) );
	memset( end_date, 0x00, sizeof(end_date) );
	memset( str_amt,  0x00, sizeof(str_amt)  );
	memset( TT_seqno, 0x00, sizeof(TT_seqno) );
	memset( PB_seqno, 0x00, sizeof(PB_seqno) );
	memset( str_num,  0x00, sizeof(str_num)  );
	memset( loanno, 0, sizeof(loanno));
	memset( ftpfilename,  0x00, sizeof(ftpfilename)  );
	memset( syscmd,   0x00, sizeof(syscmd)   );
	memset(loan_inst, 0x00, sizeof(loan_inst));
	memset( atm_trandate, 0x00, sizeof(atm_trandate) );
	memset(filename,        0x00,     sizeof(filename));
	memset( res_code, 0x00, sizeof(res_code) );
	memset( err_msg,  0x00, sizeof(err_msg)  );
	memset(&rec_dtl, 0x00, sizeof(struct s_rec_inf));
	
	if( (ret = PayGetPbDate( atm_trandate )) != 0 ) {
	    WriteLog( ERR_LVL, "取系统日期错\n" );
	    strcpy( err_msg, "取系统日期错!" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
	    return ( -1 );
	}

	if ( (ret = get_TTseqno( TT_seqno )) != 0 )
	{
        WriteLog ( ERR_LVL, "取TT流水号出错");
        strcpy( err_msg, "取TT流水号出错" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
        return( PB_ERR);
    }

	if ( (ret = get_PBseqno( PB_seqno )) != 0 )
	{
        WriteLog ( ERR_LVL, "取PB流水号出错");
        strcpy( err_msg, "取PB流水号出错" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
        return( PB_ERR);
	}
	
	GetPoolDataByName( "ABSHEAD", "recv_filename", 0, 0, ftpfilename, 0 );
	GetPoolDataByName( "LOAN_CTRL", "ovfd_amt",  0, 0, (char *)&loanbal, 0 );
	GetPoolDataByName( "LOAN_CTRL", "b_b_date", 0, 0, due_date,     0 );
	GetPoolDataByName( "LOAN_CTRL", "rec_num_per_page",  0, 0, &num,         0 );
	WriteLog( ERR_LVL, "------符合条件记录数[%d]-----", num);
	GetPoolDataByName( "LOAN_CTRL", "end_date1",   0, 0, end_date,     0 );
	GetPoolDataByName( "LOAN_CTRL", "cstm_acc",   0, 0, acc,     0 );
	rtrim( end_date );
	rtrim( due_date );
	WriteLog( APP_LVL, "end_date[%s]", end_date );
	WriteLog( APP_LVL, "due_date[%s]", due_date );
	
	/* 符合条件的记录数 */
	WriteLog( APP_LVL, "rec_num[%ld]", num );

	GetPoolDataByName( "ABSHEAD", "organ_no", 0, 0, loan_inst, 0 );
	GetPoolDataByName( "ABSHEAD", "_host_stat", 0, 0, &hoststat, 0 );
	if( hoststat != 0 ) {
	
	    GetPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
	    GetPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, &err_no, 0 );
	
	Trim(res_code);
	    if( hoststat == -1 ) {
	        WriteLog( APP_LVL, "通讯超时:[%s]", err_msg );
        strcpy( err_msg, "通讯超时!" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
	    }
	    else {
	        WriteLog( APP_LVL, "交易参数检查失败:[%s]", err_msg );
        strcpy( err_msg, "交易参数检查失败:[%s]", err_msg );
	        memset( err_msg, 0x00, sizeof(err_msg) );
	        sprintf(err_msg, "%d", err_no);
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, err_no, 0 );
	    }
	
	    return( -1 );
	}

	if( num == 0 ) {
	        lerrcode = 99999;
          WriteLog( ERR_LVL, "空文件[%s][%d]直接返回退出!\n", ftpfilename, num );
          strcpy( err_msg, "记录不存在!" );
          PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0,(char *)&lerrcode, 0 );
          PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
          PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "-1", 0 );
          return ( -1 );
	}

	sprintf( str_num, "%04ld", num );
    WriteLog( APP_LVL, "##############![%ld][%s]\n", num, str_num );

	sprintf( str_amt, "%-16.0lf", loanbal*100 );
	Trim(str_amt);

    /***取文件***/
	WriteLog( ERR_LVL, "Ftp取文件参数![%s][%s]",\
		ftpfilename, loan_inst );
    ret = TransFileRecv( "FTPFILE",
						 ftpfilename,
						 loan_inst,
						 0 );
    if( ret != 0 )
    {
        WriteLog( ERR_LVL, "Ftp取文件[%s]失败!\n", ftpfilename );
        strcpy( err_msg, "文件[%s]传输失败!", ftpfilename );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
        return (-1);
    }

	sprintf( syscmd, "mv %s/%c%c/%s/%s %s 1>/dev/null 2>&1 ",\
		getenv("PRINTERDIR"), loan_inst[0], loan_inst[1],\
		loan_inst, ftpfilename, getenv("PRINTERDIR") );
	system( syscmd );
	WriteLog( APP_LVL, "Ftp get file SUCCEED![%s]\n", syscmd );

   /************ 读取文件内容 ************/
	sprintf(filename, "%s/%s", getenv("PRINTERDIR"), ftpfilename);
	fp = fopen(filename, "r");
	if ( fp == NULL )
	{
		WriteLog( ERR_LVL, "打开文件[%s]失败", filename);
		strcpy( err_msg, "系统忙,请稍后再试!");
		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&err_no, 0 );
		PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
		PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "-1", 0 );
		return PB_ERR;
	}
	i = 0;
	while(! feof( fp))
	{
	    if(i >= num)
	    {
		break;	
	    }	
	    
	    memset(buff, 0, sizeof(buff));
	    cp = fgets(buff, sizeof(buff), fp);
	    if ( cp == NULL)
	    {
	      continue;
	    }
	    WriteLog( APP_LVL, "[%s]", buff);
	    GetAStr(rec_dtl.loan_no, 2, buff);
	    rtrim(rec_dtl.loan_no);	
	    GetAStr(rec_dtl.loan_date, 3, buff);
	    rtrim(rec_dtl.loan_date);	
	    GetAStr(rec_dtl.due_dt, 4, buff);
	    rtrim(rec_dtl.due_dt);	
	    GetAStr(rec_dtl.loan_amt, 5, buff);
	    rtrim(rec_dtl.loan_amt);	
	    GetAStr(rec_dtl.loanBalance, 6, buff);
	    rtrim(rec_dtl.loanBalance);	
	    GetAStr(rec_dtl.clr_acc, 7, buff);
	    rtrim(rec_dtl.clr_acc);	
	    GetAStr(rec_dtl.clt_seqno, 8, buff);
	    rtrim(rec_dtl.clt_seqno);	
	    GetAStr(rec_dtl.loan_rate, 9, buff);
	    rtrim(rec_dtl.loan_rate);	
	    GetAStr(rec_dtl.overduerate, 10, buff);
	    rtrim(rec_dtl.overduerate);	
	  WriteLog( APP_LVL, "[%s][%s][%s][%s] ", rec_dtl.loan_no,rec_dtl.loan_date,rec_dtl.due_dt,rec_dtl.clr_acc);

			/* 给客户端的返回赋值 */
	        
	        /***************** 组织返回打包 *****************/
            /* 贷款账号 */
            PutPoolDataByName("BUSIIB", "loanAcct", i, 0, rec_dtl.clr_acc, 0);
	        /* 借据号 */
            PutPoolDataByName("BUSIIB", "loanCtrctNb", i, 0, rec_dtl.clt_seqno, 0);
            /* 贷款金额 */
            amt1 = atof( rec_dtl.loan_amt )/100;
            amt2 = atof( rec_dtl.loanBalance )/100;
            WriteLog( APP_LVL, "amt1=[%f],amt2=[%f]", amt1,amt2);
            sprintf(amta, "%.2f", amt1);
            sprintf(amtb, "%.2f", amt2);
            WriteLog( APP_LVL, "amta=[%s],amtb=[%s]", amta,amtb);
            PutPoolDataByName("BUSIIB", "loanAmt", i, 0, amta, 0);
            PutPoolDataByName("BUSIIB", "bal", i, 0, amtb, 0);

            /* 起息日 */
            PutPoolDataByName("BUSIIB", "intrstBgnDt", i, 0, rec_dtl.loan_date, 0);
            /* 到期日 */
            PutPoolDataByName("BUSIIB", "dueDt", i, 0, rec_dtl.due_dt, 0);
            
            rate1 = atof( rec_dtl.loan_rate )/100000000;
            rate2 = atof( rec_dtl.overduerate )/100000000;
          WriteLog( APP_LVL, "rate1=[%f],rate2=[%f]", rate1,rate2);
            sprintf(ratea, "%.6f", rate1);
            sprintf(rateb, "%.6f", rate2);
          WriteLog( APP_LVL, "ratea=[%s],rateb=[%s]", ratea,rateb);
     	    PutPoolDataByName("BUSIIB", "intrstRate", i, 0, ratea, 0);

	    PutPoolDataByName("BUSIIB", "ctrctPayIntrst", i, 0, rateb, 0);
	  /*  PutPoolDataByName("BUSIIB", "avlBal", i, 0, rec_dtl.overduerate, 0);
            */
	    PutPoolDataByName("BUSIIB", "acct", i, 0, acc, 0);
	    /****************del by Kim on 20140513:还原8位的子账户序号
	    strcpy(loanno,acc);
	    strcat(loanno,rec_dtl.loan_no);
	    PutPoolDataByName("BUSIIB", "voucherNo", i, 0, loanno, 0);
	    **********************************************************/
	    PutPoolDataByName("BUSIIB", "voucherNo", i, 0, rec_dtl.loan_no, 0);
	    i++;
	}
	fclose( fp);
	
	PutPoolDataByName("BUSIIB", "turnPageTotalQnt", 0, 0, str_num, 0);
	PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "0", 0 );
	PutPoolDataByName( "BUSIIB", "v", 0, 0, str_num, 0);
	
	return 0;
}



/*****************************************
 *    Function    :	loanNoRate_deal
 *    DESC        :	自助贷放贷利率处理
 *    INPUT       :	NULL
 *    Return:   0 -- 成功  -1 -- 失败
 *    ------------------------------------
 *    Author	Date			Action
 *    heyz 		2014/6/21		Create
*****************************************/

long  
loanNoRate_deal( )
{
	char acc[25+1];
	char loanTyp[1+1];
	char chargeTyp[1+1];
	double loanbal = 0.00;
	double loanAmt = 0.00;
	char custNm[60];
	double ctrctPayIntrst = 0.000000;
	double intrstRate= 0.000000;
	char str_num[4+1];
	double payIntrst= 0.000000;
	char atm_trandate[9+1];
	char due_date[9+1];
	char end_date[9+1];
	char str_amt[16+1];
	char TT_seqno[10+1];
	char PB_seqno[10+1];
	char use[128];
	char loan_inst[4+1];
	char loanno[32+1];
	char openBrchID[6+1];
	char err_msg[50+1];
	long num = 0;
	long hoststat = 1;
	long err_no;
	long i;
	long lerrcode=0;
	double amt;
	double amt1;
	double amt2;
	char amta[17+1];         		/* 借款金额 */
	char amtb[17+1];         		/* 借款余额 */
	double rate1;
	double rate2;
	double rate3;
	char ratea[17+1];    			/* 半年利率 */
	char rateb[17+1];    			/* 一年利率 */
	char ratec[17+1];    			/* 三年利率 */
	FILE *fp;
	char *cp = NULL;
	long ret = -1;
	long count = 0;
	char loanCtrctNb[25];			/* 借据号 */
	char bgnDt[9+1];			/* 借款日期 */
	char ctrctRepayDt[9+1];    			/* 到期日 */
	char bookDt[9+1];    			/* 到期日 */	
	char commitDt[9+1];    			/* 到期日 */	
	char ret_bgn_date[9+1];    			/* 到期日 */	
	char loan_amt[17+1];         		/* 借款金额 */
	char loanBalance[17+1];         	/* 借款余额 */
	char drawDt[9+1];         		/* 核算帐号 */
	char clt_seqno[20+1];                /* 合同流水号 */
	char loan_rate[17+1];    		/* 贷款利率 */
	char overduerate[17+1];    		/* 逾期利率 */
	char over_amt[17+1];           		/* 欠息金额 */

	i = 0;
	amt = 0.0;

	memset(custNm, 0, sizeof(custNm));
	memset(acc, 0, sizeof(acc));
	memset(amta, 0, sizeof(amta));
	memset(amtb, 0, sizeof(amtb));
	memset(ratea, 0, sizeof(ratea));
	memset(rateb, 0, sizeof(rateb));
	memset(ratec, 0, sizeof(ratec));
	memset(openBrchID, 0, sizeof(openBrchID));
	memset(loanTyp, 0, sizeof(loanTyp));
	memset(chargeTyp, 0, sizeof(chargeTyp));
	memset( due_date, 0x00, sizeof(due_date) );
	memset( end_date, 0x00, sizeof(end_date) );
	memset( TT_seqno, 0x00, sizeof(TT_seqno) );
	memset( PB_seqno, 0x00, sizeof(PB_seqno) );
	memset( str_num,  0x00, sizeof(str_num)  );
	memset( loanno, 0, sizeof(loanno));
	memset( bookDt, 0x00, sizeof(bookDt));
	memset( atm_trandate, 0x00, sizeof(atm_trandate) );
	memset( commitDt, 0x00, sizeof(commitDt));
	memset( drawDt, 0x00, sizeof(drawDt) );
	memset( err_msg,  0x00, sizeof(err_msg)  );
	memset( use, 0x00, sizeof(use) );
	memset( bgnDt,  0x00, sizeof(bgnDt)  );
	memset( loanCtrctNb,  0x00, sizeof(loanCtrctNb)  );	
	memset( bgnDt,  0x00, sizeof(bgnDt)  );		
	if( (ret = PayGetPbDate( atm_trandate )) != 0 ) {
	    WriteLog( ERR_LVL, "取系统日期错\n" );
	    strcpy( err_msg, "取系统日期错!" );
	    PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
	    PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, "-1", 0 );
	    return ( -1 );
	}

	if ( (ret = get_TTseqno( TT_seqno )) != 0 )
	{
        WriteLog ( ERR_LVL, "取TT流水号出错");
        strcpy( err_msg, "取TT流水号出错" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
        return( PB_ERR);
    }

	if ( (ret = get_PBseqno( PB_seqno )) != 0 )
	{
        WriteLog ( ERR_LVL, "取PB流水号出错");
        strcpy( err_msg, "取PB流水号出错" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
        return( PB_ERR);
	}
	
	GetPoolDataByName( "LOAN_CTRL", "ovfd_amt",  0, 0, (char *)&loanbal, 0 );
	GetPoolDataByName( "LOAN_CTRL", "old_card_no",  0, 0, loanCtrctNb, 0 );
	GetPoolDataByName( "LOAN_CTRL", "custName", 0, 0, custNm,     0 );
	GetPoolDataByName( "LOAN_CTRL", "loanTyp",   0, 0, loanTyp,     0 );
	GetPoolDataByName( "LOAN_CTRL", "chargeTyp",   0, 0, chargeTyp,     0 );
	GetPoolDataByName( "LOAN_CTRL", "auth_cr_amt",  0, 0, (char *)&loanAmt, 0 );
	GetPoolDataByName( "LOAN_CTRL", "open_date",  0, 0, bgnDt, 0 );
	GetPoolDataByName( "LOAN_CTRL", "end_date1",  0, 0, ctrctRepayDt, 0 );
	GetPoolDataByName( "LOAN_CTRL", "openBrchID",  0, 0, openBrchID, 0 );
	GetPoolDataByName( "LOAN_CTRL", "loan_use", 0, 0, use, 0 );
	GetPoolDataByName( "LOAN_CTRL", "deposit_rate", 0, 0, (char *)&ctrctPayIntrst, 0 );
	GetPoolDataByName( "LOAN_CTRL", "exec_rate", 0, 0, (char *)&intrstRate, 0 );
	GetPoolDataByName( "LOAN_CTRL", "stmt_pun_rate", 0, 0, (char *)&payIntrst, 0 );
	GetPoolDataByName( "LOAN_CTRL", "due_date", 0, 0, bookDt, 0 );
	GetPoolDataByName( "LOAN_CTRL", "ret_end_date", 0, 0, commitDt, 0 );
	GetPoolDataByName( "LOAN_CTRL", "ret_bgn_date", 0, 0, drawDt, 0 );
	GetPoolDataByName( "ABSHEAD", "_host_stat", 0, 0, &hoststat, 0 );
	if( hoststat != 0 ) {
	
	    GetPoolDataByName( "ABSHEAD", "_error_code", 0, 0, err_msg, 0 );
	    GetPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, &err_no, 0 );
	
	    if( hoststat == -1 ) {
	        WriteLog( APP_LVL, "通讯超时:[%s]", err_msg );
        strcpy( err_msg, "通讯超时!" );
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, "96", 0 );
	    }
	    else {
	        WriteLog( APP_LVL, "交易参数检查失败:[%s]", err_msg );
        strcpy( err_msg, "交易参数检查失败:[%s]", err_msg );
	        memset( err_msg, 0x00, sizeof(err_msg) );
	        sprintf(err_msg, "%d", err_no);
	    		PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, err_no, 0 );
	    }
	
	    return( -1 );
	}
			/* 给客户端的返回赋值 */
	        
	        /***************** 组织返回打包 *****************/

	        /* 借据号 */
            PutPoolDataByName("BUSIIB", "loanCtrctNb", 0, 0, loanCtrctNb, 0);
            /* 贷款金额 */
            WriteLog( APP_LVL, "loanbal=[%f],loanAmt=[%f]", loanbal,loanAmt);
            sprintf(amta, "%.2f", loanbal);
            sprintf(amtb, "%.2f", loanAmt);
            WriteLog( APP_LVL, "amta=[%s],amtb=[%s]", amta,amtb);
            PutPoolDataByName("BUSIIB", "amt", 0, 0, amta, 0);
            PutPoolDataByName("BUSIIB", "loanAmt", 0, 0, amtb, 0);
            
            PutPoolDataByName("BUSIIB", "custNm", 0, 0, custNm, 0);
            PutPoolDataByName("BUSIIB", "loanTyp", 0, 0, loanTyp, 0);
            PutPoolDataByName("BUSIIB", "chargeTyp", 0, 0, chargeTyp, 0);
            PutPoolDataByName("BUSIIB", "bgnDt", 0, 0, bgnDt, 0);
            PutPoolDataByName("BUSIIB", "ctrctRepayDt", 0, 0, ctrctRepayDt, 0);
            PutPoolDataByName("BUSIIB", "openBrchID", 0, 0, openBrchID, 0);
            
            PutPoolDataByName("BUSIIB", "use", 0, 0, use, 0);
            PutPoolDataByName("BUSIIB", "bookDt", 0, 0, bookDt, 0);
            PutPoolDataByName("BUSIIB", "commitDt", 0, 0, commitDt, 0);
            PutPoolDataByName("BUSIIB", "drawDt", 0, 0, drawDt, 0);
            
          WriteLog( APP_LVL, "ctrctPayIntrst=[%f],intrstRate=[%f],payIntrst=[%f]", ctrctPayIntrst,intrstRate,payIntrst);
            sprintf(ratea, "%.5f", ctrctPayIntrst);
            sprintf(rateb, "%.5f", intrstRate);
            sprintf(ratec, "%.5f", payIntrst);            
          WriteLog( APP_LVL, "ratea=[%s],rateb=[%s],ratec=[%s]", ratea,rateb,ratec);
     	    PutPoolDataByName("BUSIIB", "ctrctPayIntrst", 0, 0, ratea, 0);
          PutPoolDataByName("BUSIIB", "intrstRate", 0, 0, rateb, 0);
          PutPoolDataByName("BUSIIB", "payIntrst", 0, 0, ratec, 0);
	
	        sprintf(err_msg, "%d", err_no);
	        WriteLog( APP_LVL, "err_msg=[%s]", err_msg);
          PutPoolDataByName( "BUSIIB", "thsretCd", 0, 0, err_msg, 0 );
          PutPoolDataByName( "BUSIIB", "v", 0, 0, str_num, 0);
          PutPoolDataByName("BUSIIB", "turnPageTotalQnt", 0, 0, "1", 0);
          PutPoolDataByName( "BUSIIB", "v", 0, 0, "1", 0);
	
	return 0;
}
