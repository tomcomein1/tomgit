/*PB3.0系统自动生成demo源码文件*/

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include "pbconstval.h" 
#include "pbstructdef.h" 
#ifdef ORACLE_DATABASE
EXEC SQL include "pbranchdb.h";
#else
#include "pbranchdb.h"
#endif
#include "pberrlog.h"
#include "pbglbvardef.h"
#include "pbbasefunc.h"
#include "pbvarmacro.h"
int Row2Col( int varno , char *varname)
{
	int col, row, i, j;
	char tmp[1000+1];
	char list[3+1];

	memset( tmp, 0, sizeof( tmp));
	memset( list, 0, sizeof( list));

	col = GetVarColNum( varno );
	row = GetVarRowNum( varno );
	GetPoolDataByName( "RCBIB", "list", 0, 0, list, 0);
	WriteLog( ERR_LVL, "row=[%d]col=[%d]varname[%s]list[%s]", row, col, varname,list );
	if( atol(list)> col)
	{
		WriteLog( ERR_LVL, "传入循环次数[%s]大于变量池维度[%d]", list, col);
		return( -1);
	}
	for( i=0; i<row; i++ )
	{
		memset( tmp, 0x00, sizeof(tmp) );
		GetPoolDataByName( "RCBIB", varname, i, i, tmp, 0 );
		PutPoolDataByName( "BUSIIB", varname, 0, i, tmp, 0 );
	}
	return 0;
}
/*******************
 * desc		: 把row改为col
 * input	: 数据字典|变量名|变量名.....
*******************/
int  pbbusi700midpay ( char *param )
{
	char errmsg[128+1];
	long errcode = 0;
	int i, varno, ret;
	ATOM_PARA     Para;
	ParseAtomPara ( &Para , param ) ;
	for( i=1; i<Para.ParaNum; i++ )
	{
		varno = GetVarNo30( Para.Para[0], Para.Para[i] );
		WriteLog( ERR_LVL, "varname = [%s]varno = [%d]", Para.Para[i], varno );
		ret = Row2Col( varno, Para.Para[i] );
		if( ret < 0)
		{
			WriteLog ( ERR_LVL, "循环次数大于PB循环配置");
			memset( errmsg, 0x00, sizeof( errmsg ) );
			errcode = 99999;
			strcpy( errmsg, "循环次数大于PB循环配置" );
			PutPoolDataByName( "ABSHEAD", "app_err_no", 0, 0, (char *)&errcode, 0 );
			PutPoolDataByName( "ABSHEAD", "_error_code", 0, 0, errmsg, 0 );
			return( -1);
		}
	}
	return ( 0 );
}
